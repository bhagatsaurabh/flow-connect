import{_ as c,r as d,o as u,c as p,b as t,a as s,w as o,u as f,e}from"./app.6c1464b6.js";const m=[{name:"constructor",type:"constructor"}],g=[{name:"childs",type:"property"},{name:"flowNode",type:"property"},{name:"id",type:"property"},{name:"order",type:"property"}],y=[];var N={constructors:m,properties:g,methods:y};const b=t("h1",{id:"class-graphnode",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#class-graphnode","aria-hidden":"true"},"#"),e(" Class: GraphNode")],-1),w=e("Accessing all the higher order nodes that are connected to a "),z=e("Node"),v=e(" is difficult, since it has to be traversed through its "),x=e("Terminals"),G=e(", and a node can have multiple output terminals connected to multiple input terminals of other nodes."),S=t("br",null,null,-1),T=e("To make this graph of nodes in a "),P=e("Flow"),k=e(" accesible and feasible to traverse, this class provides a wrapper around "),C=e("Node"),R=e(" and stores direct references to all the connected "),B=e("Nodes"),F=e(" as its childs."),H=t("br",null,null,-1),M=e("The execution "),O=e("Graph"),V=e(" creates and maintains these graph nodes for each "),I=e("Node"),q=e(" of the "),A=e("Flow"),E=e("."),U=t("h2",{id:"hierarchy",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),e(" Hierarchy")],-1),j=t("h2",{id:"overview",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),e(" Overview")],-1),D=t("h2",{id:"constructor",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),e(" Constructor")],-1),J=e(" new GraphNode(flowNode: "),K=e("Node"),L=e("): "),Q=e("GraphNode"),W=e("Node"),X=e("GraphNode"),Y=t("h2",{id:"properties",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),e(" Properties")],-1),Z=t("h3",{id:"childs",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#childs","aria-hidden":"true"},"#"),e(" childs")],-1),$=e("GraphNode[]"),ee=e(" References to all the connected higher-order "),te=e("GraphNodes"),oe=e(". "),se=t("em",null,"[]",-1),ne=t("h3",{id:"flownode",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#flownode","aria-hidden":"true"},"#"),e(" flowNode")],-1),de=e("Node"),ae=e(" Reference to the actual "),re=e("Node"),ie=e(" in a "),he=e("Flow"),_e=e(". "),le=t("h3",{id:"id",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#id","aria-hidden":"true"},"#"),e(" id")],-1),ce=t("em",null,"string",-1),ue=e(" Unique identifier for each "),pe=e("GraphNode"),fe=e(". "),me=t("h3",{id:"order",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#order","aria-hidden":"true"},"#"),e(" order")],-1),ge=t("em",null,"number",-1),ye=e(" The order of the "),Ne=e("Node"),be=e("."),we=t("br",null,null,-1),ze=t("br",null,null,-1),ve=e(" This order gets updated as the structure of the graph (connected nodes in the flow) changes."),xe=t("br",null,null,-1),Ge=t("br",null,null,-1),Se=e(" 0"),Te=t("sup",null,"th",-1),Pe=e(" order nodes are the nodes that do not have any input, 1"),ke=t("sup",null,"st",-1),Ce=e(" order nodes accept inputs from 0"),Re=t("sup",null,"th",-1),Be=e(" order nodes, and so on. This order determines when a node will be processed, nodes get processed from lowest order to highest order."),Fe=t("br",null,null,-1),He=t("br",null,null,-1),Me=e(" The highest order nodes are the ones that do not produce any output and will execute last. "),Oe=e(" 0 "),Ve=t("h2",{id:"methods",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),e(" Methods")],-1),Ie=t("h3",{id:"serialize",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#serialize","aria-hidden":"true"},"#"),e(" serialize")],-1),qe=e(" serialize(): "),Ae=e("SerializedGraphNode"),Ee=e(" of "),Ue=e("Serializable"),je=e("."),De=e("serialize"),Je=e("SerializedGraphNode"),Ke=t("h3",{id:"deserialize",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#deserialize","aria-hidden":"true"},"#"),e(" deSerialize")],-1),Le=e(" deSerialize("),Qe=t("strong",null,"node: ",-1),We=e("Node"),Xe=e(", "),Ye=t("strong",null,"data: ",-1),Ze=e("SerializedGraphNode"),$e=e("): "),et=e("GraphNode"),tt=e("Node"),ot=e("SerializedGraphNode"),st=e("GraphNode"),nt={__name:"graph-node.html",setup(dt){return(at,rt)=>{const n=d("Ref"),h=d("Hierarchy"),_=d("Overview"),r=d("Param"),i=d("Method"),a=d("Property"),l=d("Icon");return u(),p("div",null,[b,t("p",null,[w,s(n,{to:"./node"},{default:o(()=>[z]),_:1}),v,s(n,{to:"./terminal"},{default:o(()=>[x]),_:1}),G,S]),t("p",null,[T,s(n,{to:"./flow"},{default:o(()=>[P]),_:1}),k,s(n,{to:"./node"},{default:o(()=>[C]),_:1}),R,s(n,{to:"./node"},{default:o(()=>[B]),_:1}),F,H]),t("p",null,[M,s(n,{to:"./graph"},{default:o(()=>[O]),_:1}),V,s(n,{to:"./node"},{default:o(()=>[I]),_:1}),q,s(n,{to:"./flow"},{default:o(()=>[A]),_:1}),E]),U,t("p",null,[s(h,{implement:[{name:"Serializable",link:"../interfaces/serializable.html"}]},null,8,["implement"])]),j,s(_,{data:f(N)},null,8,["data"]),D,s(i,{type:"constructor"},{signature:o(()=>[J,t("em",null,[s(n,{to:"./node"},{default:o(()=>[K]),_:1})]),L,t("em",null,[s(n,{to:"#class-graphnode"},{default:o(()=>[Q]),_:1})])]),params:o(()=>[s(r,{name:"flowNode"},{default:o(()=>[t("em",null,[s(n,{to:"./node"},{default:o(()=>[W]),_:1})])]),_:1})]),return:o(()=>[t("em",null,[s(n,{to:"#class-graphnode"},{default:o(()=>[X]),_:1})])]),_:1}),Y,Z,s(a,{type:"property",name:"childs"},{type:o(()=>[t("em",null,[s(n,{to:"./graph-node"},{default:o(()=>[$]),_:1})])]),desc:o(()=>[ee,s(n,{to:"#class-graphnode"},{default:o(()=>[te]),_:1}),oe]),default:o(()=>[se]),_:1}),ne,s(a,{type:"property",name:"flowNode"},{type:o(()=>[t("em",null,[s(n,{to:"./graph-node"},{default:o(()=>[de]),_:1})])]),desc:o(()=>[ae,s(n,{to:"./node"},{default:o(()=>[re]),_:1}),ie,s(n,{to:"./flow"},{default:o(()=>[he]),_:1}),_e]),_:1}),le,s(a,{type:"property",name:"id"},{type:o(()=>[ce]),desc:o(()=>[ue,s(n,{to:"#class-graphnode"},{default:o(()=>[pe]),_:1}),fe]),_:1}),me,s(a,{type:"property",name:"state"},{type:o(()=>[ge]),desc:o(()=>[ye,s(n,{to:"./node"},{default:o(()=>[Ne]),_:1}),be,we,ze,ve,xe,Ge,Se,Te,Pe,ke,Ce,Re,Be,Fe,He,Me]),default:o(()=>[Oe]),_:1}),Ve,Ie,s(i,{type:"method-implementation"},{signature:o(()=>[qe,t("em",null,[s(n,{to:"../interfaces/serialized-graphnode"},{default:o(()=>[Ae]),_:1})])]),inherit:o(()=>[s(l,{valign:"bottom",type:"implementation"}),Ee,s(n,{to:"../interfaces/serializable"},{default:o(()=>[Ue]),_:1}),je,s(n,{to:"../interfaces/serializable#serialize"},{default:o(()=>[De]),_:1})]),return:o(()=>[t("em",null,[s(n,{to:"../interfaces/serialized-graphnode"},{default:o(()=>[Je]),_:1})])]),_:1}),Ke,s(i,{type:"method-static"},{signature:o(()=>[Le,Qe,t("em",null,[s(n,{to:"./node"},{default:o(()=>[We]),_:1})]),Xe,Ye,t("em",null,[s(n,{to:"../interfaces/serialized-graphnode"},{default:o(()=>[Ze]),_:1})]),$e,t("em",null,[s(n,{to:"#class-graphnode"},{default:o(()=>[et]),_:1})])]),params:o(()=>[s(r,{name:"node"},{default:o(()=>[t("em",null,[s(n,{to:"./node"},{default:o(()=>[tt]),_:1})])]),_:1}),s(r,{name:"data"},{default:o(()=>[t("em",null,[s(n,{to:"../interfaces/serialized-graphnode"},{default:o(()=>[ot]),_:1})])]),_:1})]),return:o(()=>[t("em",null,[s(n,{to:"#class-graphnode"},{default:o(()=>[st]),_:1})])]),_:1})])}}};var ht=c(nt,[["__file","graph-node.html.vue"]]);export{ht as default};
