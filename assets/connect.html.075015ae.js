import{_ as o,r as c,o as p,c as u,b as s,a as t,w as e,e as n,d as i}from"./app.6c1464b6.js";const l={},r=s("h1",{id:"connections",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#connections","aria-hidden":"true"},"#"),n(" Connections")],-1),d=n("Connections are made between "),k=n("terminals"),_=n(" using Connectors. "),m=s("br",null,null,-1),h=n(" A "),b=n("Connector"),f=n(' virtually "connects" Terminals of two different '),v=n("Nodes"),N=n(", it also has a reference to the data being passed and both terminals that it connects."),g=s("br",null,null,-1),x=n(" Connections can be made interactively by dragging a terminal to another, or using the API. "),C=s("br",null,null,-1),y=s("br",null,null,-1),w=n("Terminal.connect"),V=i(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>timerNode<span class="token punctuation">.</span>outputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>randomNode<span class="token punctuation">.</span>inputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
randomNode<span class="token punctuation">.</span>outputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>multiplyNode<span class="token punctuation">.</span>inputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
numberSource<span class="token punctuation">.</span>outputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>multiplyNode<span class="token punctuation">.</span>inputs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
multiplyNode<span class="token punctuation">.</span>outputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>labelNode<span class="token punctuation">.</span>inputsUI<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function j(B,T){const a=c("Ref");return p(),u("div",null,[r,s("p",null,[d,t(a,{to:"/reference/api/classes/terminal"},{default:e(()=>[k]),_:1}),_,m,h,t(a,{to:"/reference/api/classes/connector"},{default:e(()=>[b]),_:1}),f,t(a,{to:"/reference/api/classes/node"},{default:e(()=>[v]),_:1}),N]),g,x,C,y,t(a,{to:"/reference/api/classes/terminal#connect"},{default:e(()=>[w]),_:1}),V])}var I=o(l,[["render",j],["__file","connect.html.vue"]]);export{I as default};
