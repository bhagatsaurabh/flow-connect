import{_ as p,r as s,o as l,c,a as e,b as n,w as i,e as a,d as r}from"./app.6c1464b6.js";var u="/flow-connect/images/standard-nodes/common/global-event.png";const d={},v=n("h2",{id:"standardnode-globalevent",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#standardnode-globalevent","aria-hidden":"true"},"#"),a(" StandardNode: GlobalEvent")],-1),k=n("img",{class:"zoomable",alt:"GlobalEvent standard node",src:u},null,-1),m=r(`<br><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> gEventEmitter <span class="token operator">=</span> flow<span class="token punctuation">.</span><span class="token function">createNode</span><span class="token punctuation">(</span><span class="token string">&quot;common/global-event&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">globalEventType</span><span class="token operator">:</span> GlobalEventType<span class="token punctuation">.</span>Emitter<span class="token punctuation">,</span>
  <span class="token literal-property property">globalEventName</span><span class="token operator">:</span> <span class="token string">&quot;reset&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> gEventReceiver <span class="token operator">=</span> flow<span class="token punctuation">.</span><span class="token function">createNode</span><span class="token punctuation">(</span><span class="token string">&quot;common/global-event&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">globalEventType</span><span class="token operator">:</span> GlobalEventType<span class="token punctuation">.</span>Receiver<span class="token punctuation">,</span>
  <span class="token literal-property property">globalEventName</span><span class="token operator">:</span> <span class="token string">&quot;reset&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="default-state" tabindex="-1"><a class="header-anchor" href="#default-state" aria-hidden="true">#</a> Default State</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token function">uuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2>`,6),b=a(`{
  globalEventType: `),g=a("GlobalEventType"),h=a(`;
  globalEventName: string;
}
`);function _(f,y){const t=s("Hierarchy"),o=s("Ref");return l(),c("div",null,[v,k,e(t,{extend:{name:"Node",link:"../../api/classes/node.html"}},null,8,["extend"]),m,n("pre",null,[b,e(o,{to:"../../api/enums/global-event-type"},{default:i(()=>[g]),_:1}),h])])}var x=p(d,[["render",_],["__file","global-event.html.vue"]]);export{x as default};
