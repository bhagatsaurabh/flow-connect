import{_ as o,r as s,o as r,c as l,a as e,b as a,w as i,e as n,d as c}from"./app.6c1464b6.js";var d="/flow-connect/images/standard-nodes/ui/dial.png";const u={},k=a("h2",{id:"standardnode-dial",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#standardnode-dial","aria-hidden":"true"},"#"),n(" StandardNode: Dial")],-1),m=a("img",{class:"zoomable",alt:"Dial standard node",src:d},null,-1),v=c(`<br><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> dial <span class="token operator">=</span> flow<span class="token punctuation">.</span><span class="token function">createNode</span><span class="token punctuation">(</span><span class="token string">&quot;ui/dial&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="default-state" tabindex="-1"><a class="header-anchor" href="#default-state" aria-hidden="true">#</a> Default State</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2>`,6),h=n(`{
  height: number;
  dialStyle?: `),_=n("DialStyle"),b=n(`;
}
`);function f(y,x){const t=s("Hierarchy"),p=s("Ref");return r(),l("div",null,[k,m,e(t,{extend:{name:"Node",link:"../../api/classes/node.html"}},null,8,["extend"]),v,a("pre",null,[h,e(p,{to:"../../api/interfaces/dial-style"},{default:i(()=>[_]),_:1}),b])])}var N=o(u,[["render",f],["__file","dial.html.vue"]]);export{N as default};
