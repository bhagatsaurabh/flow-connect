import{_ as s,r as e,o as t,c as o,a as c,b as n,e as r,d as p}from"./app.6c1464b6.js";var i="/flow-connect/images/standard-nodes/math/func.png";const l={},d=n("h2",{id:"standardnode-func",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#standardnode-func","aria-hidden":"true"},"#"),r(" StandardNode: Func")],-1),u=n("img",{class:"zoomable",alt:"Func standard node",src:i},null,-1),v=p(`<br><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> func <span class="token operator">=</span> flow<span class="token punctuation">.</span><span class="token function">createNode</span><span class="token punctuation">(</span><span class="token string">&quot;math/func&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">expression</span><span class="token operator">:</span> <span class="token string">&quot;sin(t) + 0.2cos(2.8t)&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="default-state" tabindex="-1"><a class="header-anchor" href="#default-state" aria-hidden="true">#</a> Default State</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">newVar</span><span class="token operator">:</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">expression</span><span class="token operator">:</span> <span class="token string">&quot;a*sin(a^2)+cos(a*tan(a))&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><pre>{
  expression?: string;
}
</pre>`,7);function h(k,m){const a=e("Hierarchy");return t(),o("div",null,[d,u,c(a,{extend:{name:"Node",link:"../../api/classes/node.html"}},null,8,["extend"]),v])}var _=s(l,[["render",h],["__file","func.html.vue"]]);export{_ as default};
