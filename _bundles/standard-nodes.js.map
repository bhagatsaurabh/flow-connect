{"version":3,"sources":["webpack://flow-connect/webpack/universalModuleDefinition","webpack://flow-connect/./src/standard-nodes/basic/timer.ts","webpack://flow-connect/./src/standard-nodes/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;ACTA,wCAA4C;AAC5C,2CAAiD;AAG1C,IAAM,KAAK,GAAG,UAAC,IAAU,EAAE,OAAgC;IAAhC,sCAAgC;IAC9D,IAAI,WAAW,GAAW,MAAM,CAAC,SAAS,CAAC;IAE3C,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CACtB,OAAO,CAAC,IAAI,IAAI,OAAO,EACvB,OAAO,CAAC,QAAQ,IAAI,IAAI,gBAAO,CAAC,EAAE,EAAE,EAAE,CAAC,EACvC,OAAO,CAAC,KAAK,IAAI,GAAG,EACpB,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAC1C,OAAO,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,EAC5D,OAAO,CAAC,aAAa,IAAI,EAAE,EAC3B,OAAO,CAAC,KAAK,CAAC,CAAC,uBAAM,OAAO,CAAC,KAAK,KAAE,KAAK,EAAE,IAAI,IAAG,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CACtE,CAAC;IAEF,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAE1G,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,EAAE,cAAM,kBAAW,GAAG,MAAM,CAAC,SAAS,EAA9B,CAA8B,CAAC,CAAC;IACvE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,EAAE;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QACpC,IAAI,OAAO,GAAG,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,WAAW,GAAG,OAAO,CAAC;SACzB;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAzBW,aAAK,SAyBhB;;;;;;;;;;;;AC9BF,qCAAuC;AAEvC,IAAiB,aAAa,CAE7B;AAFD,WAAiB,aAAa;IACZ,mBAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AACtC,CAAC,EAFgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAE7B","file":"standard-nodes.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import { Flow } from \"../../core/flow\";\r\nimport { Vector2 } from \"../../math/vector\";\r\nimport { InputType } from \"../../math/constants\";\r\nimport { NodeCreatorOptions } from \"../../core/interfaces\";\r\n\r\nexport const Timer = (flow: Flow, options: NodeCreatorOptions = {}) => {\r\n    let lastTrigger: number = Number.MIN_VALUE;\r\n\r\n    let node = flow.createNode(\r\n        options.name || 'Timer',\r\n        options.position || new Vector2(50, 50),\r\n        options.width || 150,\r\n        [], [{ name: 'timer', dataType: 'event' }],\r\n        options.style || { padding: 10, spacing: 10, rowHeight: 10 },\r\n        options.terminalStyle || {},\r\n        options.props ? { ...options.props, delay: 1000 } : { delay: 1000 }\r\n    );\r\n\r\n    node.ui.append(node.createInput(node.props.delay, 'delay', false, false, 20, { type: InputType.Number }));\r\n\r\n    flow.flowConnect.on('tickreset', () => lastTrigger = Number.MIN_VALUE);\r\n    flow.flowConnect.on('tick', () => {\r\n        let current = flow.flowConnect.time;\r\n        if (current - lastTrigger >= node.props.delay) {\r\n            node.outputs[0].emit(null);\r\n            lastTrigger = current;\r\n        }\r\n    });\r\n\r\n    return node;\r\n};","import * as timer from './basic/timer';\r\n\r\nexport namespace StandardNodes {\r\n    export import Timer = timer.Timer;\r\n}"],"sourceRoot":""}