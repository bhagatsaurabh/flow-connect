{"version":3,"sources":["webpack://flow-connect/webpack/universalModuleDefinition","webpack://flow-connect/./src/core/color.ts","webpack://flow-connect/./src/core/connector.ts","webpack://flow-connect/./src/core/flow.ts","webpack://flow-connect/./src/core/graph.ts","webpack://flow-connect/./src/core/group.ts","webpack://flow-connect/./src/core/hooks.ts","webpack://flow-connect/./src/core/index.ts","webpack://flow-connect/./src/core/node.ts","webpack://flow-connect/./src/core/subflow-node.ts","webpack://flow-connect/./src/core/terminal.ts","webpack://flow-connect/./src/core/tunnel-node.ts","webpack://flow-connect/./src/flow-connect.ts","webpack://flow-connect/./src/math/constants.ts","webpack://flow-connect/./src/math/index.ts","webpack://flow-connect/./src/math/vector.ts","webpack://flow-connect/./src/resource/icons.ts","webpack://flow-connect/./src/ui/button.ts","webpack://flow-connect/./src/ui/container.ts","webpack://flow-connect/./src/ui/display.ts","webpack://flow-connect/./src/ui/horizontal-layout.ts","webpack://flow-connect/./src/ui/image.ts","webpack://flow-connect/./src/ui/index.ts","webpack://flow-connect/./src/ui/input.ts","webpack://flow-connect/./src/ui/label.ts","webpack://flow-connect/./src/ui/select.ts","webpack://flow-connect/./src/ui/slider.ts","webpack://flow-connect/./src/ui/source.ts","webpack://flow-connect/./src/ui/toggle.ts","webpack://flow-connect/./src/ui/ui-node.ts","webpack://flow-connect/./src/utils/avl-tree.ts","webpack://flow-connect/./src/utils/index.ts","webpack://flow-connect/./src/utils/logger.ts","webpack://flow-connect/./src/utils/utils.ts","webpack://flow-connect/webpack/bootstrap","webpack://flow-connect/webpack/startup"],"names":["root","factory","exports","module","define","amd","i","a","self","Random","Color","Uint8ClampedArray","Math","floor","getRandom","hexToRGBA","hex","parseInt","slice","_componentToHex","c","toString","length","rgbaToHex","rgba","rgbaToString","rgbaToCSSString","normalize","toFixed","serialize","this","rgbaValue","deSerialize","data","hexValue","rgbaString","rgbaCSSString","_data","end","call","flow","state","FlowState","Running","executionGraph","GraphState","FullRun","setDirtyNode","endNode","completeConnection","destination","start","node","startNode","connectors","includes","push","floatingTip","currHitTerminal","onExit","connect","removeConnection","splice","indexOf","setData","canConnect","source","type","rules","dataType","render","flowConnect","context","save","_render","restore","offContext","_offRender","ax","dx","ay","renderState","nodeState","NodeState","MAXIMIZED","position","x","y","width","style","terminalStripMargin","radius","titleHeight","dy","offset","Vector2","Distance","bx","by","cx","cy","midx","midy","beginPath","moveTo","quadraticCurveTo","strokeStyle","lineWidth","stroke","color","id","startId","endId","startNodeId","endNodeId","Connector","isDeserialization","getNewGUID","Constant","DefaultConnectorStyle","Hooks","registerListeners","on","listeners","deregisterListeners","off","existsInFlow","Object","values","nodes","subFlow","addInput","name","flowInput","TunnelNode","inputs","sortedNodes","add","addOutput","flowOutput","outputs","addSubFlow","subFlowNode","SubFlowNode","map","inputNode","outputNode","createNode","terminalStyle","props","inTerminals","outTerminals","Node","removeNode","nodeOrID","removeConnector","floatingConnector","removeAllFocus","forEach","focused","groups","group","connector","startGlobalTime","stop","Stopped","stopGlobalTime","terminalTypeColors","input","output","Flow","serializedNode","serializedGroup","Group","serializedInput","serializedOutput","serializedConnector","startTerminal","concat","outputsUI","find","terminal","endTerminal","inputsUI","Graph","hitColorToNode","hitColorToGroup","AVLTree","b","zIndex","nodeId","flowNode","order","childs","child","GraphNode","graphNode","nodeToGraphNode","sourceNode","destinationNode","startGraphNode","endGraphNode","updateOrder","currNode","shift","groupedNodes","run","Idle","partialRun","Promise","resolve","reject","processDirtyNodes","error","Log","keys","dirtyNodes","then","clearDirtyNode","sort","log","graph","serializedGraphNodes","deSerializedGraphNodes","serializedGroupedNodes","index","serializedGraphNode","key","childId","_name","trim","computeTextMetrics","_position","updateRenderState","recomputeNodePositions","setHitColor","hitColor","font","fontSize","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","d","document","createElement","textContent","body","appendChild","offsetHeight","removeChild","realPos","transform","intersects","canvasDimensions","height","scale","setContainedNodes","groupRealPos","filter","viewport","ViewPort","INSIDE","nodeRealPos","ui","nodeDeltas","subtract","OUTSIDE","offGroupContext","borderColor","fillStyle","strokeRect","fillRect","titleColor","textBaseline","fillText","onClick","screenPosition","realPosition","thisRealPosition","showGenericInput","max","replace","fontFamily","value","nodeDelata","serializedVector","DefaultGroupStyle","colors","DefaultGroupColors","eventKey","callback","registeredEvents","lastId","args","hitColorToNodeButton","deltaX","nodeButtonSize","offUIContext","_offUIRender","align","NodeButton","reflow","update","_zIndex","remove","_width","setupProps","Proxy","set","target","prop","propObservers","oldValue","addPropObserver","propName","removePropObserver","addNodeButton","newNodeButton","noOfButtons","nodeButtons","nodeButton","Align","Left","nodeButtonSpacing","terminalRowHeight","padding","recalculateInputTerminals","recalculateOutputTerminals","lod","LOD","LOD2","LOD1","LOD0","INTERSECT","getHitTerminal","hitTerminal","hitColorToTerminal","onEnter","getHitUINode","uiNode","hitColorToUI","Container","getHitNodeButton","inputTerminalsWidth","outputTerminalsWidth","titleFontSize","titleFont","strokeRoundRect","inputTerminalsStripWidth","outputTerminalsStripWidth","addTerminal","Terminal","TerminalType","IN","getInput","inputTerminal","currTerm","getInputs","setOutput","outputTerminal","setOutputs","outputData","Map","entries","entry","curr","groupedConnectors","outputDataIterator","next","has","get","gCntrsIterator","toggleNodeState","MINIMIZED","dispose","onDown","getImageData","currHitUINode","onOver","prevHitTerminal","hitUINode","prevHitUINode","onUp","clone","hitNodeButton","onDrag","draggable","onContextMenu","createLabel","text","Label","createImage","Image","createSlider","min","precision","Slider","createHozLayout","HorizontalLayout","createButton","Button","createToggle","Toggle","createSelect","options","Select","createSource","accept","Source","createDisplay","Display","createInput","Input","DefaultNodeStyle","OUT","maximizeButtonColor","tunnel","proxyTerminal","expandButtonColor","lineTo","closePath","Right","focus","arc","PI","focusColor","fill","shadowBlur","shadowColor","offUIRender","otherTerminal","newConnector","cursor","pop","onEvent","emit","DefaultTerminalStyle","Zero","_proxyTerminal","proxyTerminalId","_context","_offContext","_offUIContext","_offGroupContext","canvas","_transform","startTime","performance","now","registerChangeListeners","throttle","addEventListener","window","requestAnimationFrame","calculateCanvasDimension","ResizeObserver","observe","prepareCanvas","mount","HTMLDivElement","clientWidth","clientHeight","HTMLCanvasElement","getContext","setupHitCanvas","OffscreenCanvas","OffscreenCanvasRenderingContext2D","offCanvas","offUICanvas","offGroupCanvas","attachStyles","touchAction","inputStyle","innerHTML","getElementsByTagName","boundingRect","getBoundingClientRect","top","round","scrollY","left","scrollX","polyfill","CanvasRenderingContext2D","prototype","roundRect","fillRoundRect","registerEvents","dragDelta","prevPanPosition","prevPinchDistance","onkeydown","ev","keymap","onkeyup","onpointerdown","currFlow","addPointer","pointerId","getRelativePosition","pointers","currHitNode","getHitNode","Number","MAX_SAFE_INTEGER","touchControls","groupStartPoint","currGroup","currHitGroup","getHitGroup","fallbackConnection","onpointerup","hitNode","removePointer","inverseTransform","handleGrouping","newGroup","handleConnection","onpointerout","prevHitNode","onpointermove","nodeIndex","delta","updatePointer","currPinchDistance","handleZoom","Midpoint","pinchScaleDelta","abs","hitGroup","findIndex","multiplyInPlace","updateTransform","pointerType","onclick","oncontextmenu","preventDefault","onwheel","deltaY","wheelScaleDelta","setGenericInput","genericInput","className","visibility","pointerEvents","onblur","onchange","styles","attributes","activeElement","pointer","zoomIn","origin","scaleDelta","maxScale","minScale","intersection","oldConnector","clientX","clientY","scaleOrigin","translate","realSpaceOrigin","translateSelf","scaleSelf","inverse","setTransform","clear","identity","clearRect","_startGlobalTime","timerId","bind","allFlowsStopped","flows","cancelAnimationFrame","frameId","createFlow","DefaultRules","rootFlow","fromJson","json","JSON","parse","toJson","serializedFlow","stringify","DOMMatrix","FlowConnect","InputType","TAU","RED","GREEN","BLUE","random","spacing","rowHeight","DefaultButtonStyle","backgroundColor","DefaultContainerStyle","shadowOffset","borderWidth","DefaultDisplayStyle","DefaultHorizontalLayoutStyle","DefaultImageStyle","DefaultInputStyle","border","Text","DefaultLabelStyle","DefaultSelectStyle","arrowColor","DefaultSliderStyle","thumbColor","railHeight","thumbRadius","DefaultSourceStyle","DefaultToggleStyle","UIType","arg1","arg2","addInPlace","multiply","subtractInPlace","transformPoint","transformInPlace","transformedPoint","clamp","minX","maxX","minY","maxY","vector1OrX1","vector2OrY1","x2","y2","sqrt","pow","vector1","vector2","xOrDOMPoint","DOMPoint","fileIcon","UINode","paint","paintLOD1","offPaint","label","onPropChange","disabled","_node","children","shadowOffsetX","shadowOffsetY","terminalsDisplayHeight","uiContainer","serializedChild","contentWidth","customRender","customRenderer","_rendering","finally","drawImage","renderer","availableWidth","maxHeight","childWidth","grow","hozLayout","imageCanvas","ratio","sourceString","onload","onerror","src","_value","val","inputEl","newValue","textAlign","spellcheck","event","_text","displayText","_selected","selected","direction","lineCap","thumbFill","denormalize","parseFloat","_file","file","substring","lastIndexOf","htmlInput","files","click","_checked","checked","_disabled","append","Array","isArray","right","AVLTreeNode","rightRotate","newRoot","leftRotate","getBalance","res","_insert","dataRefToTreeNode","dataToTreeNodeMapper","size","newNode","comparator","balance","deleted","_delete","temp","currData","minValue","action","_inorder","_reverseInorder","LogLevel","trace","LOG_LEVEL","TRACE","console","apply","debug","DEBUG","info","INFO","LOG","warn","WARN","ERROR","S4","normalized","start1X","start1Y","end1X","end1Y","start2X","start2Y","end2X","end2Y","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"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","file":"flow-connect.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import { getRandom, normalize } from \"../utils/utils\";\r\nimport { Serializable, SerializedColor } from \"./interfaces\";\r\n\r\nexport class Color implements Serializable {\r\n  hexValue: string;\r\n  rgbaValue: Uint8ClampedArray | number[];\r\n  rgbaString: string;\r\n  rgbaCSSString: string;\r\n\r\n  constructor(rgba: Uint8ClampedArray | number[]) {\r\n    this.rgbaValue = rgba;\r\n    this.hexValue = Color.rgbaToHex(this.rgbaValue);\r\n    this.rgbaString = Color.rgbaToString(this.rgbaValue);\r\n    this.rgbaCSSString = Color.rgbaToCSSString(this.rgbaValue);\r\n  }\r\n\r\n  static Random(): Color {\r\n    return new Color(new Uint8ClampedArray(\r\n      [Math.floor(getRandom(0, 255)), Math.floor(getRandom(0, 255)), Math.floor(getRandom(0, 255)), 255]\r\n    ));\r\n  }\r\n  static hexToRGBA(hex: string): Uint8ClampedArray {\r\n    return new Uint8ClampedArray([parseInt(hex.slice(1, 3), 16), parseInt(hex.slice(3, 5), 16), parseInt(hex.slice(5, 7), 16), parseInt(hex.slice(7, 9), 16)]);\r\n  }\r\n  private static _componentToHex(c: number) {\r\n    let hex = c.toString(16);\r\n    return hex.length === 1 ? '0' + hex : hex;\r\n  }\r\n  static rgbaToHex(rgba: number[] | Uint8ClampedArray): string {\r\n    return \"#\" + Color._componentToHex(rgba[0]) + Color._componentToHex(rgba[1]) + Color._componentToHex(rgba[2]) + Color._componentToHex(rgba[3]);\r\n  }\r\n  static rgbaToString(rgba: Uint8ClampedArray | number[]): string {\r\n    return `${rgba[0]}:${rgba[1]}:${rgba[2]}:${rgba[3]}`;\r\n  }\r\n  static rgbaToCSSString(rgba: Uint8ClampedArray | number[]): string {\r\n    return `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${normalize(rgba[3], 0, 255).toFixed(3)})`;\r\n  }\r\n\r\n  serialize(): SerializedColor {\r\n    return {\r\n      rgba: [this.rgbaValue[0], this.rgbaValue[1], this.rgbaValue[2], this.rgbaValue[3]]\r\n    }\r\n  }\r\n  static deSerialize(data: SerializedColor) {\r\n    return new Color(data.rgba);\r\n  }\r\n}\r\n","import { Vector2 } from \"../math/vector\";\r\nimport { Constant, FlowState, GraphState, NodeState } from \"../math/constants\";\r\nimport { getNewGUID } from \"../utils/utils\";\r\nimport { Flow } from \"./flow\";\r\nimport { Terminal } from './terminal';\r\nimport { ConnectorStyle, Serializable, SerializedConnector } from \"./interfaces\";\r\nimport { Node } from \"./node\";\r\n\r\nexport class Connector implements Serializable {\r\n  start: Terminal;\r\n  end: Terminal;\r\n  startNode: Node;\r\n  endNode: Node;\r\n\r\n  /** @hidden */\r\n  _data: any;\r\n\r\n  get data(): any { return this._data; }\r\n  set data(data: any) {\r\n    this._data = data;\r\n    this.end && this.end.call('data', data);\r\n    if (this.flow.state === FlowState.Running && this.flow.executionGraph.state !== GraphState.FullRun) {\r\n      this.flow.executionGraph.setDirtyNode(this.endNode);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public flow: Flow,\r\n    start: Terminal,\r\n    end: Terminal,\r\n    public floatingTip: Vector2,\r\n    public style: ConnectorStyle = {},\r\n    public id: string = getNewGUID(),\r\n    isDeserialization: boolean = false\r\n  ) {\r\n\r\n    this.style = { ...Constant.DefaultConnectorStyle(), ...style };\r\n    this.start = start;\r\n    this.end = end;\r\n    if (this.start) this.startNode = this.start.node;\r\n    if (this.end) this.endNode = this.end.node;\r\n    if (start && end) {\r\n      this.floatingTip = null;\r\n\r\n      this.start.connectors.push(this);\r\n      if (this.end.connectors.length > 0) {\r\n        this.end.connectors[0].removeConnection();\r\n        this.end.connectors[0] = this;\r\n      } else this.end.connectors.push(this);\r\n\r\n      if (!isDeserialization) this.flow.executionGraph.connect(this.startNode, this.endNode);\r\n      this.start.call('connect', this.start, this);\r\n      this.end.call('connect', this.end, this);\r\n    };\r\n  }\r\n\r\n  /** @hidden */\r\n  completeConnection(destination: Terminal) {\r\n    if (!this.start) {\r\n      this.start = destination;\r\n      this.startNode = this.start.node;\r\n    } else {\r\n      this.end = destination;\r\n      this.endNode = this.end.node;\r\n    }\r\n\r\n    if (!this.start.connectors.includes(this)) this.start.connectors.push(this);\r\n    this.end.connectors[0] = this;\r\n    this.floatingTip = null;\r\n\r\n    this.startNode.currHitTerminal && this.startNode.currHitTerminal.onExit(null, null);\r\n    this.startNode.currHitTerminal = null;\r\n    this.endNode.currHitTerminal && this.endNode.currHitTerminal.onExit(null, null);\r\n    this.endNode.currHitTerminal = null;\r\n\r\n    this.flow.executionGraph.connect(this.startNode, this.endNode);\r\n    this.start.call('connect', this.start, this);\r\n    this.end.call('connect', this.end, this);\r\n  }\r\n  /** @hidden */\r\n  removeConnection() {\r\n    if (this.start) {\r\n      this.start.connectors.includes(this) && this.start.connectors.splice(this.start.connectors.indexOf(this), 1);\r\n      if (this.startNode.currHitTerminal) {\r\n        this.startNode.currHitTerminal.onExit(null, null);\r\n        this.startNode.currHitTerminal = null;\r\n      }\r\n    }\r\n    if (this.end) {\r\n      this.end.connectors.includes(this) && this.end.connectors.splice(this.end.connectors.indexOf(this), 1);\r\n      if (this.endNode.currHitTerminal) {\r\n        this.endNode.currHitTerminal.onExit(null, null);\r\n        this.endNode.currHitTerminal = null;\r\n      }\r\n    }\r\n  }\r\n  /** @hidden */\r\n  setData(data: any) {\r\n    this._data = data;\r\n    this.end && this.end.call('data', data);\r\n  }\r\n  canConnect(destination: Terminal): boolean {\r\n    let source = !this.start ? this.end : this.start;\r\n\r\n    if (!destination) return false;\r\n    if (source === destination) return false;\r\n    if (source.node === destination.node) return false;\r\n    if (source.type === destination.type) return false;\r\n    if (!this.flow.rules[source.dataType].includes(destination.dataType)) return false;\r\n    if (!this.flow.executionGraph.canConnect(source.node, destination.node)) return false;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    this.flow.flowConnect.context.save();\r\n    this._render();\r\n    this.flow.flowConnect.context.restore();\r\n\r\n    this.flow.flowConnect.offContext.save();\r\n    this._offRender();\r\n    this.flow.flowConnect.offContext.restore();\r\n  }\r\n  private _render() {\r\n    let ax, ay, dx, dy;\r\n    if (this.start) {\r\n      if (this.startNode.renderState.nodeState === NodeState.MAXIMIZED)\r\n        [ax, ay] = [this.start.position.x, this.start.position.y];\r\n      else\r\n        [ax, ay] = [this.startNode.position.x + this.startNode.width + this.startNode.style.terminalStripMargin + this.start.style.radius, this.startNode.position.y + this.startNode.style.titleHeight / 2];\r\n    } else\r\n      [ax, ay] = [this.floatingTip.x, this.floatingTip.y];\r\n\r\n    if (this.end) {\r\n      if (this.endNode.renderState.nodeState === NodeState.MAXIMIZED)\r\n        [dx, dy] = [this.end.position.x, this.end.position.y];\r\n      else\r\n        [dx, dy] = [this.endNode.position.x - this.endNode.style.terminalStripMargin - this.end.style.radius, this.endNode.position.y + this.endNode.style.titleHeight / 2];\r\n    } else\r\n      [dx, dy] = [this.floatingTip.x, this.floatingTip.y];\r\n\r\n    let offset = Vector2.Distance(ax, ay, dx, dy);\r\n    offset *= .2;\r\n\r\n    let [bx, by] = [ax + offset, ay];\r\n    let [cx, cy] = [dx - offset, dy];\r\n    let [midx, midy] = [(bx + cx) / 2, (by + cy) / 2];\r\n\r\n    let context = this.flow.flowConnect.context;\r\n    context.beginPath();\r\n    context.moveTo(ax, ay);\r\n    context.quadraticCurveTo(bx, by, midx, midy);\r\n    context.moveTo(midx, midy);\r\n    context.quadraticCurveTo(cx, cy, dx, dy);\r\n    context.strokeStyle = 'grey';\r\n    context.lineWidth = this.style.width + 2;\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.moveTo(ax, ay);\r\n    context.quadraticCurveTo(bx, by, midx, midy);\r\n    context.moveTo(midx, midy);\r\n    context.quadraticCurveTo(cx, cy, dx, dy);\r\n    context.strokeStyle = this.style.color;\r\n    context.lineWidth = this.style.width;\r\n    context.stroke();\r\n  }\r\n  private _offRender() { }\r\n\r\n  serialize(): SerializedConnector {\r\n    return {\r\n      id: this.id,\r\n      startId: this.start.id,\r\n      endId: this.end.id,\r\n      startNodeId: this.startNode.id,\r\n      endNodeId: this.endNode.id,\r\n      style: this.style\r\n    }\r\n  }\r\n  static deSerialize(flow: Flow, start: Terminal, end: Terminal, data: SerializedConnector): Connector {\r\n    return new Connector(flow, start, end, null, data.style, data.id, true);\r\n  }\r\n}\r\n","import { FlowConnect } from \"../flow-connect\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Node } from \"./node\";\r\nimport { Hooks } from './hooks';\r\nimport { Group } from './group';\r\nimport { Connector } from './connector';\r\nimport { AVLTree } from \"../utils/avl-tree\";\r\nimport { NodeStyle, Serializable, SerializedFlow, TerminalStyle } from './interfaces';\r\nimport { SubFlowNode } from \"./subflow-node\";\r\nimport { TunnelNode } from \"./tunnel-node\";\r\nimport { getNewGUID } from \"../utils/utils\";\r\nimport { FlowState } from \"../math/constants\";\r\nimport { Graph } from \"./graph\";\r\nimport { Rules } from \"./interfaces\";\r\nimport { TerminalTypeColors } from \"./interfaces\";\r\n\r\n/** A Flow is a set of [[Node]]s, [[Connector]]s and [[Group]]s, it can also contain [[SubFlowNode]]s thereby creating a tree of Flows. */\r\nexport class Flow extends Hooks implements Serializable {\r\n  sortedNodes: AVLTree<Node>;\r\n  nodes: { [id: string]: Node };\r\n  groups: Group[];\r\n  connectors: { [id: string]: Connector };\r\n  inputs: TunnelNode[];\r\n  outputs: TunnelNode[];\r\n  state: FlowState = FlowState.Stopped;\r\n\r\n  /** @hidden */\r\n  hitColorToNode: { [color: string]: Node };\r\n  /** @hidden */\r\n  hitColorToGroup: { [color: string]: Group };\r\n  /** @hidden */\r\n  listeners: { [eventKey: string]: number } = {};\r\n  /** @hidden */\r\n  executionGraph: Graph;\r\n\r\n  constructor(\r\n    public flowConnect: FlowConnect,\r\n    public name: string,\r\n    public rules: Rules,\r\n    public terminalTypeColors: TerminalTypeColors,\r\n    public id: string = getNewGUID()\r\n  ) {\r\n\r\n    super();\r\n    this.nodes = {};\r\n    this.groups = [];\r\n    this.connectors = {};\r\n    this.hitColorToNode = {};\r\n    this.hitColorToGroup = {};\r\n    this.sortedNodes = new AVLTree((a: Node, b: Node) => (a.zIndex - b.zIndex), (node: Node) => node.id);\r\n    this.inputs = [];\r\n    this.outputs = [];\r\n    this.executionGraph = new Graph();\r\n\r\n    this.registerListeners();\r\n\r\n    this.flowConnect.on('tick', () => {\r\n      if (this.state === FlowState.Running) this.call('tick', this);\r\n    });\r\n  }\r\n\r\n  private registerListeners() {\r\n    let id = this.flowConnect.on('transform', () => this.call('transform', this));\r\n    this.listeners['transform'] = id;\r\n  }\r\n  /** @hidden */\r\n  deregisterListeners() {\r\n    this.flowConnect.off('transform', this.listeners['transform']);\r\n    delete this.listeners['transform'];\r\n  }\r\n  /** @hidden */\r\n  existsInFlow(flow: Flow): boolean {\r\n    for (let node of Object.values(this.nodes)) {\r\n      if ((node as SubFlowNode).subFlow === flow) return true;\r\n      else if ((node as SubFlowNode).subFlow) {\r\n        return (node as SubFlowNode).subFlow.existsInFlow(flow);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addInput(name: string, dataType: string, position: Vector2): TunnelNode {\r\n    let flowInput = new TunnelNode(this, 'Input', position, 100, [], [{ name: name, dataType: dataType }], {}, {}, {});\r\n\r\n    this.inputs.push(flowInput);\r\n    this.nodes[flowInput.id] = flowInput;\r\n    this.sortedNodes.add(flowInput);\r\n    this.executionGraph.add(flowInput);\r\n\r\n    this.call('add-input', this, flowInput);\r\n    return flowInput;\r\n  }\r\n  addOutput(name: string, dataType: string, position: Vector2): TunnelNode {\r\n    let flowOutput = new TunnelNode(this, 'Output', position, 100, [{ name: name, dataType: dataType }], [], {}, {}, {});\r\n\r\n    this.outputs.push(flowOutput);\r\n    this.nodes[flowOutput.id] = flowOutput;\r\n    this.sortedNodes.add(flowOutput);\r\n    this.executionGraph.add(flowOutput);\r\n\r\n    this.call('add-output', this, flowOutput);\r\n    return flowOutput;\r\n  }\r\n  addSubFlow(flow: Flow, position: Vector2): SubFlowNode {\r\n    let subFlowNode = new SubFlowNode(\r\n      this,\r\n      flow.name,\r\n      position,\r\n      150,\r\n      {}, {}, {},\r\n      flow.inputs.map(inputNode => { return { name: inputNode.outputs[0].name, dataType: inputNode.outputs[0].dataType } }),\r\n      flow.outputs.map(outputNode => { return { name: outputNode.inputs[0].name, dataType: outputNode.inputs[0].dataType } }),\r\n      flow\r\n    );\r\n    this.nodes[subFlowNode.id] = subFlowNode;\r\n    this.sortedNodes.add(subFlowNode);\r\n    this.executionGraph.add(subFlowNode);\r\n    return subFlowNode;\r\n  }\r\n  createNode(name: string, position: Vector2, width: number, inputs?: any[], outputs?: any[], style: NodeStyle = {}, terminalStyle: TerminalStyle = {}, props?: { [key: string]: any }): Node {\r\n    let inTerminals: any[] = [], outTerminals: any[] = [];\r\n    if (typeof inputs !== 'undefined') inTerminals = inputs;\r\n    if (typeof outputs !== 'undefined') outTerminals = outputs;\r\n    let node = new Node(\r\n      this,\r\n      name,\r\n      position,\r\n      width,\r\n      inTerminals,\r\n      outTerminals,\r\n      style,\r\n      terminalStyle,\r\n      props\r\n    );\r\n\r\n    this.nodes[node.id] = node;\r\n    this.sortedNodes.add(node);\r\n    this.executionGraph.add(node);\r\n\r\n    return node;\r\n  }\r\n  removeNode(nodeOrID: Node | string) {\r\n    /*\r\n    if (nodeOrID instanceof Node) nodeOrID = nodeOrID.id;\r\n \r\n    let queue = [];\r\n    let currentNode;\r\n    queue.push(this.renderTree);\r\n \r\n    while ((currentNode = queue.shift())) {\r\n      if (currentNode.id == nodeOrID) {\r\n        currentNode.transform.parent.childs.splice(currentNode.transform.parent.childs.indexOf(currentNode.transform), 1);\r\n      } else {\r\n        currentNode.transform.childs.forEach((child) => {\r\n          queue.push(child.node);\r\n        });\r\n      }\r\n    }\r\n    */\r\n  }\r\n  removeConnector(id: string) {\r\n    if (this.connectors[id] === this.flowConnect.floatingConnector) this.flowConnect.floatingConnector = null;\r\n    delete this.connectors[id];\r\n  }\r\n  removeAllFocus() {\r\n    Object.values(this.nodes).forEach(node => node.focused = false);\r\n  }\r\n  render() {\r\n    this.groups.forEach(group => group.render());\r\n    Object.values(this.connectors).forEach(connector => connector.render());\r\n    this.sortedNodes.forEach(node => node.render());\r\n  }\r\n  start() {\r\n    if (this.state === FlowState.Running) return;\r\n\r\n    this.state = FlowState.Running;\r\n    this.call('start', this);\r\n    this.flowConnect.startGlobalTime();\r\n\r\n    this.executionGraph.start();\r\n  }\r\n  stop() {\r\n    if (this.state === FlowState.Stopped) return;\r\n    // what if GraphState is Running ?\r\n    this.state = FlowState.Stopped;\r\n    this.call('stop', this);\r\n    this.flowConnect.stopGlobalTime();\r\n\r\n    Object.values(this.nodes).forEach(node => {\r\n      if (node instanceof SubFlowNode) {\r\n        node.subFlow.stop();\r\n        // maybe stop in reverse execution sequence... ?\r\n      }\r\n    })\r\n  }\r\n\r\n  serialize(): SerializedFlow {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      rules: this.rules,\r\n      terminalTypeColors: this.terminalTypeColors,\r\n      nodes: Object.values(this.nodes).map(node => node.serialize()),\r\n      groups: this.groups.map(group => group.serialize()),\r\n      connectors: Object.values(this.connectors).map(connector => connector.serialize()),\r\n      inputs: this.inputs.map(input => input.serialize()),\r\n      outputs: this.outputs.map(output => output.serialize()),\r\n      executionGraph: this.executionGraph.serialize()\r\n    }\r\n  }\r\n  static deSerialize(flowConnect: FlowConnect, data: SerializedFlow): Flow {\r\n    let flow = new Flow(flowConnect, data.name, data.rules, data.terminalTypeColors, data.id);\r\n\r\n    data.nodes.forEach(serializedNode => {\r\n      let node;\r\n      if (serializedNode.subFlow) node = SubFlowNode.deSerialize(flow, serializedNode);\r\n      else node = Node.deSerialize(flow, serializedNode);\r\n      flow.nodes[node.id] = node;\r\n      flow.sortedNodes.add(node);\r\n    });\r\n\r\n    data.groups.forEach(serializedGroup => {\r\n      let group = Group.deSerialize(flow, serializedGroup);\r\n      flow.groups.push(group);\r\n      group.nodes.forEach(node => node.group = group);\r\n    });\r\n\r\n    data.inputs.forEach(serializedInput => {\r\n      let input = TunnelNode.deSerialize(flow, serializedInput);\r\n      flow.inputs.push(input);\r\n      flow.nodes[input.id] = input;\r\n      flow.sortedNodes.add(input);\r\n    });\r\n\r\n    data.outputs.forEach(serializedOutput => {\r\n      let output = TunnelNode.deSerialize(flow, serializedOutput);\r\n      flow.outputs.push(output);\r\n      flow.nodes[output.id] = output;\r\n      flow.sortedNodes.add(output);\r\n    });\r\n\r\n    data.connectors.forEach(serializedConnector => {\r\n      let startNode = flow.nodes[serializedConnector.startNodeId];\r\n      let startTerminal = startNode.outputs.concat(startNode.outputsUI).find(terminal => terminal.id === serializedConnector.startId);\r\n      let endNode = flow.nodes[serializedConnector.endNodeId];\r\n      let endTerminal = endNode.inputs.concat(endNode.inputsUI).find(terminal => terminal.id === serializedConnector.endId);\r\n      let connector = Connector.deSerialize(flow, startTerminal, endTerminal, serializedConnector);\r\n      flow.connectors[serializedConnector.id] = connector;\r\n    });\r\n\r\n    flow.executionGraph = Graph.deSerialize(flow, data.executionGraph);\r\n\r\n    return flow;\r\n  }\r\n}\r\n","import { GraphState } from \"../math/constants\";\r\nimport { Log } from \"../utils/logger\";\r\nimport { getNewGUID } from \"../utils/utils\";\r\nimport { Flow } from \"./flow\";\r\nimport { Serializable, SerializedGraph, SerializedGraphNode } from \"./interfaces\";\r\nimport { Node } from \"./node\";\r\n\r\n/** @hidden */\r\nexport class GraphNode implements Serializable {\r\n  id: string;\r\n  childs: GraphNode[] = [];\r\n  order: number;\r\n\r\n  constructor(public flowNode: Node, order?: number, id?: string) {\r\n    this.order = order ? order : 0;\r\n    this.id = id ? id : getNewGUID();\r\n  }\r\n\r\n  serialize(): SerializedGraphNode {\r\n    return {\r\n      id: this.id,\r\n      nodeId: this.flowNode.id,\r\n      order: this.order,\r\n      childs: this.childs.map(child => child.id)\r\n    };\r\n  }\r\n  static deSerialize(node: Node, data: SerializedGraphNode): GraphNode {\r\n    return new GraphNode(node, data.order, data.id);\r\n  }\r\n}\r\n\r\n/** @hidden */\r\nexport class Graph implements Serializable {\r\n  state: GraphState = GraphState.Stopped;\r\n  nodes: GraphNode[][];\r\n  nodeToGraphNode: { [key: string]: GraphNode };\r\n  dirtyNodes: { [key: string]: GraphNode };\r\n\r\n  constructor() {\r\n    this.nodes = [];\r\n    this.nodeToGraphNode = {};\r\n    this.dirtyNodes = {};\r\n  }\r\n\r\n  add(data: Node) {\r\n    if (!this.nodes[0]) this.nodes.push([]);\r\n    let graphNode = new GraphNode(data);\r\n    this.nodes[0].push(graphNode);\r\n    this.nodeToGraphNode[data.id] = graphNode;\r\n  }\r\n  connect(sourceNode: Node, destinationNode: Node) {\r\n    let startGraphNode = this.nodeToGraphNode[sourceNode.id];\r\n    let endGraphNode = this.nodeToGraphNode[destinationNode.id];\r\n\r\n    if (!startGraphNode.childs.includes(endGraphNode)) {\r\n      startGraphNode.childs.push(endGraphNode);\r\n\r\n      if (endGraphNode.order <= startGraphNode.order) {\r\n        this.updateOrder(endGraphNode, startGraphNode.order + 1);\r\n        let queue: GraphNode[] = [];\r\n        queue.push(endGraphNode);\r\n        while (queue.length !== 0) {\r\n          let currNode = queue.shift();\r\n          currNode.childs.forEach(child => {\r\n            if (child.order <= currNode.order) {\r\n              this.updateOrder(child, currNode.order + 1);\r\n              if (!queue.includes(child)) queue.push(child);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updateOrder(graphNode: GraphNode, order: number) {\r\n    this.nodes[graphNode.order].splice(this.nodes[graphNode.order].indexOf(graphNode), 1);\r\n    if (!this.nodes[order]) this.nodes[order] = [];\r\n    graphNode.order = order;\r\n    this.nodes[order].push(graphNode);\r\n  }\r\n  canConnect(sourceNode: Node, destinationNode: Node) {\r\n    if (this.nodeToGraphNode[destinationNode.id].childs.includes(this.nodeToGraphNode[sourceNode.id])) return false;\r\n    return true;\r\n  }\r\n\r\n  start() {\r\n    if (this.state !== GraphState.Stopped) return;\r\n\r\n    this.state = GraphState.FullRun;\r\n\r\n    this.nodes.forEach(groupedNodes => {\r\n      groupedNodes.forEach(graphNode => graphNode.flowNode.run());\r\n    });\r\n\r\n    this.state = GraphState.Idle;\r\n  }\r\n  stop() {\r\n    this.state = GraphState.Stopped;\r\n  }\r\n  async partialRun() {\r\n    let result = await new Promise<boolean>((resolve, reject) => {\r\n      try {\r\n        this.processDirtyNodes();\r\n        resolve(true);\r\n      } catch (error) {\r\n        Log.error(error);\r\n        reject(false);\r\n      }\r\n    });\r\n\r\n    if (result && Object.keys(this.dirtyNodes).length > 0)\r\n      await this.partialRun();\r\n  }\r\n  setDirtyNode(node: Node | GraphNode) {\r\n    let graphNode = node instanceof Node ? this.nodeToGraphNode[node.id] : node;\r\n    if (!this.dirtyNodes[graphNode.id]) {\r\n      this.dirtyNodes[graphNode.id] = graphNode;\r\n\r\n      if (this.state === GraphState.Idle) {\r\n        this.state = GraphState.Running;\r\n\r\n        this.partialRun().then(() => (this.state = GraphState.Idle));\r\n      }\r\n    }\r\n  }\r\n  clearDirtyNode(node: Node | GraphNode) {\r\n    let graphNode = node instanceof Node ? this.nodeToGraphNode[node.id] : node;\r\n    if (this.dirtyNodes[graphNode.id]) delete this.dirtyNodes[graphNode.id];\r\n  }\r\n  processDirtyNodes() {\r\n    let dirtyNodes = Object.values(this.dirtyNodes).sort((a, b) => (a.order - b.order));\r\n    Log.log('Dirty Nodes: ', [...dirtyNodes]);\r\n\r\n    let queue: GraphNode[] = dirtyNodes;\r\n    queue.forEach(graphNode => {\r\n      graphNode.flowNode.run();\r\n      this.clearDirtyNode(graphNode);\r\n    });\r\n  }\r\n\r\n  serialize(): SerializedGraph {\r\n    let nodeToGraphNode: { [key: string]: string } = {};\r\n    Object.keys(this.nodeToGraphNode).forEach(nodeId => nodeToGraphNode[nodeId] = this.nodeToGraphNode[nodeId].id);\r\n\r\n    return {\r\n      nodes: this.nodes.map(groupedNodes => groupedNodes.map(graphNode => graphNode.serialize())),\r\n      nodeToGraphNode: nodeToGraphNode\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedGraph): Graph {\r\n    let graph = new Graph();\r\n\r\n    let serializedGraphNodes: { [key: string]: SerializedGraphNode } = {};\r\n    let deSerializedGraphNodes: { [key: string]: GraphNode } = {};\r\n\r\n    data.nodes.forEach((serializedGroupedNodes, index) => {\r\n      graph.nodes[index] = serializedGroupedNodes.map(serializedGraphNode => {\r\n        let graphNode = GraphNode.deSerialize(flow.nodes[serializedGraphNode.nodeId], serializedGraphNode);\r\n        deSerializedGraphNodes[graphNode.id] = graphNode;\r\n        serializedGraphNodes[graphNode.id] = serializedGraphNode;\r\n        return graphNode;\r\n      });\r\n    });\r\n\r\n    Object.keys(deSerializedGraphNodes).forEach(key => {\r\n      deSerializedGraphNodes[key].childs = serializedGraphNodes[key].childs.map(childId => deSerializedGraphNodes[childId]);\r\n    });\r\n    Object.keys(data.nodeToGraphNode).forEach(nodeId => {\r\n      graph.nodeToGraphNode[nodeId] = deSerializedGraphNodes[data.nodeToGraphNode[nodeId]];\r\n    })\r\n\r\n    return graph;\r\n  }\r\n}\r\n","import { Vector2 } from \"../math/vector\";\r\nimport { Constant, ViewPort } from '../math/constants';\r\nimport { getNewGUID, intersects } from \"../utils/utils\";\r\nimport { Color } from \"./color\";\r\nimport { Flow } from './flow';\r\nimport { Hooks } from './hooks';\r\nimport { Node } from './node';\r\nimport { GroupStyle, Serializable, SerializedGroup } from \"./interfaces\";\r\n\r\nexport class Group extends Hooks implements Serializable {\r\n  nodes: Node[] = [];\r\n  get name(): string { return this._name; }\r\n  set name(name: string) {\r\n    if (!name || name.trim() === '') this._name = 'No Name';\r\n    else this._name = name;\r\n    this.computeTextMetrics();\r\n  }\r\n  get position(): Vector2 { return this._position; }\r\n  set position(position: Vector2) {\r\n    this._position = position;\r\n    this.updateRenderState();\r\n    this.recomputeNodePositions();\r\n  }\r\n\r\n  /** @hidden */\r\n  nodeDeltas: Vector2[] = [];\r\n  /** @hidden */\r\n  hitColor: Color;\r\n  private textWidth: number;\r\n  private textHeight: number;\r\n  private _name: string;\r\n  private renderState: ViewPort = ViewPort.INSIDE;\r\n  private _position: Vector2;\r\n\r\n  constructor(\r\n    public flow: Flow,\r\n    position: Vector2,\r\n    public width: number = 0, public height: number = 0,\r\n    name?: string,\r\n    public style: GroupStyle = {},\r\n    public id: string = getNewGUID(),\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super();\r\n    this.hitColor = hitColor;\r\n    this.style = { ...Constant.DefaultGroupStyle(), ...style };\r\n    this.id = getNewGUID();\r\n    this._position = position;\r\n    if (!this.style.color || !this.style.borderColor) {\r\n      let colors = Constant.DefaultGroupColors.Random();\r\n      this.style.borderColor = colors[0];\r\n      this.style.color = colors[1];\r\n    }\r\n    this.name = name;\r\n    this.setHitColor(hitColor);\r\n    this.computeTextMetrics();\r\n\r\n    this.flow.on('transform', () => this.updateRenderState());\r\n  }\r\n\r\n  private setHitColor(hitColor: Color) {\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.flow.hitColorToGroup[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.flow.hitColorToGroup[this.hitColor.rgbaString] = this;\r\n  }\r\n  private computeTextMetrics() {\r\n    let context = this.flow.flowConnect.context;\r\n    context.font = this.style.fontSize + ' ' + this.style.font;\r\n    let metrics = context.measureText(this.name);\r\n    this.textWidth = metrics.width;\r\n    metrics = context.measureText('M');\r\n    context.font = null;\r\n    this.textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n\r\n    if (typeof this.textHeight === 'undefined') {\r\n      let d = document.createElement(\"span\");\r\n      d.textContent = \"M\";\r\n      d.style.font = this.style.fontSize + ' ' + this.style.font;\r\n      document.body.appendChild(d);\r\n      this.textHeight = d.offsetHeight;\r\n      document.body.removeChild(d);\r\n    }\r\n  }\r\n  private updateRenderState() {\r\n    let realPos = this.position.transform(this.flow.flowConnect.transform);\r\n    this.renderState = intersects(\r\n      0, 0,\r\n      this.flow.flowConnect.canvasDimensions.width, this.flow.flowConnect.canvasDimensions.height,\r\n      realPos.x, realPos.y,\r\n      realPos.x + this.width * this.flow.flowConnect.scale,\r\n      realPos.y + this.height * this.flow.flowConnect.scale\r\n    );\r\n  }\r\n  /** @hidden */\r\n  setContainedNodes() {\r\n    let groupRealPos = this.position.transform(this.flow.flowConnect.transform);\r\n\r\n    this.nodes = Object.keys(this.flow.nodes)\r\n      .map(key => this.flow.nodes[key])\r\n      .filter(node => !node.group && node.renderState.viewport === ViewPort.INSIDE)\r\n      .filter(node => {\r\n        let nodeRealPos = node.position.transform(this.flow.flowConnect.transform);\r\n\r\n        return intersects(groupRealPos.x, groupRealPos.y,\r\n          groupRealPos.x + this.width * this.flow.flowConnect.scale,\r\n          groupRealPos.y + this.height * this.flow.flowConnect.scale,\r\n          nodeRealPos.x, nodeRealPos.y,\r\n          nodeRealPos.x + node.width * this.flow.flowConnect.scale,\r\n          nodeRealPos.y + node.ui.height * this.flow.flowConnect.scale\r\n        ) === ViewPort.INSIDE;\r\n      });\r\n\r\n    this.nodes.forEach((node, index) => {\r\n      node.group = this;\r\n      this.nodeDeltas[index] = node.position.subtract(this.position);\r\n    });\r\n  }\r\n  private recomputeNodePositions() {\r\n    this.nodes.forEach((node, index) => {\r\n      node.position = this.position.add(this.nodeDeltas[index]);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.renderState === ViewPort.OUTSIDE) return;\r\n\r\n    this.flow.flowConnect.context.save();\r\n    this._render();\r\n    this.flow.flowConnect.context.restore();\r\n\r\n    this.flow.flowConnect.offGroupContext.save();\r\n    this._offRender();\r\n    this.flow.flowConnect.offGroupContext.restore();\r\n  }\r\n  private _render() {\r\n    let context = this.flow.flowConnect.context;\r\n    context.strokeStyle = this.style.borderColor;\r\n    context.lineWidth = 2;\r\n    context.fillStyle = this.style.color;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillStyle = this.style.titleColor;\r\n    context.textBaseline = 'bottom';\r\n    context.font = this.style.fontSize + ' ' + this.style.font;\r\n    context.fillText(this.name, this.position.x, this.position.y - 10);\r\n  }\r\n  private _offRender() {\r\n    this.flow.flowConnect.offGroupContext.fillStyle = this.hitColor.rgbaCSSString;\r\n    this.flow.flowConnect.offGroupContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.flow.flowConnect.offGroupContext.fillRect(this.position.x, this.position.y - this.textHeight - 10, this.textWidth, this.textHeight + 10);\r\n  }\r\n\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    let thisRealPosition = this.position.transform(this.flow.flowConnect.transform);\r\n    if (screenPosition.y < thisRealPosition.y) {\r\n      this.flow.flowConnect.showGenericInput(thisRealPosition.subtract(0, (10 + this.textHeight) * this.flow.flowConnect.scale), this.name, {\r\n        width: Math.max(this.textWidth, 50) * this.flow.flowConnect.scale + 'px',\r\n        height: this.textHeight * this.flow.flowConnect.scale + 'px',\r\n        fontSize: parseInt(this.style.fontSize.replace('px', '')) * this.flow.flowConnect.scale + 'px',\r\n        fontFamily: this.style.font\r\n      }, {\r\n        type: 'text'\r\n      }, (value) => {\r\n        this.name = value;\r\n      });\r\n    }\r\n  }\r\n\r\n  serialize(): SerializedGroup {\r\n    return {\r\n      id: this.id,\r\n      hitColor: this.hitColor.serialize(),\r\n      position: this.position.serialize(),\r\n      name: this.name,\r\n      width: this.width,\r\n      height: this.height,\r\n      style: this.style,\r\n      nodes: this.nodes.map(node => node.id),\r\n      nodeDeltas: this.nodeDeltas.map(nodeDelata => nodeDelata.serialize())\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedGroup): Group {\r\n    let group = new Group(flow, Vector2.deSerialize(data.position), data.width, data.height, data.name, data.style, data.id, Color.deSerialize(data.hitColor));\r\n    data.nodes.forEach(nodeId => {\r\n      group.nodes.push(flow.nodes[nodeId]);\r\n    });\r\n    data.nodeDeltas.forEach(serializedVector => {\r\n      group.nodeDeltas.push(Vector2.deSerialize(serializedVector));\r\n    });\r\n\r\n    return group;\r\n  }\r\n}\r\n","export class Hooks {\r\n  protected registeredEvents: { [key: string]: { [id: number]: (...args: any) => void } };\r\n  protected lastId: number;\r\n\r\n  constructor() {\r\n    this.registeredEvents = {};\r\n    this.lastId = 0;\r\n  }\r\n\r\n  on(eventKey: string, callback: (...args: any) => void): number {\r\n    if (!this.registeredEvents[eventKey]) this.registeredEvents[eventKey] = {};\r\n\r\n    let id = this.lastId;\r\n    this.registeredEvents[eventKey][id] = callback;\r\n    this.lastId += 1;\r\n    return id;\r\n  }\r\n  /** @hidden */\r\n  call(eventKey: string, ...args: any) {\r\n    if (this.registeredEvents[eventKey]) {\r\n      if (args) Object.values(this.registeredEvents[eventKey]).forEach(callback => new Promise((resolve) => resolve(callback(...args))));\r\n      else Object.values(this.registeredEvents[eventKey]).forEach(callback => new Promise((resolve) => resolve(callback())));\r\n    }\r\n  }\r\n  off(eventKey: string, id: number) {\r\n    if (this.registeredEvents[eventKey]) delete this.registeredEvents[eventKey][id];\r\n  }\r\n}\r\n","export * from './color';\r\nexport * from './connector';\r\nexport * from './flow';\r\nexport * from './node';\r\nexport * from './terminal';\r\nexport * from './group';\r\nexport * from './interfaces';\r\nexport * from './hooks';\r\nexport * from './subflow-node';\r\nexport * from './tunnel-node';","import { Vector2 } from \"../math/vector\";\r\nimport { ViewPort, NodeState, LOD, TerminalType, Align, Constant, FlowState } from '../math/constants';\r\nimport { Container, Label, Slider, UINode, Button, Image, HorizontalLayout, Toggle, Select, Source, Display, Input } from \"../ui/index\";\r\nimport { getNewGUID, intersects } from \"../utils/utils\";\r\nimport { Color } from \"./color\";\r\nimport { Flow } from './flow';\r\nimport { Group } from './group';\r\nimport { Terminal } from './terminal';\r\nimport { Hooks } from './hooks';\r\nimport { ButtonStyle, DisplayStyle, Events, HorizontalLayoutStyle, ImageStyle, InputStyle, LabelStyle, NodeStyle, RenderState, SelectStyle, Serializable, SerializedContainer, SerializedNode, SerializedTerminal, SliderStyle, SourceStyle, TerminalStyle, ToggleStyle } from \"./interfaces\";\r\nimport { Connector } from \"./connector\";\r\n\r\n/** @hidden */\r\nexport class NodeButton {\r\n  hitColor: Color;\r\n  deltaX: number = 0;\r\n\r\n  constructor(\r\n    public node: Node,\r\n    public callback: () => void,\r\n    public _render: (nodeButton: NodeButton, position: Vector2) => void,\r\n    public align: Align\r\n  ) {\r\n    this.setHitColor();\r\n  }\r\n\r\n  private setHitColor() {\r\n    let color = Color.Random();\r\n    while (this.node.hitColorToNodeButton[color.rgbaString]) color = Color.Random();\r\n    this.hitColor = color;\r\n    this.node.hitColorToNodeButton[this.hitColor.rgbaString] = this;\r\n  }\r\n  render() {\r\n    this.node.context.save();\r\n    this._render(this, this.node.position.add(this.deltaX, this.node.style.titleHeight / 2 - this.node.style.nodeButtonSize / 2));\r\n    this.node.context.restore();\r\n\r\n    this.node.offUIContext.save();\r\n    this._offUIRender();\r\n    this.node.offUIContext.restore();\r\n  }\r\n  private _offUIRender() {\r\n    this.node.offUIContext.fillStyle = this.hitColor.rgbaCSSString;\r\n    this.node.offUIContext.fillRect(\r\n      this.node.position.x + this.deltaX,\r\n      this.node.position.y + this.node.style.titleHeight / 2 - this.node.style.nodeButtonSize / 2,\r\n      this.node.style.nodeButtonSize,\r\n      this.node.style.nodeButtonSize\r\n    );\r\n  }\r\n}\r\n\r\nexport class Node extends Hooks implements Events, Serializable {\r\n  //#region Properties\r\n  /** @hidden */\r\n  hitColor: Color;\r\n  private _width: number;\r\n  /** @hidden */\r\n  hitColorToUI: { [key: string]: UINode };\r\n  /** @hidden */\r\n  hitColorToTerminal: { [key: string]: Terminal };\r\n  /** @hidden */\r\n  hitColorToNodeButton: { [key: string]: NodeButton };\r\n  private _zIndex: number;\r\n  private nodeButtons: NodeButton[] = [];\r\n  private _position: Vector2;\r\n  private propObservers: { [key: string]: Array<(oldVal: any, newVal: any) => void> } = {};\r\n  /** @hidden */\r\n  renderState: RenderState = { viewport: ViewPort.INSIDE, nodeState: NodeState.MAXIMIZED, lod: LOD.LOD2 };\r\n  /** @hidden */\r\n  currHitTerminal: Terminal;\r\n  /** @hidden */\r\n  prevHitTerminal: Terminal;\r\n  /** @hidden */\r\n  currHitUINode: UINode;\r\n  /** @hidden */\r\n  prevHitUINode: UINode;\r\n\r\n  focused: boolean = false;\r\n  inputs: Terminal[] = [];\r\n  outputs: Terminal[] = [];\r\n  inputsUI: Terminal[] = [];\r\n  outputsUI: Terminal[] = [];\r\n  ui: Container;\r\n  props: { [key: string]: any };\r\n  group: Group = null;\r\n  //#endregion\r\n\r\n  //#region Accessors\r\n  get context(): CanvasRenderingContext2D { return this.flow.flowConnect.context };\r\n  get offContext(): OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D { return this.flow.flowConnect.offContext };\r\n  get offUIContext(): OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D { return this.flow.flowConnect.offUIContext };\r\n  get position(): Vector2 { return this._position };\r\n  set position(position: Vector2) {\r\n    this._position = position;\r\n    this.reflow();\r\n    this.ui.update();\r\n    this.updateRenderState();\r\n  }\r\n  get zIndex(): number { return this._zIndex };\r\n  set zIndex(zIndex: number) {\r\n    if (this.flow.sortedNodes.remove(this)) {\r\n      this._zIndex = zIndex;\r\n      this.flow.sortedNodes.add(this);\r\n    } else {\r\n      this._zIndex = zIndex;\r\n    }\r\n  }\r\n  get width(): number { return this._width };\r\n  set width(width: number) {\r\n    this._width = width;\r\n    this.ui.width = width;\r\n    this.ui.update();\r\n  }\r\n  //#endregion\r\n\r\n  constructor(\r\n    public flow: Flow,\r\n    public name: string,\r\n    position: Vector2,\r\n    width: number,\r\n    inputs: SerializedTerminal[], outputs: SerializedTerminal[],\r\n    public style: NodeStyle = {},\r\n    public terminalStyle: TerminalStyle = {},\r\n    props: Object = {},\r\n    public id: string = getNewGUID(),\r\n    hitColor?: Color,\r\n    ui?: Container | SerializedContainer\r\n  ) {\r\n\r\n    super();\r\n    this.hitColor = hitColor;\r\n    this._width = width;\r\n    this.style = { ...Constant.DefaultNodeStyle(), ...style }\r\n    this._position = position;\r\n    this.setupProps(props);\r\n    this.hitColorToUI = {};\r\n    this.hitColorToTerminal = {};\r\n    this.hitColorToNodeButton = {};\r\n    this._zIndex = 0;\r\n    this.setHitColor(hitColor);\r\n    this.inputs.push(...inputs.map(input => new Terminal(this, TerminalType.IN, input.dataType, input.name, input.style ? input.style : { ...terminalStyle }, input.id ? input.id : null, input.hitColor ? Color.deSerialize(input.hitColor) : null)));\r\n    this.outputs.push(...outputs.map(output => new Terminal(this, TerminalType.OUT, output.dataType, output.name, output.style ? output.style : { ...terminalStyle }, output.id ? output.id : null, output.hitColor ? Color.deSerialize(output.hitColor) : null)));\r\n    this.ui = ui ? (ui instanceof Container ? ui : Container.deSerialize(this, ui)) : new Container(this, width);\r\n\r\n    this.addNodeButton(() => this.toggleNodeState(), (nodeButton: NodeButton, position: Vector2) => {\r\n      this.context.fillStyle = this.style.maximizeButtonColor;\r\n      this.context.fillRect(position.x, position.y, this.style.nodeButtonSize, this.style.nodeButtonSize);\r\n    }, Align.Left);\r\n\r\n    this.reflow();\r\n    this.ui.update();\r\n\r\n    this.flow.on('transform', () => this.updateRenderState());\r\n  }\r\n\r\n  //#region Methods\r\n  private setupProps(props: { [key: string]: any }) {\r\n    let propsTarget: { [key: string]: any } = {};\r\n    this.props = new Proxy(propsTarget, {\r\n      set: (target, prop: string, value) => {\r\n        if (typeof target[prop] === 'undefined') {\r\n          this.propObservers[prop] = [];\r\n        }\r\n        let oldValue = target[prop];\r\n        target[prop] = value;\r\n        this.propObservers[prop].forEach(callback => callback(oldValue, value));\r\n\r\n        if (this.registeredEvents['propchange']) {\r\n          this.call('propchange', this, prop, oldValue, value);\r\n        }\r\n        return true;\r\n      }\r\n    });\r\n\r\n    Object.keys(props).forEach(key => {\r\n      this.props[key] = props[key];\r\n    });\r\n  }\r\n  /** @hidden */\r\n  addPropObserver(propName: string, callback: (oldVal: any, newVal: any) => void) {\r\n    if (typeof this.props[propName] !== 'undefined') {\r\n      this.propObservers[propName].push(callback);\r\n    }\r\n  }\r\n  /** @hidden */\r\n  removePropObserver(propName: string, callback: (oldVal: any, newVal: any) => void) {\r\n    if (this.propObservers[propName]) {\r\n      this.propObservers[propName].splice(this.propObservers[propName].indexOf(callback), 1);\r\n    }\r\n  }\r\n  private setHitColor(hitColor: Color) {\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.flow.hitColorToNode[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.flow.hitColorToNode[this.hitColor.rgbaString] = this;\r\n  }\r\n  /** @hidden */\r\n  addNodeButton(callback: () => void, render: (nodeButton: NodeButton, position: Vector2) => void, align: Align): NodeButton {\r\n    let newNodeButton = new NodeButton(this, callback, render, align);\r\n\r\n    let noOfButtons = this.nodeButtons.filter(nodeButton => nodeButton.align === newNodeButton.align).length;\r\n    let deltaX;\r\n    if (align === Align.Left) deltaX = noOfButtons * (this.style.nodeButtonSize + this.style.nodeButtonSpacing);\r\n    else deltaX = this.width - noOfButtons * (this.style.nodeButtonSize + this.style.nodeButtonSpacing) - this.style.nodeButtonSize;\r\n    newNodeButton.deltaX = deltaX;\r\n    this.nodeButtons.push(newNodeButton);\r\n\r\n    return newNodeButton;\r\n  }\r\n  private reflow(): void {\r\n    let y = this.position.y + this.style.terminalRowHeight / 2 + this.style.padding / 2 + this.style.titleHeight;\r\n    if (this.inputs.length > this.outputs.length) {\r\n      this.recalculateInputTerminals(y);\r\n      y = this.position.y + (this.inputs.length * this.style.terminalRowHeight) / 2 - (this.outputs.length * this.style.terminalRowHeight) / 2 + this.style.terminalRowHeight / 2 + this.style.padding / 2 + this.style.titleHeight;\r\n      this.recalculateOutputTerminals(y);\r\n    } else {\r\n      this.recalculateOutputTerminals(y);\r\n      y = this.position.y + (this.outputs.length * this.style.terminalRowHeight) / 2 - (this.inputs.length * this.style.terminalRowHeight) / 2 + this.style.terminalRowHeight / 2 + this.style.padding / 2 + this.style.titleHeight;\r\n      this.recalculateInputTerminals(y);\r\n    }\r\n  }\r\n  private updateRenderState() {\r\n    let realPos = this.position.transform(this.flow.flowConnect.transform);\r\n    this.renderState.viewport = intersects(\r\n      0, 0,\r\n      this.flow.flowConnect.canvasDimensions.width, this.flow.flowConnect.canvasDimensions.height,\r\n      realPos.x, realPos.y,\r\n      realPos.x + this.width * this.flow.flowConnect.scale,\r\n      realPos.y + (this.renderState.nodeState === NodeState.MAXIMIZED ? this.ui.height : this.style.titleHeight) * this.flow.flowConnect.scale\r\n    );\r\n\r\n    if (this.flow.flowConnect.scale > 0.6) this.renderState.lod = LOD.LOD2;\r\n    else if (this.flow.flowConnect.scale <= 0.6 && this.flow.flowConnect.scale > .3) this.renderState.lod = LOD.LOD1;\r\n    else this.renderState.lod = LOD.LOD0;\r\n\r\n    if (this.renderState.viewport === ViewPort.INTERSECT) {\r\n      this.ui.updateRenderState();\r\n    }\r\n  }\r\n  /** @hidden */\r\n  recalculateInputTerminals(y: number) {\r\n    this.inputs.forEach(terminal => {\r\n      terminal.position.x = this.position.x - this.style.terminalStripMargin - terminal.style.radius;\r\n      terminal.position.y = y;\r\n      y += this.style.terminalRowHeight;\r\n    });\r\n  }\r\n  private recalculateOutputTerminals(y: number) {\r\n    this.outputs.forEach(terminal => {\r\n      terminal.position.x = this.position.x + this.ui.width + this.style.terminalStripMargin + terminal.style.radius;\r\n      terminal.position.y = y;\r\n      y += this.style.terminalRowHeight;\r\n    });\r\n  }\r\n  /** @hidden */\r\n  getHitTerminal(hitColor: string, screenPosition: Vector2, realPosition: Vector2) {\r\n    let hitTerminal = null;\r\n\r\n    realPosition = realPosition.transform(this.flow.flowConnect.transform);\r\n    let thisRealPosition = this.position.transform(this.flow.flowConnect.transform);\r\n    if (\r\n      (this.inputs.length + this.inputsUI.length > 0 && realPosition.x < thisRealPosition.x) ||\r\n      (this.outputs.length + this.outputsUI.length > 0 && realPosition.x > thisRealPosition.x + this.ui.width * this.flow.flowConnect.scale)\r\n    ) {\r\n      hitTerminal = this.hitColorToTerminal[hitColor];\r\n    }\r\n\r\n    if (this.currHitTerminal && this.currHitTerminal !== hitTerminal) {\r\n      this.currHitTerminal.onExit(screenPosition, realPosition);\r\n      hitTerminal && hitTerminal.onEnter(screenPosition, realPosition);\r\n    }\r\n\r\n    return hitTerminal;\r\n  }\r\n  private getHitUINode(hitColor: string): UINode {\r\n    let uiNode = this.hitColorToUI[hitColor];\r\n    if (uiNode instanceof Container) return null;\r\n    return uiNode;\r\n  }\r\n  private getHitNodeButton(hitColor: string): NodeButton {\r\n    return this.hitColorToNodeButton[hitColor];\r\n  }\r\n  /** @hidden */\r\n  run() {\r\n    if (this.flow.state === FlowState.Stopped) return;\r\n\r\n    this.call('process', this, this.inputs.map(terminal => terminal.connectors.length > 0 ? terminal.connectors[0].data : null));\r\n  }\r\n  private _render() {\r\n    let context = this.context;\r\n    if (this.renderState.nodeState === NodeState.MAXIMIZED) {\r\n      if (this.renderState.lod > 0) {\r\n        this.inputs.forEach(terminal => terminal.render());\r\n        this.outputs.forEach(terminal => terminal.render());\r\n      }\r\n    } else {\r\n      context.fillStyle = 'green';\r\n      if ((this.inputs.length + this.inputsUI.length) > 0) {\r\n        let radius = this.inputs.length > 0 ? this.inputs[0].style.radius : this.inputsUI[0].style.radius;\r\n        context.fillRect(this.position.x - this.style.terminalStripMargin - radius * 2, this.position.y + this.style.titleHeight / 2 - radius, radius * 2, radius * 2);\r\n      }\r\n      if ((this.outputs.length + this.outputsUI.length) > 0) {\r\n        let radius = this.outputs.length > 0 ? this.outputs[0].style.radius : this.outputsUI[0].style.radius;\r\n        context.fillRect(this.position.x + this.width + this.style.terminalStripMargin, this.position.y + this.style.titleHeight / 2 - radius, radius * 2, radius * 2);\r\n      }\r\n    }\r\n\r\n    context.fillStyle = this.style.titleColor;\r\n    context.font = this.style.titleFontSize + ' ' + this.style.titleFont;\r\n    context.textBaseline = 'middle';\r\n    context.fillText(this.name, this.position.x + this.ui.width / 2 - context.measureText(this.name).width / 2, this.position.y + this.style.titleHeight / 2);\r\n\r\n    if (this.renderState.nodeState === NodeState.MAXIMIZED) {\r\n      context.fillStyle = this.style.color;\r\n      context.font = this.style.fontSize + ' ' + this.style.font;\r\n      context.textBaseline = 'middle';\r\n      this.inputs.forEach(terminal => {\r\n        context.fillText(terminal.name, terminal.position.x + terminal.style.radius + this.style.terminalStripMargin + this.style.padding, terminal.position.y);\r\n      });\r\n      this.outputs.forEach(terminal => {\r\n        context.fillText(terminal.name, terminal.position.x - terminal.style.radius - this.style.terminalStripMargin - this.style.padding - context.measureText(terminal.name).width, terminal.position.y);\r\n      });\r\n    }\r\n\r\n    if (this.focused) {\r\n      context.strokeStyle = '#000';\r\n      context.lineWidth = 2;\r\n      let inputTerminalsWidth = this.inputs.length === 0 ? (this.inputsUI.length === 0 ? 0 : this.inputsUI[0].style.radius * 2) : this.inputs[0].style.radius * 2;\r\n      inputTerminalsWidth += this.style.terminalStripMargin * 2;\r\n      let outputTerminalsWidth = this.outputs.length === 0 ? (this.outputsUI.length === 0 ? 0 : this.outputsUI[0].style.radius * 2) : this.outputs[0].style.radius * 2;\r\n      outputTerminalsWidth += this.style.terminalStripMargin * 2;\r\n      context.strokeRoundRect(\r\n        this.position.x - inputTerminalsWidth,\r\n        this.position.y,\r\n        this.width + inputTerminalsWidth + outputTerminalsWidth,\r\n        this.renderState.nodeState === NodeState.MAXIMIZED ? (this.ui.height + this.style.padding) : this.style.titleHeight,\r\n        4\r\n      );\r\n    }\r\n  }\r\n  private _offRender() {\r\n    this.offContext.fillStyle = this.hitColor.rgbaCSSString;\r\n    let x = this.position.x;\r\n    let y = this.position.y;\r\n    let inputTerminalsStripWidth = 0, outputTerminalsStripWidth = 0;\r\n    if ((this.inputs.length + this.inputsUI.length) !== 0) {\r\n      let radius = this.inputs.length > 0 ? this.inputs[0].style.radius : this.inputsUI[0].style.radius;\r\n      x -= this.style.terminalStripMargin + radius * 2;\r\n      inputTerminalsStripWidth = radius * 2 + this.style.terminalStripMargin;\r\n    }\r\n    if ((this.outputs.length + this.outputsUI.length) !== 0) {\r\n      let radius = this.outputs.length > 0 ? this.outputs[0].style.radius : this.outputsUI[0].style.radius;\r\n      outputTerminalsStripWidth = radius * 2 + this.style.terminalStripMargin;\r\n    }\r\n    this.offContext.fillRect(x, y,\r\n      this.ui.width + inputTerminalsStripWidth + outputTerminalsStripWidth,\r\n      this.renderState.nodeState === NodeState.MAXIMIZED ? this.ui.height : this.style.titleHeight\r\n    );\r\n  }\r\n\r\n  addTerminal(terminal: Terminal | SerializedTerminal) {\r\n    if (!(terminal instanceof Terminal)) {\r\n      terminal = Terminal.deSerialize(this, terminal);\r\n    }\r\n    if (terminal.type === TerminalType.IN) this.inputs.push(terminal);\r\n    else this.outputs.push(terminal);\r\n    this.ui.update();\r\n    this.reflow();\r\n  }\r\n  getInput(terminal: string | number): any {\r\n    if (typeof terminal === 'string') {\r\n      let inputTerminal = this.inputs.find(currTerm => (currTerm.name === terminal));\r\n      if (inputTerminal) return (inputTerminal as any)['getData']();\r\n    } else {\r\n      if (this.inputs[terminal]) return (this.inputs[terminal] as any)['getData']();\r\n    }\r\n    return null;\r\n  }\r\n  getInputs(): any[] {\r\n    return this.inputs.map(terminal => (terminal as any)['getData']());\r\n  }\r\n  setOutput(terminal: string | number, data: any) {\r\n    if (typeof terminal === 'string') {\r\n      let outputTerminal = this.outputs.find(currTerm => (currTerm.name === terminal));\r\n      if (outputTerminal) return (outputTerminal as any)['setData'](data);\r\n    } else {\r\n      if (this.outputs[terminal]) (this.outputs[terminal] as any)['setData'](data);\r\n    }\r\n  }\r\n  setOutputs(outputs: { [name: string]: any }) {\r\n    let outputData = new Map<Terminal, any>();\r\n    Object.entries(outputs).forEach(entry => {\r\n      let terminal = this.outputs.find(terminal => terminal.name === entry[0]);\r\n      if (terminal) {\r\n        outputData.set(terminal, entry[1]);\r\n      } else {\r\n        throw 'Error';\r\n      }\r\n    });\r\n\r\n    let groupedConnectors = new Map<Node, Connector[]>();\r\n    let outputDataIterator = outputData.keys();\r\n    let curr: Terminal;\r\n    while ((curr = outputDataIterator.next().value) && curr) {\r\n      curr.connectors.forEach(connector => {\r\n        if (groupedConnectors.has(connector.endNode)) groupedConnectors.get(connector.endNode).push(connector);\r\n        else groupedConnectors.set(connector.endNode, [connector]);\r\n      });\r\n    }\r\n\r\n    let gCntrsIterator = groupedConnectors.values();\r\n    let connectors: Connector[];\r\n    while ((connectors = gCntrsIterator.next().value) && connectors) {\r\n      for (let i = 1; i < connectors.length; i += 1) connectors[i].setData(outputData.get(connectors[i].start));\r\n      connectors[0].data = outputData.get(connectors[0].start);\r\n    }\r\n  }\r\n  toggleNodeState() {\r\n    this.renderState.nodeState = this.renderState.nodeState === NodeState.MAXIMIZED ? NodeState.MINIMIZED : NodeState.MAXIMIZED;\r\n  }\r\n  dispose(): void {\r\n    this.flow.removeNode(this.id);\r\n  }\r\n  render(): void {\r\n    if (this.renderState.viewport === ViewPort.OUTSIDE) return;\r\n    if (this.renderState.nodeState === NodeState.MAXIMIZED) this.ui.render();\r\n\r\n    this.context.save();\r\n    this._render();\r\n    this.context.restore();\r\n\r\n    this.nodeButtons.forEach(nodeButton => nodeButton.render())\r\n\r\n    this.offContext.save();\r\n    this._offRender();\r\n    this.offContext.restore();\r\n  }\r\n  //#endregion\r\n\r\n  //#region Events\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    this.currHitUINode = this.getHitUINode(hitColor);\r\n    this.currHitUINode && this.currHitUINode.onDown(screenPosition, realPosition);\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n    if (hitTerminal) {\r\n      this.currHitTerminal = hitTerminal;\r\n      this.currHitTerminal.onDown(screenPosition, realPosition);\r\n    }\r\n  }\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n\r\n    if (hitTerminal !== this.prevHitTerminal) {\r\n      this.prevHitTerminal && this.prevHitTerminal.onExit(screenPosition, realPosition);\r\n      hitTerminal && hitTerminal.onEnter(screenPosition, realPosition);\r\n    } else {\r\n      hitTerminal && (!this.currHitTerminal) && hitTerminal.onOver(screenPosition, realPosition);\r\n    }\r\n    this.prevHitTerminal = hitTerminal;\r\n\r\n    let hitUINode = this.getHitUINode(hitColor);\r\n    if (hitUINode !== this.prevHitUINode) {\r\n      this.prevHitUINode && this.prevHitUINode.onExit(screenPosition, realPosition);\r\n      hitUINode && hitUINode.onEnter(screenPosition, realPosition);\r\n    } else {\r\n      hitUINode && (!this.currHitUINode) && hitUINode.onOver(screenPosition, realPosition);\r\n    }\r\n    this.prevHitUINode = hitUINode;\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n    hitTerminal && hitTerminal.onExit(screenPosition, realPosition);\r\n    this.prevHitTerminal && this.prevHitTerminal.onExit(screenPosition, realPosition);\r\n    this.prevHitTerminal = null;\r\n    this.currHitTerminal && this.currHitTerminal.onExit(screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    this.currHitUINode = null;\r\n    let hitUINode = this.getHitUINode(hitColor);\r\n    hitUINode && hitUINode.onUp(screenPosition.clone(), realPosition.clone());\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n    hitTerminal && hitTerminal.onUp(screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n    if (realPosition.y < this.position.y + this.style.titleHeight * this.flow.flowConnect.scale) {\r\n      let hitNodeButton = this.getHitNodeButton(hitColor);\r\n      hitNodeButton && hitNodeButton.callback();\r\n    } else {\r\n      this.currHitTerminal && this.currHitTerminal.onClick(screenPosition, realPosition);\r\n\r\n      let hitUINode = this.getHitUINode(hitColor);\r\n      hitUINode && hitUINode.onClick(screenPosition.clone(), realPosition.clone());\r\n    }\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n\r\n    this.currHitUINode && this.currHitUINode.draggable && this.currHitUINode.onDrag(screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    this.call('rightclick', this);\r\n  }\r\n  //#endregion\r\n\r\n  //#region UICreators\r\n  createLabel(text: string, propName?: string, input?: boolean, output?: boolean, style?: LabelStyle): Label {\r\n    return new Label(this, text, propName, input, output, style);\r\n  }\r\n  createImage(source: string, propName?: string, style?: ImageStyle): Image {\r\n    return new Image(this, source, propName, style);\r\n  }\r\n  createSlider(min: number, max: number, value: number, precision?: number, propName?: string, input?: boolean, output?: boolean, height?: number, style?: SliderStyle) {\r\n    return new Slider(this, min, max, value, precision, propName, input, output, height, style);\r\n  }\r\n  createHozLayout(childs?: UINode[], style?: HorizontalLayoutStyle) {\r\n    return new HorizontalLayout(this, childs, style);\r\n  }\r\n  createButton(text: string, input?: boolean, output?: boolean, height?: number, style?: ButtonStyle) {\r\n    return new Button(this, text, input, output, height, style);\r\n  }\r\n  createToggle(propName?: string, input?: boolean, output?: boolean, height?: number, style?: ToggleStyle) {\r\n    return new Toggle(this, propName, input, output, height, style);\r\n  }\r\n  createSelect(options: string[], propName?: string, input?: boolean, output?: boolean, height?: number, style?: SelectStyle) {\r\n    return new Select(this, options, propName, input, output, height, style);\r\n  }\r\n  createSource(accept?: string, propName?: string, input?: boolean, output?: boolean, height?: number, style?: SourceStyle) {\r\n    return new Source(this, accept, propName, input, output, height, style);\r\n  }\r\n  createDisplay(height: number, render: (context: CanvasRenderingContext2D, width: number, height: number) => void, style?: DisplayStyle) {\r\n    return new Display(this, height, render, style);\r\n  }\r\n  createInput(value: string | number, propName?: string, input?: boolean, output?: boolean, height?: number, style?: InputStyle) {\r\n    return new Input(this, value, propName, input, output, height, style);\r\n  }\r\n  //#endregion\r\n\r\n  serialize(): SerializedNode {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      position: this.position.serialize(),\r\n      width: this.width,\r\n      props: this.props,\r\n      inputs: this.inputs.map(terminal => terminal.serialize()),\r\n      outputs: this.outputs.map(terminal => terminal.serialize()),\r\n      style: this.style,\r\n      terminalStyle: this.terminalStyle,\r\n      hitColor: this.hitColor.serialize(),\r\n      zIndex: this.zIndex,\r\n      focused: this.focused,\r\n      renderState: this.renderState,\r\n      ui: this.ui.serialize()\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedNode): Node {\r\n    return new Node(flow, data.name, Vector2.deSerialize(data.position), data.width, data.inputs, data.outputs, data.style, data.terminalStyle, data.props, data.id, Color.deSerialize(data.hitColor), data.ui);\r\n  }\r\n}\r\n","import { Align, FlowState, TerminalType } from '../math/constants';\r\nimport { Vector2 } from '../math/vector';\r\nimport { Color } from './color';\r\nimport { Flow } from './flow';\r\nimport { NodeStyle, SerializedNode, TerminalStyle } from './interfaces';\r\nimport { Node, NodeButton } from './node';\r\nimport { Terminal } from './terminal';\r\nimport { TunnelNode } from './tunnel-node';\r\n\r\nexport class SubFlowNode extends Node {\r\n\r\n  constructor(\r\n    flow: Flow,\r\n    name: string,\r\n    position: Vector2,\r\n    width: number,\r\n    style: NodeStyle = {}, terminalStyle: TerminalStyle = {},\r\n    props: Object = {},\r\n    inputs: any[], outputs: any[],\r\n    public subFlow: Flow,\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(flow, name, position, width, inputs ? inputs : [], outputs ? outputs : [], style, terminalStyle, props, id, hitColor);\r\n\r\n    this.subFlow.on('add-input', (subFlow, tunnel: TunnelNode) => {\r\n      let proxyTerminal = new Terminal(this, TerminalType.IN, tunnel.outputs[0].dataType, tunnel.outputs[0].name);\r\n      tunnel.proxyTerminal = proxyTerminal;\r\n      this.addTerminal(proxyTerminal);\r\n    });\r\n    this.subFlow.on('add-output', (subFlow, tunnel: TunnelNode) => {\r\n      let proxyTerminal = new Terminal(this, TerminalType.OUT, tunnel.inputs[0].dataType, tunnel.inputs[0].name);\r\n      tunnel.proxyTerminal = proxyTerminal;\r\n      this.addTerminal(proxyTerminal);\r\n    });\r\n\r\n    this.subFlow.inputs.forEach((inputNode, index) => inputNode.proxyTerminal = this.inputs[index]);\r\n    this.subFlow.outputs.forEach((outputNode, index) => outputNode.proxyTerminal = this.outputs[index]);\r\n\r\n    this.addNodeButton(() => {\r\n      this.flow.flowConnect.render(this.subFlow);\r\n    }, (nodeButton: NodeButton, position: Vector2) => {\r\n      let context = this.context;\r\n      context.strokeStyle = this.style.expandButtonColor;\r\n\r\n      context.beginPath();\r\n      context.moveTo(position.x, position.y + this.style.nodeButtonSize / 2);\r\n      context.lineTo(position.x, position.y + this.style.nodeButtonSize);\r\n      context.lineTo(position.x + this.style.nodeButtonSize, position.y);\r\n      context.lineTo(position.x + this.style.nodeButtonSize, position.y + this.style.nodeButtonSize / 2);\r\n      context.moveTo(position.x + this.style.nodeButtonSize, position.y);\r\n      context.lineTo(position.x + this.style.nodeButtonSize / 2, position.y);\r\n      context.moveTo(position.x, position.y + this.style.nodeButtonSize);\r\n      context.lineTo(position.x + this.style.nodeButtonSize / 2, position.y + this.style.nodeButtonSize);\r\n      context.closePath();\r\n\r\n      context.stroke();\r\n    }, Align.Right);\r\n  }\r\n\r\n  /** @hidden */\r\n  run() {\r\n    if (this.flow.state === FlowState.Stopped) return;\r\n\r\n    this.call('process', this);\r\n    this.subFlow.start();\r\n  }\r\n  serialize(): SerializedNode {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      position: this.position.serialize(),\r\n      width: this.width,\r\n      props: this.props,\r\n      inputs: this.inputs.map(terminal => terminal.serialize()),\r\n      outputs: this.outputs.map(terminal => terminal.serialize()),\r\n      style: this.style,\r\n      terminalStyle: this.terminalStyle,\r\n      hitColor: this.hitColor.serialize(),\r\n      zIndex: this.zIndex,\r\n      focused: this.focused,\r\n      renderState: this.renderState,\r\n      ui: this.ui.serialize(),\r\n      subFlow: this.subFlow.serialize()\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedNode): SubFlowNode {\r\n    let subFlow = Flow.deSerialize(flow.flowConnect, data.subFlow);\r\n    return new SubFlowNode(flow, data.name, Vector2.deSerialize(data.position), data.width, data.style, data.terminalStyle, data.props, data.inputs, data.outputs, subFlow, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Vector2 } from \"../math/vector\";\r\nimport { Constant, TerminalType } from '../math/constants';\r\nimport { getNewGUID, canConnect } from \"../utils/utils\";\r\nimport { Color } from \"./color\";\r\nimport { Connector } from './connector';\r\nimport { Hooks } from './hooks';\r\nimport { Node } from './node';\r\nimport { Events, Serializable, SerializedTerminal, TerminalStyle } from \"./interfaces\";\r\nimport { ConnectorStyle } from \"./interfaces\";\r\n\r\nexport class Terminal extends Hooks implements Events, Serializable {\r\n  connectors: Connector[];\r\n  focus: boolean;\r\n\r\n  /** @hidden */\r\n  position: Vector2;\r\n  /** @hidden */\r\n  hitColor: Color;\r\n\r\n  constructor(\r\n    public node: Node,\r\n    public type: TerminalType,\r\n    public dataType: string,\r\n    public name: string,\r\n    public style: TerminalStyle = {},\r\n    public id?: string,\r\n    hitColor?: Color) {\r\n\r\n    super();\r\n    this.hitColor = hitColor;\r\n    this.style = { ...Constant.DefaultTerminalStyle(), ...style };\r\n    this.id = id ? id : getNewGUID();\r\n    this.setHitColor(hitColor);\r\n    this.connectors = [];\r\n    this.position = Vector2.Zero();\r\n    this.focus = false;\r\n\r\n    if (this.type === TerminalType.IN) (this as any)['getData'] = () => {\r\n      if (this.connectors.length > 0) return this.connectors[0].data;\r\n      return null;\r\n    };\r\n    else (this as any)['setData'] = (data: any) => {\r\n      this.connectors.forEach(connector => connector.data = data);\r\n    };\r\n  }\r\n\r\n  private setHitColor(hitColor: Color) {\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.node.hitColorToTerminal[hitColor.rgbaString] || this.node.hitColorToUI[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.node.hitColorToTerminal[this.hitColor.rgbaString] = this;\r\n  }\r\n  render() {\r\n    let context = this.node.context;\r\n    context.save();\r\n\r\n    if (this.focus) {\r\n      context.beginPath();\r\n      context.arc(this.position.x, this.position.y, this.style.radius * 3, 0, 2 * Math.PI);\r\n      context.fillStyle = this.style.focusColor;\r\n      context.fill();\r\n    }\r\n\r\n    if (this.dataType === 'event') {\r\n      context.beginPath();\r\n      context.moveTo(this.position.x, this.position.y - this.style.radius * 1.3);\r\n      context.lineTo(this.position.x + this.style.radius * 1.3, this.position.y);\r\n      context.lineTo(this.position.x, this.position.y + this.style.radius * 1.3);\r\n      context.lineTo(this.position.x - this.style.radius * 1.3, this.position.y);\r\n      context.lineTo(this.position.x, this.position.y - this.style.radius * 1.3);\r\n      context.closePath();\r\n    } else {\r\n      context.beginPath();\r\n      context.arc(this.position.x, this.position.y, this.style.radius, 0, 2 * Math.PI);\r\n    }\r\n    context.fillStyle = this.focus ? '#00ff00' : (this.node.flow.terminalTypeColors[this.dataType] || '#888');\r\n    context.strokeStyle = this.style.borderColor;\r\n    context.shadowBlur = this.style.shadowBlur;\r\n    context.shadowColor = this.style.shadowColor;\r\n    context.fill();\r\n    context.stroke();\r\n\r\n    context.restore();\r\n\r\n    this.offUIRender();\r\n  }\r\n  connect(otherTerminal: Terminal, style?: ConnectorStyle): boolean {\r\n    // Check if already connected\r\n    if (this.type !== otherTerminal.type) {\r\n      let start = this.type === TerminalType.OUT ? this : otherTerminal;\r\n      let end = this.type === TerminalType.IN ? this : otherTerminal;\r\n      if (end.connectors.length > 0 && start.connectors.includes(end.connectors[0])) return false;\r\n    }\r\n\r\n    // Check if these terminals can be connected\r\n    if (canConnect(this, otherTerminal, this.node.flow.rules, this.node.flow.executionGraph)) {\r\n      let newConnector = new Connector(this.node.flow, this.type === TerminalType.OUT ? this : otherTerminal, this.type === TerminalType.IN ? this : otherTerminal, null, style);\r\n      this.node.flow.connectors[newConnector.id] = newConnector;\r\n      return true;\r\n    } else return false;\r\n  }\r\n  private offUIRender() {\r\n    let context = this.node.offUIContext;\r\n    context.save();\r\n\r\n    context.beginPath();\r\n    context.arc(this.position.x, this.position.y, this.style.radius + this.node.style.terminalStripMargin, 0, 2 * Math.PI);\r\n    context.fillStyle = this.hitColor.rgbaCSSString;\r\n    context.fill();\r\n\r\n    context.restore();\r\n  }\r\n\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n\r\n    this.focus = true;\r\n    this.node.flow.flowConnect.cursor = 'pointer';\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n\r\n    this.focus = false;\r\n    this.node.flow.flowConnect.cursor = 'unset';\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n\r\n    if (this.connectors.length > 0) {\r\n      if (this.type === TerminalType.IN) {\r\n        this.connectors[0].endNode.currHitTerminal = null;\r\n        this.connectors[0].end = null;\r\n        this.connectors[0].floatingTip = realPosition;\r\n        this.node.flow.flowConnect.floatingConnector = this.connectors[0];\r\n        this.connectors[0].start.call('disconnect', this.connectors[0].start, this.connectors[0]);\r\n        this.call('disconnect', this, this.connectors[0]);\r\n        this.connectors.pop();\r\n      } else {\r\n        if (this.node.flow.flowConnect.floatingConnector) return;\r\n        let connector = new Connector(this.node.flow, this, null, realPosition, {});\r\n        this.node.flow.connectors[connector.id] = connector;\r\n        this.node.flow.flowConnect.floatingConnector = connector;\r\n      }\r\n    } else {\r\n      if (this.node.flow.flowConnect.floatingConnector) return;\r\n      let connector = new Connector(this.node.flow, this.type === TerminalType.IN ? null : this, this.type === TerminalType.IN ? this : null, realPosition, {});\r\n      this.node.flow.connectors[connector.id] = connector;\r\n      this.node.flow.flowConnect.floatingConnector = connector;\r\n    }\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    this.call('rightclick', this);\r\n  }\r\n\r\n  /** @hidden */\r\n  onEvent(data: any): void {\r\n    if (this.type === TerminalType.IN) {\r\n      this.call('event', this, data);\r\n    }\r\n  }\r\n  emit(data: any) {\r\n    if (this.type === TerminalType.OUT && this.connectors.length !== 0) {\r\n      this.connectors.forEach(connector => {\r\n        connector.end && connector.end.onEvent(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  serialize(): SerializedTerminal {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      dataType: this.dataType,\r\n      name: this.name,\r\n      style: this.style,\r\n      hitColor: this.hitColor.serialize()\r\n    };\r\n  }\r\n  static deSerialize(node: Node, data: SerializedTerminal): Terminal {\r\n    return new Terminal(node, data.type, data.dataType, data.name, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { FlowState } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Color } from \"./color\";\r\nimport { Flow } from \"./flow\";\r\nimport { NodeStyle, SerializedTunnelNode, TerminalStyle } from \"./interfaces\";\r\nimport { Node } from \"./node\";\r\nimport { Terminal } from \"./terminal\";\r\n\r\nexport class TunnelNode extends Node {\r\n  private _proxyTerminal: Terminal;\r\n  /** @hidden */\r\n  get proxyTerminal(): Terminal { return this._proxyTerminal; }\r\n  /** @hidden */\r\n  set proxyTerminal(terminal: Terminal) {\r\n    this._proxyTerminal = terminal;\r\n    this._proxyTerminal.on('data', data => {\r\n      (this.outputs[0] as any)['setData'](data);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    flow: Flow,\r\n    name: string,\r\n    position: Vector2,\r\n    width: number,\r\n    inputs: any[], outputs: any[],\r\n    style: NodeStyle, terminalStyle: TerminalStyle,\r\n    props: Object,\r\n    id?: string,\r\n    hitColor?: Color,\r\n  ) {\r\n\r\n    super(flow, name, position, width, inputs, outputs, style, terminalStyle, props, id, hitColor);\r\n\r\n    if (this.inputs.length > 0) {\r\n      this.inputs[0].on('data', data => {\r\n        (this.proxyTerminal as any)['setData'](data);\r\n      });\r\n    } else {\r\n      this.outputs[0].on('connect', (terminal, connector) => {\r\n        if (this.proxyTerminal.connectors.length > 0) {\r\n          connector.data = this.proxyTerminal.connectors[0].data;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  serialize(): SerializedTunnelNode {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      position: this.position.serialize(),\r\n      width: this.width,\r\n      props: this.props,\r\n      inputs: this.inputs.map(terminal => terminal.serialize()),\r\n      outputs: this.outputs.map(terminal => terminal.serialize()),\r\n      style: this.style,\r\n      terminalStyle: this.terminalStyle,\r\n      hitColor: this.hitColor.serialize(),\r\n      zIndex: this.zIndex,\r\n      focused: this.focused,\r\n      renderState: this.renderState,\r\n      ui: this.ui.serialize(),\r\n      proxyTerminalId: this.proxyTerminal.id\r\n    }\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedTunnelNode): TunnelNode {\r\n    return new TunnelNode(flow, data.name, Vector2.deSerialize(data.position), data.width, data.inputs, data.outputs, data.style, data.terminalStyle, data.props, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Connector, Flow, Group, Node, Color, Hooks } from \"./core/index\";\r\nimport { Vector2 } from \"./math/vector\";\r\nimport { Constant, TerminalType, ViewPort } from './math/constants';\r\nimport { Dimension, FlowOptions, Pointer, SerializedFlow } from \"./core/interfaces\";\r\nimport { intersects } from \"./utils/utils\";\r\nimport { FlowState } from './math/constants';\r\nimport { Log } from './utils/logger';\r\n\r\ndeclare global {\r\n  interface CanvasRenderingContext2D {\r\n    roundRect: (x: number, y: number, width: number, height: number, radius: number) => void,\r\n    strokeRoundRect: (x: number, y: number, width: number, height: number, radius: number) => void,\r\n    fillRoundRect: (x: number, y: number, width: number, height: number, radius: number) => void\r\n  }\r\n}\r\n/**\r\n * FlowConnect is like a placeholder that contains references to all [[Flow]]s created by this instance and can render one flow at a time on-screen\r\n * \r\n * One FlowConnect instance is bound to exactly one HTMLCanvasElement, this instance maintains/tracks the dimensions of HTMLCanvasElement,\r\n * it registers user-interaction events (mouse, keyboard, touch) and creates additional OffScreenCanvas's to track/act-upon these events\r\n */\r\nexport class FlowConnect extends Hooks {\r\n  /** Reference to the canvas element on which the flows will be rendered by FlowConnect instance */\r\n  canvas: HTMLCanvasElement;\r\n  private _context: CanvasRenderingContext2D;\r\n  get context(): CanvasRenderingContext2D { return this._context };\r\n\r\n  /** For rendering color hit-maps for [[Node]]s */\r\n  offCanvas: OffscreenCanvas | HTMLCanvasElement;\r\n  private _offContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  get offContext(): OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D { return this._offContext };\r\n\r\n  /** For rendering color hit-maps for UI elements of [[Node]]s */\r\n  offUICanvas: OffscreenCanvas | HTMLCanvasElement;\r\n  private _offUIContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  get offUIContext(): OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D { return this._offUIContext };\r\n\r\n  /** For rendering color hit-maps for [[Group]]s */\r\n  offGroupCanvas: OffscreenCanvas | HTMLCanvasElement;\r\n  private _offGroupContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  get offGroupContext(): OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D { return this._offGroupContext };\r\n\r\n  /** Canvas's absolute position and dimension from viewport origin (top-left) (for e.g. if the canvas element is inside a scrollable div) */\r\n  canvasDimensions: Dimension = { top: 0, left: 0, width: 0, height: 0 };\r\n\r\n  get cursor(): string { return this.canvas.style.cursor; }\r\n  set cursor(cursor: string) { this.canvas.style.cursor = cursor; }\r\n\r\n  /** Id recieved from *requestAnimationFrame* */\r\n  private frameId: number;\r\n\r\n  /** Root flow of the flow-tree (for e.g. you might have a [[Flow]] that contains [[SubFlowNode]]s that again contains SubFlowNodes and so on...) */\r\n  private rootFlow: Flow;\r\n  /** Flow which is currently rendered on the canvas */\r\n  private currFlow: Flow;\r\n\r\n  /** All the flows created by this FlowConnect instance  */\r\n  flows: Flow[] = [];\r\n\r\n  /** Reference of the current/previous Nodes/Groups under user-interaction (mouse, touch) */\r\n  private currHitNode: Node;\r\n  private prevHitNode: Node;\r\n  private currHitGroup: Group;\r\n\r\n  /** Reference to the new Group being drawn */\r\n  private currGroup: Group;\r\n  private groupStartPoint: Vector2;\r\n\r\n  /** @hidden Reference to the new Connector being drawn */\r\n  floatingConnector: Connector;\r\n\r\n  /** For controlling user-interaction */\r\n  private pointers: Pointer[] = [];\r\n  private keymap: { [key: string]: boolean } = {};\r\n  private touchControls: { [control: string]: boolean } = { 'CreateGroup': false };\r\n\r\n  /** @hidden HTML input overlayed on canvas */\r\n  private genericInput: HTMLInputElement = document.createElement('input');\r\n\r\n  minScale: number = 0.1;\r\n  maxScale: number = 5;\r\n  wheelScaleDelta: number = 1.05;\r\n  pinchScaleDelta: number = 1.02;\r\n  get scale(): number { return this._transform.a };\r\n  private _transform: DOMMatrix = new DOMMatrix();\r\n\r\n  /** Current transformation matrix */\r\n  get transform(): DOMMatrix { return this._transform };\r\n  private inverseTransform: DOMMatrix = new DOMMatrix();\r\n  private identity: DOMMatrix = new DOMMatrix();\r\n\r\n  /** Time (in ms) when one or more flows created by this FlowConnect instance was started */\r\n  startTime: number = -1;\r\n  private timerId: number;\r\n  /** No. of milliseconds passed since the start of one or more flows */\r\n  get time(): number { return (this.startTime < 0) ? this.startTime : (performance.now() - this.startTime) };\r\n\r\n  /**\r\n   * @param mount HTML element (div or canvas) on which FlowConnect will render [[Flow]]s, if no mount is provided, a new canvas element will be created and attached to document.body\r\n   */\r\n  constructor(mount?: HTMLCanvasElement | HTMLDivElement, width?: number, height?: number) {\r\n    super();\r\n    this.prepareCanvas(mount, width, height);\r\n    this.setupHitCanvas();\r\n    this.calculateCanvasDimension();\r\n    this.registerChangeListeners();\r\n    this.attachStyles();\r\n    this.polyfill();\r\n    this.registerEvents();\r\n    this.setGenericInput();\r\n  }\r\n\r\n  /** Re-calculates cavnvas position/dimension when scrolling/resizing happens */\r\n  private registerChangeListeners() {\r\n    let throttle = false;\r\n    document.addEventListener('scroll', () => {\r\n      if (!throttle) {\r\n        window.requestAnimationFrame(() => {\r\n          this.calculateCanvasDimension();\r\n          throttle = false;\r\n        });\r\n        throttle = true;\r\n      }\r\n    });\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      this.calculateCanvasDimension();\r\n    })\r\n    resizeObserver.observe(this.canvas);\r\n  }\r\n  private prepareCanvas(mount?: HTMLCanvasElement | HTMLDivElement, width?: number, height?: number) {\r\n    if (!mount) {\r\n      this.canvas = document.createElement('canvas');\r\n      this.canvas.width = document.body.clientWidth;\r\n      this.canvas.height = document.body.clientHeight;\r\n      document.body.appendChild(this.canvas);\r\n    } else if (mount instanceof HTMLDivElement) {\r\n      this.canvas = document.createElement('canvas');\r\n      if (width && height) {\r\n        this.canvas.width = width;\r\n        this.canvas.height = height;\r\n      } else {\r\n        this.canvas.width = mount.clientWidth;\r\n        this.canvas.height = mount.clientHeight;\r\n      }\r\n      mount.appendChild(this.canvas);\r\n    } else if (mount instanceof HTMLCanvasElement) {\r\n      this.canvas = mount;\r\n      if (width && height) {\r\n        this.canvas.width = width;\r\n        this.canvas.height = height;\r\n      }\r\n    } else {\r\n      Log.error('mount provided is not of type HTMLDivElement or HTMLCanvasElement')\r\n    }\r\n    this._context = this.canvas.getContext('2d');\r\n  }\r\n  /** Creates additional canvas's for rendering color hit-maps */\r\n  private setupHitCanvas() {\r\n    if (typeof OffscreenCanvas !== 'undefined' && typeof OffscreenCanvasRenderingContext2D !== 'undefined') {\r\n      this.offCanvas = new OffscreenCanvas(this.canvasDimensions.width, this.canvasDimensions.height);\r\n      this.offUICanvas = new OffscreenCanvas(this.canvasDimensions.width, this.canvasDimensions.height);\r\n      this.offGroupCanvas = new OffscreenCanvas(this.canvasDimensions.width, this.canvasDimensions.height);\r\n    } else {\r\n      this.offCanvas = document.createElement('canvas');\r\n      this.offUICanvas = document.createElement('canvas');\r\n      this.offGroupCanvas = document.createElement('canvas');\r\n    }\r\n    this._offContext = this.offCanvas.getContext('2d');\r\n    this._offUIContext = this.offUICanvas.getContext('2d');\r\n    this._offGroupContext = this.offGroupCanvas.getContext('2d');\r\n  }\r\n  private attachStyles() {\r\n    this.canvas.style.touchAction = 'none';\r\n\r\n    let inputStyle = document.createElement('style');\r\n    inputStyle.innerHTML = 'input.flow-connect-input { position: fixed; visibility: hidden; pointer-events: none; z-index: 100; border: none; border-radius: 0; box-sizing: border-box;} input.flow-connect-input:focus { outline: none; }';\r\n    document.getElementsByTagName('head')[0].appendChild(inputStyle);\r\n  }\r\n  private calculateCanvasDimension() {\r\n    let boundingRect = this.canvas.getBoundingClientRect();\r\n    this.canvasDimensions = {\r\n      top: Math.round(boundingRect.top - window.scrollY),\r\n      left: Math.round(boundingRect.left - window.scrollX),\r\n      width: Math.round(boundingRect.width),\r\n      height: Math.round(boundingRect.height)\r\n    }\r\n\r\n    this.offCanvas.width = this.canvasDimensions.width;\r\n    this.offCanvas.height = this.canvasDimensions.height;\r\n    this.offUICanvas.width = this.canvasDimensions.width;\r\n    this.offUICanvas.height = this.canvasDimensions.height;\r\n    this.offGroupCanvas.width = this.canvasDimensions.width;\r\n    this.offGroupCanvas.height = this.canvasDimensions.height;\r\n  }\r\n  private polyfill() {\r\n    CanvasRenderingContext2D.prototype.roundRect = function (x: number, y: number, width: number, height: number, radius: number) {\r\n      this.beginPath();\r\n      this.moveTo(x + radius, y);\r\n      this.lineTo(x + width - radius, y);\r\n      this.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      this.lineTo(x + width, y + height - radius);\r\n      this.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n      this.lineTo(x + radius, y + height);\r\n      this.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      this.lineTo(x, y + radius);\r\n      this.quadraticCurveTo(x, y, x + radius, y);\r\n      this.closePath();\r\n    }\r\n    CanvasRenderingContext2D.prototype.strokeRoundRect = function (x: number, y: number, width: number, height: number, radius: number) {\r\n      if (typeof radius === 'undefined') radius = 5;\r\n      this.roundRect(x, y, width, height, radius);\r\n      this.stroke();\r\n    }\r\n    CanvasRenderingContext2D.prototype.fillRoundRect = function (x: number, y: number, width: number, height: number, radius: number) {\r\n      if (typeof radius === 'undefined') radius = 5;\r\n      this.roundRect(x, y, width, height, radius);\r\n      this.fill();\r\n    }\r\n  }\r\n  private registerEvents(): void {\r\n    let dragDelta: Vector2;\r\n    let prevPanPosition: Vector2 = Vector2.Zero();\r\n    let prevPinchDistance: number = -1;\r\n\r\n    window.onkeydown = (ev: KeyboardEvent) => {\r\n      !this.keymap[ev.key] && (this.keymap[ev.key] = true);\r\n    }\r\n    window.onkeyup = (ev: KeyboardEvent) => {\r\n      this.keymap[ev.key] = false;\r\n    }\r\n\r\n    this.canvas.onpointerdown = (ev: PointerEvent) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.addPointer(ev.pointerId, this.getRelativePosition(ev));\r\n      if (this.pointers.length === 1) {\r\n        prevPanPosition = this.pointers[0].screenPosition;\r\n        this.currHitNode = this.getHitNode(this.pointers[0].screenPosition);\r\n        if (this.currHitNode) {\r\n          this.currHitNode.zIndex = Number.MAX_SAFE_INTEGER;\r\n          if (this.keymap['Control']) {\r\n            this.currHitNode.focused = !this.currHitNode.focused;\r\n          } else {\r\n            this.currFlow.removeAllFocus();\r\n            this.currHitNode.focused = true;\r\n          }\r\n          this.currHitNode.onDown(this.pointers[0].screenPosition.clone(), this.pointers[0].realPosition.clone());\r\n          dragDelta = this.currHitNode.position.subtract(this.pointers[0].realPosition);\r\n        } else {\r\n          if (!this.keymap['Control']) {\r\n            this.currFlow.removeAllFocus();\r\n\r\n            this.currHitGroup = this.getHitGroup(this.pointers[0].screenPosition);\r\n            this.currHitGroup && (dragDelta = this.currHitGroup.position.subtract(this.pointers[0].realPosition));\r\n          }\r\n          else if (this.keymap['Control'] || this.touchControls['CreateGroup']) {\r\n            this.groupStartPoint = this.pointers[0].realPosition.clone();\r\n            this.currGroup = new Group(this.currFlow, this.groupStartPoint.clone(), 0, 0, 'New Group');\r\n          }\r\n        }\r\n      } else {\r\n        this.currHitNode = null;\r\n        this.currHitGroup = null;\r\n        this.currFlow.removeAllFocus();\r\n        if (this.floatingConnector) {\r\n          this.fallbackConnection();\r\n        }\r\n      }\r\n    }\r\n    this.canvas.onpointerup = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.removePointer(this.pointers, ev);\r\n\r\n      if (this.pointers.length < 2) prevPinchDistance = -1;\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let realPosition = screenPosition.transform(this.inverseTransform);\r\n\r\n      if (this.currHitNode) this.handleGrouping(screenPosition);\r\n\r\n      this.currHitNode = null;\r\n      this.currHitGroup = null;\r\n\r\n      let hitNode = this.getHitNode(screenPosition);\r\n      hitNode && hitNode.onUp(screenPosition.clone(), realPosition.clone());\r\n\r\n      if (this.currGroup) {\r\n        let newGroup = this.currGroup;\r\n        this.currGroup = null;\r\n        if (newGroup.width > 10 && newGroup.height > 10) {\r\n          this.currFlow.groups.push(newGroup);\r\n          newGroup.setContainedNodes();\r\n        }\r\n      }\r\n      if (this.floatingConnector) this.handleConnection(hitNode, screenPosition, realPosition);\r\n    }\r\n    this.canvas.onpointerout = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.removePointer(this.pointers, ev);\r\n      if (this.pointers.length === 0) {\r\n        if (this.currHitNode) {\r\n          let screenPosition = this.getRelativePosition(ev);\r\n          this.handleGrouping(screenPosition);\r\n        }\r\n        this.currHitNode = null;\r\n        this.currHitGroup = null;\r\n      }\r\n\r\n      if (this.currGroup) {\r\n        let newGroup = this.currGroup;\r\n        this.currGroup = null;\r\n        if (newGroup.width > 10 && newGroup.height > 10) {\r\n          this.currFlow.groups.push(newGroup);\r\n          newGroup.setContainedNodes();\r\n        }\r\n      }\r\n\r\n      if (this.floatingConnector) this.fallbackConnection();\r\n\r\n      if (this.prevHitNode) {\r\n        let screenPosition = this.getRelativePosition(ev);\r\n        let realPosition = screenPosition.transform(this.inverseTransform);\r\n        this.prevHitNode.onExit(screenPosition, realPosition);\r\n        this.prevHitNode = null;\r\n      }\r\n    }\r\n    this.canvas.onpointermove = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let realPosition = screenPosition.transform(this.inverseTransform);\r\n\r\n      this.updatePointer(ev.pointerId, screenPosition, realPosition);\r\n\r\n      if (this.pointers.length === 2) {\r\n        let currPinchDistance = Vector2.Distance(this.pointers[0].screenPosition, this.pointers[1].screenPosition);\r\n        if (prevPinchDistance > 0) {\r\n          if (currPinchDistance !== prevPinchDistance) {\r\n            this.handleZoom(currPinchDistance > prevPinchDistance, Vector2.Midpoint(this.pointers[0].screenPosition, this.pointers[1].screenPosition), this.pinchScaleDelta);\r\n          }\r\n        }\r\n        prevPinchDistance = currPinchDistance;\r\n      }\r\n\r\n      if (this.currGroup) {\r\n        if (realPosition.x < this.groupStartPoint.x) this.currGroup.position.x = realPosition.x;\r\n        this.currGroup.width = Math.abs(this.groupStartPoint.x - realPosition.x);\r\n\r\n        if (realPosition.y < this.groupStartPoint.y) this.currGroup.position.y = realPosition.y;\r\n        this.currGroup.height = Math.abs(this.groupStartPoint.y - realPosition.y);\r\n      }\r\n\r\n      if (this.currHitNode) {\r\n        this.currHitNode.onDrag(screenPosition.clone(), realPosition.clone());\r\n        if ((!this.currHitNode.currHitUINode || !this.currHitNode.currHitUINode.draggable) && !this.currHitNode.currHitTerminal && !this.floatingConnector) {\r\n          this.currHitNode.position = realPosition.add(dragDelta);\r\n\r\n          let hitGroup = this.getHitGroup(screenPosition);\r\n          if (hitGroup && hitGroup === this.currHitNode.group) {\r\n            let groupRealPos = hitGroup.position.transform(this._transform);\r\n            let nodeRealPos = this.currHitNode.position.transform(this._transform);\r\n\r\n            let intersection = intersects(groupRealPos.x, groupRealPos.y,\r\n              groupRealPos.x + hitGroup.width * this.scale,\r\n              groupRealPos.y + hitGroup.height * this.scale,\r\n              nodeRealPos.x, nodeRealPos.y,\r\n              nodeRealPos.x + this.currHitNode.width * this.scale,\r\n              nodeRealPos.y + this.currHitNode.ui.height * this.scale\r\n            );\r\n\r\n            if (intersection === ViewPort.INSIDE) {\r\n              let nodeIndex = hitGroup.nodes.findIndex(node => node.id === this.currHitNode.id);\r\n              hitGroup.nodeDeltas[nodeIndex] = this.currHitNode.position.subtract(hitGroup.position);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (this.currHitGroup) {\r\n          this.currHitGroup.position = realPosition.add(dragDelta);\r\n        } else if (this.pointers.length === 1 && !this.keymap['Control'] && !this.touchControls['CreateGroup']) {\r\n          let delta = screenPosition.subtract(prevPanPosition).multiplyInPlace(1 / this.scale);\r\n          prevPanPosition = screenPosition;\r\n          this.updateTransform(null, null, delta);\r\n        }\r\n      }\r\n      if (this.floatingConnector) this.floatingConnector.floatingTip = realPosition;\r\n\r\n      if (ev.pointerType === 'mouse' && !this.currHitNode) {\r\n        let hitNode = this.getHitNode(screenPosition);\r\n        if (hitNode !== this.prevHitNode) {\r\n          this.prevHitNode && this.prevHitNode.onExit(screenPosition, realPosition);\r\n          hitNode && hitNode.onEnter(screenPosition, realPosition);\r\n        } else {\r\n          hitNode && (!this.currHitNode) && hitNode.onOver(screenPosition, realPosition);\r\n        }\r\n        this.prevHitNode = hitNode;\r\n      }\r\n    }\r\n    this.canvas.onclick = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let realPosition = screenPosition.transform(this.inverseTransform);\r\n      let hitNode = this.getHitNode(screenPosition);\r\n      hitNode && hitNode.onClick(screenPosition.clone(), realPosition.clone());\r\n\r\n      if (!hitNode) {\r\n        let hitGroup = this.getHitGroup(screenPosition);\r\n        hitGroup && hitGroup.onClick(screenPosition.clone(), realPosition.clone());\r\n      }\r\n    };\r\n    this.canvas.oncontextmenu = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      ev.preventDefault();\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let hitNode = this.getHitNode(screenPosition);\r\n      hitNode && hitNode.onContextMenu();\r\n      if (!this.keymap['Control']) this.currFlow.removeAllFocus();\r\n      hitNode && (hitNode.focused = true);\r\n    }\r\n    this.canvas.onwheel = (ev: WheelEvent) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.handleZoom(ev.deltaY < 0, this.getRelativePosition(ev), this.wheelScaleDelta);\r\n    }\r\n  }\r\n  private setGenericInput() {\r\n    this.genericInput.className = 'flow-connect-input';\r\n    this.genericInput.style.visibility = 'hidden';\r\n    this.genericInput.style.pointerEvents = 'none';\r\n    this.genericInput.style.padding = '0';\r\n\r\n    this.genericInput.onblur = () => {\r\n      this.genericInput.style.visibility = 'hidden';\r\n      this.genericInput.style.pointerEvents = 'none';\r\n\r\n      this.genericInput.onchange = null;\r\n    }\r\n\r\n    document.body.appendChild(this.genericInput);\r\n  }\r\n  /** @hidden */\r\n  showGenericInput(position: Vector2 | DOMPoint, value: string, styles: { [key: string]: any }, attributes: { [key: string]: any }, callback: (value: string) => void) {\r\n    if (document.activeElement === this.genericInput) return;\r\n\r\n    Object.keys(styles).forEach(key => (this.genericInput.style as any)[key] = styles[key]);\r\n    Object.keys(attributes).forEach(key => (this.genericInput as any)[key] = attributes[key]);\r\n\r\n    this.genericInput.style.left = (position.x + this.canvasDimensions.left) + 'px';\r\n    this.genericInput.style.top = (position.y + this.canvasDimensions.top - 3) + 'px';\r\n    this.genericInput.style.visibility = 'visible';\r\n    this.genericInput.style.pointerEvents = 'all';\r\n    this.genericInput.value = value;\r\n    this.genericInput.onchange = () => callback(this.genericInput.value);\r\n    this.genericInput.focus();\r\n  }\r\n  private updatePointer(id: number, screenPosition: Vector2, realPosition: Vector2) {\r\n    let pointer = this.pointers.find(pointer => pointer.id === id);\r\n    if (pointer) {\r\n      pointer.screenPosition = screenPosition;\r\n      pointer.realPosition = realPosition;\r\n    }\r\n  }\r\n  private handleZoom(zoomIn: boolean, origin: Vector2, scaleDelta: number) {\r\n    if ((this._transform.a >= this.maxScale && zoomIn) || (this._transform.a <= this.minScale && !zoomIn)) return;\r\n    this.updateTransform(zoomIn ? scaleDelta : (1 / scaleDelta), origin, null);\r\n  }\r\n  private handleGrouping(screenPosition: Vector2) {\r\n    let hitGroup = this.getHitGroup(screenPosition);\r\n\r\n    let intersection;\r\n    if (hitGroup) {\r\n      let groupRealPos = hitGroup.position.transform(this._transform);\r\n      let nodeRealPos = this.currHitNode.position.transform(this._transform);\r\n\r\n      intersection = intersects(groupRealPos.x, groupRealPos.y,\r\n        groupRealPos.x + hitGroup.width * this.scale,\r\n        groupRealPos.y + hitGroup.height * this.scale,\r\n        nodeRealPos.x, nodeRealPos.y,\r\n        nodeRealPos.x + this.currHitNode.width * this.scale,\r\n        nodeRealPos.y + this.currHitNode.ui.height * this.scale\r\n      );\r\n    }\r\n\r\n    if (this.currHitNode.group) {\r\n      if (this.currHitNode.group !== hitGroup) {\r\n        let nodeIndex = this.currHitNode.group.nodes.findIndex(node => node.id === this.currHitNode.id);\r\n        this.currHitNode.group.nodes.splice(nodeIndex, 1);\r\n        this.currHitNode.group.nodeDeltas.splice(nodeIndex, 1);\r\n        this.currHitNode.group = null;\r\n      } else {\r\n        if (intersection !== ViewPort.INSIDE) {\r\n          let nodeIndex = this.currHitNode.group.nodes.findIndex(node => node.id === this.currHitNode.id);\r\n          this.currHitNode.group.nodes.splice(nodeIndex, 1);\r\n          this.currHitNode.group.nodeDeltas.splice(nodeIndex, 1);\r\n          this.currHitNode.group = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (hitGroup) {\r\n      if (intersection === ViewPort.INSIDE) {\r\n        this.currHitNode.group = hitGroup;\r\n        hitGroup.nodes.push(this.currHitNode);\r\n        hitGroup.nodeDeltas.push(this.currHitNode.position.subtract(hitGroup.position));\r\n      }\r\n    }\r\n  }\r\n  private handleConnection(hitNode: Node, screenPosition: Vector2, realPosition: Vector2) {\r\n    if (!hitNode) {\r\n      this.fallbackConnection();\r\n      return;\r\n    }\r\n    let hitTerminal = hitNode.getHitTerminal(\r\n      Color.rgbaToString(this._offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data),\r\n      screenPosition.clone(),\r\n      realPosition.clone()\r\n    );\r\n    if (hitTerminal) hitNode.currHitTerminal = hitTerminal;\r\n    if (!hitTerminal) {\r\n      this.fallbackConnection();\r\n      return;\r\n    }\r\n\r\n    let destination = hitNode.currHitTerminal;\r\n    if (!this.floatingConnector.canConnect(destination)) {\r\n      this.fallbackConnection();\r\n      hitNode.currHitTerminal = null;\r\n      return;\r\n    } else {\r\n      if (destination.type === TerminalType.OUT) {\r\n        this.floatingConnector.completeConnection(destination);\r\n        hitNode.currHitTerminal = null;\r\n      } else {\r\n        if (destination.connectors.length > 0) {\r\n          if (destination.connectors[0].start === this.floatingConnector.start) {\r\n            this.fallbackConnection();\r\n            hitNode.currHitTerminal = null;\r\n            return;\r\n          }\r\n          let index = destination.connectors[0].start.connectors.indexOf(destination.connectors[0]);\r\n          let [oldConnector] = destination.connectors[0].start.connectors.splice(index, 1);\r\n          delete this.currFlow.connectors[oldConnector.id];\r\n          oldConnector.start.call('disconnect', oldConnector.start, oldConnector);\r\n          oldConnector.end.call('disconnect', oldConnector.end, oldConnector);\r\n\r\n          this.floatingConnector.completeConnection(destination);\r\n          hitNode.currHitTerminal = null;\r\n        } else {\r\n          this.floatingConnector.completeConnection(destination);\r\n          hitNode.currHitTerminal = null;\r\n        }\r\n      }\r\n      this.floatingConnector = null;\r\n    }\r\n  }\r\n  private getRelativePosition(ev: PointerEvent | WheelEvent | MouseEvent) {\r\n    return new Vector2(ev.clientX - this.canvasDimensions.left, ev.clientY - this.canvasDimensions.top);\r\n  }\r\n  private updateTransform(scale: number, scaleOrigin: Vector2, translate: Vector2) {\r\n    if (scale) {\r\n      let realSpaceOrigin = scaleOrigin.transform(this.inverseTransform);\r\n      this._transform\r\n        .translateSelf(realSpaceOrigin.x, realSpaceOrigin.y)\r\n        .scaleSelf(scale, scale)\r\n        .translateSelf(-realSpaceOrigin.x, -realSpaceOrigin.y);\r\n    }\r\n    if (translate) {\r\n      this._transform.translateSelf(translate.x, translate.y);\r\n    }\r\n\r\n    this.inverseTransform = this._transform.inverse();\r\n\r\n    this._context.setTransform(this._transform);\r\n    this._offContext.setTransform(this._transform);\r\n    this._offUIContext.setTransform(this._transform);\r\n    this._offGroupContext.setTransform(this._transform);\r\n\r\n    this.call('transform', this);\r\n  }\r\n  private fallbackConnection() {\r\n    this.floatingConnector.removeConnection();\r\n    this.currFlow.removeConnector(this.floatingConnector.id);\r\n  }\r\n  private addPointer(pointerId: number, position: Vector2) {\r\n    this.pointers.push({\r\n      id: pointerId,\r\n      screenPosition: position,\r\n      realPosition: position.transform(this.inverseTransform)\r\n    });\r\n  }\r\n  private removePointer(pointers: Pointer[], ev: PointerEvent) {\r\n    pointers.splice(pointers.findIndex(pointer => pointer.id === ev.pointerId), 1);\r\n  }\r\n  private getHitNode(position: Vector2): Node {\r\n    let rgbaString = Color.rgbaToString(this._offContext.getImageData(position.x, position.y, 1, 1).data);\r\n    return this.currFlow.hitColorToNode[rgbaString];\r\n  }\r\n  private getHitGroup(position: Vector2): Group {\r\n    let rgbaString = Color.rgbaToString(this._offGroupContext.getImageData(position.x, position.y, 1, 1).data);\r\n    return this.currFlow.hitColorToGroup[rgbaString];\r\n  }\r\n  private clear() {\r\n    this._context.save();\r\n    this._context.setTransform(this.identity);\r\n    this._context.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this._context.restore();\r\n\r\n    this._offContext.save();\r\n    this._offContext.setTransform(this.identity);\r\n    this._offContext.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this._offContext.restore();\r\n\r\n    this._offUIContext.save();\r\n    this._offUIContext.setTransform(this.identity);\r\n    this._offUIContext.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this._offUIContext.restore();\r\n\r\n    this._offGroupContext.save();\r\n    this._offGroupContext.setTransform(this.identity);\r\n    this._offGroupContext.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this._offGroupContext.restore();\r\n  }\r\n  /** @hidden */\r\n  startGlobalTime() {\r\n    if (this.startTime < 0) {\r\n      this.startTime = performance.now();\r\n      this._startGlobalTime();\r\n    }\r\n  }\r\n  private _startGlobalTime() {\r\n    this.call('tick', this);\r\n    this.timerId = window.requestAnimationFrame(this._startGlobalTime.bind(this));\r\n  }\r\n  /** @hidden */\r\n  stopGlobalTime() {\r\n    let allFlowsStopped = true;\r\n    for (let flow of this.flows) {\r\n      if (flow.state !== FlowState.Stopped) {\r\n        allFlowsStopped = false;\r\n        break;\r\n      }\r\n    }\r\n    if (allFlowsStopped) {\r\n      cancelAnimationFrame(this.timerId);\r\n      this.startTime = -1;\r\n      this.call('tickreset', this);\r\n    }\r\n  }\r\n  private _render() {\r\n    this.clear();\r\n\r\n    this.currGroup && this.currGroup.render();\r\n    this.currFlow.render();\r\n    this.call('update', this);\r\n\r\n    this.frameId = window.requestAnimationFrame(this._render.bind(this));\r\n  }\r\n\r\n  createFlow(options: FlowOptions = { name: 'New Flow', rules: {}, terminalTypeColors: {} }): Flow {\r\n    options.rules = { ...options.rules, ...Constant.DefaultRules };\r\n    let flow = new Flow(this, options.name, options.rules, options.terminalTypeColors);\r\n    this.flows.push(flow);\r\n    return flow;\r\n  }\r\n  render(flow: Flow) {\r\n    if (flow === this.currFlow) return;\r\n    if (this.currFlow) {\r\n      window.cancelAnimationFrame(this.frameId);\r\n      this.currFlow.deregisterListeners();\r\n    }\r\n    if (!this.rootFlow || !this.rootFlow.existsInFlow(flow)) {\r\n      this.rootFlow = flow;\r\n    }\r\n    this.currFlow = flow;\r\n    this._render();\r\n  }\r\n  /** Render the root flow of the flow-tree */\r\n  top() {\r\n    this.render(this.rootFlow);\r\n  }\r\n  /** Creates a flow from json\r\n   * @param json Json string with schema [[SerializedFlow]]\r\n   */\r\n  fromJson(json: string): Flow {\r\n    let data: SerializedFlow;\r\n    let flow: Flow = null;\r\n\r\n    try {\r\n      data = JSON.parse(json);\r\n      flow = Flow.deSerialize(this, data);\r\n    } catch (error) {\r\n      Log.error(error);\r\n    }\r\n    return flow;\r\n  }\r\n  toJson(flow: Flow): string {\r\n    let serializedFlow: SerializedFlow = flow.serialize();\r\n    try {\r\n      return JSON.stringify(serializedFlow, null);\r\n    } catch (error) {\r\n      Log.error(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport * from './core/index';\r\nexport * from './math/index';\r\nexport * from './ui/index';\r\nexport * from './utils/index';\r\n","import { Rules } from \"../core/interfaces\";\r\nimport { Vector2 } from \"./vector\";\r\n\r\nexport class Constant {\r\n  static TAU = 0.017453292519943295;\r\n\r\n  /** Default rules every [[Flow]] will have, for e.g. a string output can only be connected to string inputs.\r\n   *  ```javascript\r\n   *  {\r\n   *    'string': ['string'],\r\n   *    'number': ['number'],\r\n   *    'boolean': ['boolean'],\r\n   *    'file': ['file'],\r\n   *    'event': ['event']\r\n   *  }\r\n   *  ```\r\n   */\r\n  static DefaultRules: Rules = {\r\n    'string': ['string', 'any'],\r\n    'number': ['number', 'any'],\r\n    'boolean': ['boolean', 'any'],\r\n    'file': ['file', 'any'],\r\n    'event': ['event', 'any'],\r\n    'any': ['any']\r\n  };\r\n  /** Default colors for [[Group]]s */\r\n  static DefaultGroupColors = {\r\n    colors: [\r\n      ['rgba(239, 134, 119, 1)', 'rgba(239, 134, 119, .5)'],\r\n      ['rgba(160, 231, 125, 1)', 'rgba(160, 231, 125, .5)'],\r\n      ['rgba(130, 182, 217, 1)', 'rgba(130, 182, 217, .5)']\r\n    ],\r\n    RED: () => Constant.DefaultGroupColors.colors[0],\r\n    GREEN: () => Constant.DefaultGroupColors.colors[1],\r\n    BLUE: () => Constant.DefaultGroupColors.colors[2],\r\n    Random: () => Constant.DefaultGroupColors.colors[Math.floor(Math.random() * Constant.DefaultGroupColors.colors.length)]\r\n  };\r\n\r\n  /** @hidden */\r\n  static DefaultNodeStyle = () => {\r\n    return {\r\n      font: 'arial',\r\n      fontSize: '.75rem',\r\n      titleFont: 'arial',\r\n      titleFontSize: '.85rem',\r\n      color: '#000',\r\n      titleColor: '#000',\r\n      maximizeButtonColor: 'darkgrey',\r\n      nodeButtonSize: 10,\r\n      nodeButtonSpacing: 5,\r\n      expandButtonColor: '#000',\r\n      padding: 10,\r\n      spacing: 10,\r\n      rowHeight: 20,\r\n      titleHeight: 29,\r\n      terminalRowHeight: 24,\r\n      terminalStripMargin: 8\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultConnectorStyle = () => {\r\n    return {\r\n      width: 5,\r\n      color: '#7fff00aa'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultGroupStyle = () => {\r\n    return {\r\n      titleColor: '#000',\r\n      fontSize: '16px',\r\n      font: 'arial'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultTerminalStyle = () => {\r\n    return {\r\n      radius: 4,\r\n      borderColor: '#222',\r\n      shadowBlur: 0,\r\n      shadowColor: '#ccc',\r\n      focusColor: '#bbbbbb80'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultButtonStyle = () => {\r\n    return {\r\n      backgroundColor: '#666',\r\n      padding: 5,\r\n      color: '#fff',\r\n      font: 'arial',\r\n      fontSize: '11px'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultContainerStyle = () => {\r\n    return {\r\n      backgroundColor: '#dddddd',\r\n      shadowColor: '#666',\r\n      shadowBlur: 3,\r\n      shadowOffset: new Vector2(3, 3),\r\n      borderWidth: 1,\r\n      borderColor: '#444'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultDisplayStyle = () => {\r\n    return {\r\n      borderColor: '#000'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultHorizontalLayoutStyle = () => {\r\n    return {};\r\n  };\r\n  /** @hidden */\r\n  static DefaultImageStyle = () => {\r\n    return {\r\n      align: 'left'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultInputStyle = () => {\r\n    return {\r\n      backgroundColor: '#eee',\r\n      color: '#000',\r\n      fontSize: '11px',\r\n      font: 'arial',\r\n      border: '1px solid black',\r\n      align: 'left',\r\n      type: InputType.Text\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultLabelStyle = () => {\r\n    return {\r\n      color: '#000',\r\n      fontSize: '11px',\r\n      font: 'arial',\r\n      align: 'left'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultSelectStyle = () => {\r\n    return {\r\n      arrowColor: '#000'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultSliderStyle = (height: number) => {\r\n    return {\r\n      color: '#444',\r\n      thumbColor: '#000',\r\n      railHeight: 3,\r\n      thumbRadius: height / 2\r\n    }\r\n  }\r\n  /** @hidden */\r\n  static DefaultSourceStyle = () => {\r\n    return {\r\n      borderColor: '#000'\r\n    };\r\n  };\r\n  /** @hidden */\r\n  static DefaultToggleStyle = () => {\r\n    return {\r\n      backgroundColor: '#999',\r\n      color: '#000'\r\n    };\r\n  };\r\n}\r\n\r\n/** @hidden Constants to determine whether two rectangles are inside one another or intersecting or disconnected */\r\nexport enum ViewPort {\r\n  INSIDE = 'INSIDE',\r\n  OUTSIDE = 'OUTSIDE',\r\n  INTERSECT = 'INTERSECT'\r\n}\r\nexport enum NodeState {\r\n  MAXIMIZED,\r\n  MINIMIZED\r\n}\r\n/** @hidden Levels of Detail, affects rendering while zooming in/out */\r\nexport enum LOD {\r\n  LOD0,\r\n  LOD1,\r\n  LOD2\r\n}\r\nexport enum TerminalType {\r\n  IN = 1,\r\n  OUT = 2\r\n}\r\nexport enum InputType {\r\n  Text = \"text\",\r\n  Number = \"number\"\r\n}\r\nexport enum Align {\r\n  Left,\r\n  Right\r\n}\r\nexport enum UIType {\r\n  Button,\r\n  Container,\r\n  Display,\r\n  HorizontalLayout,\r\n  Image,\r\n  Input,\r\n  Label,\r\n  Select,\r\n  Slider,\r\n  Source,\r\n  Toggle\r\n}\r\nexport enum FlowState {\r\n  Running,\r\n  Stopped\r\n}\r\nexport enum GraphState {\r\n  Running,\r\n  FullRun,\r\n  Idle,\r\n  Stopped\r\n}","export * from './constants';\r\nexport * from './vector';","import { Serializable, SerializedVector2 } from '../core/interfaces';\r\n\r\nexport class Vector2 implements Serializable {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(xOrDOMPoint: number | DOMPoint, y?: number) {\r\n    if (xOrDOMPoint instanceof DOMPoint)\r\n      [this.x, this.y] = [xOrDOMPoint.x, xOrDOMPoint.y];\r\n    else\r\n      [this.x, this.y] = [xOrDOMPoint || 0, y || 0];\r\n  }\r\n\r\n  toString() {\r\n    return '[' + this.x.toFixed(3) + ', ' + this.y.toFixed(3) + ']';\r\n  }\r\n  add(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      return new Vector2(this.x + arg1.x, this.y + arg1.y);\r\n    } else if (typeof arg2 === 'undefined') {\r\n      return new Vector2(this.x + arg1, this.y + arg1);\r\n    } else {\r\n      return new Vector2(this.x + arg1, this.y + arg2);\r\n    }\r\n  }\r\n  addInPlace(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      this.x += arg1.x;\r\n      this.y += arg1.y;\r\n    } else if (typeof arg2 === 'undefined') {\r\n      this.x += arg1;\r\n      this.y += arg1;\r\n    } else {\r\n      this.x += arg1;\r\n      this.y += arg2;\r\n    }\r\n    return this;\r\n  }\r\n  multiply(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      return new Vector2(this.x * arg1.x, this.y * arg1.y);\r\n    } else if (typeof arg2 === 'undefined') {\r\n      return new Vector2(this.x * arg1, this.y * arg1);\r\n    } else {\r\n      return new Vector2(this.x * arg1, this.y * arg2);\r\n    }\r\n  }\r\n  multiplyInPlace(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      this.x *= arg1.x;\r\n      this.y *= arg1.y;\r\n    } else if (typeof arg2 === 'undefined') {\r\n      this.x *= arg1;\r\n      this.y *= arg1;\r\n    } else {\r\n      this.x *= arg1;\r\n      this.y *= arg2;\r\n    }\r\n    return this;\r\n  }\r\n  subtract(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      return new Vector2(this.x - arg1.x, this.y - arg1.y);\r\n    } else if (typeof arg2 === 'undefined') {\r\n      return new Vector2(this.x - arg1, this.y - arg1);\r\n    } else {\r\n      return new Vector2(this.x - arg1, this.y - arg2);\r\n    }\r\n  }\r\n  subtractInPlace(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      this.x -= arg1.x;\r\n      this.y -= arg1.y;\r\n    } else if (typeof arg2 === 'undefined') {\r\n      this.x -= arg1;\r\n      this.y -= arg1;\r\n    } else {\r\n      this.x -= arg1;\r\n      this.y -= arg2;\r\n    }\r\n    return this;\r\n  }\r\n  transform(transform: DOMMatrix): Vector2 {\r\n    return new Vector2(transform.transformPoint(this));\r\n  }\r\n  transformInPlace(transform: DOMMatrix): Vector2 {\r\n    let transformedPoint = transform.transformPoint(this);\r\n    [this.x, this.y] = [transformedPoint.x, transformedPoint.y];\r\n    return this;\r\n  }\r\n  max(): number {\r\n    return Math.max(this.x, this.y);\r\n  }\r\n  clone(): Vector2 {\r\n    return new Vector2(this.x, this.y);\r\n  }\r\n  clamp(minX: number, maxX: number, minY: number, maxY: number): Vector2 {\r\n    if (this.x < minX) this.x = minX;\r\n    else if (this.x > maxX) this.x = maxX;\r\n\r\n    if (this.y < minY) this.y = minY;\r\n    else if (this.y > maxY) this.y = maxY;\r\n\r\n    return this;\r\n  }\r\n\r\n  static Distance(vector1OrX1: Vector2 | number, vector2OrY1: Vector2 | number, x2?: number, y2?: number): number {\r\n    if (vector1OrX1 instanceof Vector2 && vector2OrY1 instanceof Vector2) {\r\n      return Math.sqrt(Math.pow(vector2OrY1.x - vector1OrX1.x, 2) + Math.pow(vector2OrY1.y - vector1OrX1.y, 2));\r\n    } else if (typeof vector1OrX1 === 'number' && typeof vector2OrY1 === 'number') {\r\n      return Math.sqrt(Math.pow(x2 - vector1OrX1, 2) + Math.pow(y2 - vector2OrY1, 2));\r\n    }\r\n  }\r\n  static Midpoint(vector1: Vector2, vector2: Vector2): Vector2 {\r\n    return new Vector2((vector1.x + vector2.x) / 2, (vector1.y + vector2.y) / 2);\r\n  }\r\n  static Zero(): Vector2 {\r\n    return new Vector2(0, 0);\r\n  }\r\n  static Random(minX: number, maxX: number, minY: number, maxY: number): Vector2 {\r\n    return new Vector2(\r\n      Math.random() * (maxX - minX) + minX,\r\n      Math.random() * (maxY - minY) + minY\r\n    );\r\n  }\r\n\r\n  serialize(): SerializedVector2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n  static deSerialize(data: SerializedVector2): Vector2 {\r\n    return new Vector2(data.x, data.y);\r\n  }\r\n}\r\n","/** @hidden */\r\nexport const fileIcon = \"data:image/svg+xml;charset=UTF-8,%3c?xml version='1.0' encoding='iso-8859-1'?%3e%3c!-- --%3e%3csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 477.867 477.867' style='enable-background:new 0 0 477.867 477.867;' xml:space='preserve'%3e%3cg%3e%3cg%3e%3cpath d='M324.267,119.467c-9.426,0-17.067-7.641-17.067-17.067V0H102.4C74.123,0,51.2,22.923,51.2,51.2v375.467 c0,28.277,22.923,51.2,51.2,51.2h273.067c28.277,0,51.2-22.923,51.2-51.2v-307.2H324.267z'/%3e%3c/g%3e%3c/g%3e%3cg%3e%3cg%3e%3cpolygon points='341.333,10.001 341.333,85.333 416.666,85.333 '/%3e%3c/g%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3c/svg%3e\";\r\n","import { Node } from \"../core/node\";\r\nimport { Terminal } from '../core/terminal';\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Constant, TerminalType, UIType } from '../math/constants';\r\nimport { Label } from \"./label\";\r\nimport { UINode } from './ui-node';\r\nimport { ButtonStyle, Serializable, SerializedButton, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Button extends UINode implements Serializable {\r\n  label: Label;\r\n\r\n  constructor(\r\n    node: Node,\r\n    public text: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: ButtonStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Button, false, { ...Constant.DefaultButtonStyle(), ...style }, null,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'event', '', {}) :\r\n          new Terminal(node, input.type, input.dataType, input.name, input.style, input.id, Color.deSerialize(input.hitColor))\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'event', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    if (this.input) this.input.on('event', () => this.call('click', this));\r\n    this.height = height ? height : (this.node.style.rowHeight + 2 * this.style.padding);\r\n\r\n    this.label = new Label(this.node, text, null, false, false, {\r\n      fontSize: this.style.fontSize,\r\n      font: this.style.font,\r\n      align: 'center',\r\n      color: this.style.color\r\n    }, this.height);\r\n    this.label.on('click', (_node: Node, position: Vector2) => this.call('click', this, position));\r\n\r\n    this.children.push(this.label);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    this.context.fillStyle = this.style.backgroundColor;\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    this.context.strokeStyle = '#000';\r\n    this.paint();\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    this.label.position = this.position;\r\n    this.label.height = this.height;\r\n    this.label.width = this.width;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange() { }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('rightclick', this);\r\n  }\r\n\r\n  serialize(): SerializedButton {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      height: this.height,\r\n      text: this.text,\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedButton): Button {\r\n    return new Button(node, data.text, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { ContainerStyle, Serializable, SerializedContainer } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Button } from \"./button\";\r\nimport { Display } from \"./display\";\r\nimport { HorizontalLayout } from \"./horizontal-layout\";\r\nimport { Image } from './image';\r\nimport { Input } from \"./input\";\r\nimport { Label } from \"./label\";\r\nimport { Select } from \"./select\";\r\nimport { Slider } from \"./slider\";\r\nimport { Source } from \"./source\";\r\nimport { Toggle } from \"./toggle\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\n/** @hidden */\r\nexport class Container extends UINode implements Serializable {\r\n  contentWidth: number;\r\n\r\n  constructor(\r\n    node: Node,\r\n    width?: number,\r\n    style: ContainerStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, node.position, UIType.Container, false, { ...Constant.DefaultContainerStyle(), ...style }, null, null, null, id, hitColor);\r\n    this.width = typeof width !== 'undefined' ? width : 0;\r\n    this.height = this.node.style.padding * 2;\r\n    this.contentWidth = this.width - 2 * this.node.style.padding;\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    let context = this.context;\r\n    context.shadowColor = this.style.shadowColor;\r\n    context.shadowBlur = 3;\r\n    context.shadowOffsetX = this.style.shadowOffset.x;\r\n    context.shadowOffsetY = this.style.shadowOffset.y;\r\n    context.fillStyle = this.style.backgroundColor;\r\n    context.strokeStyle = this.style.borderColor;\r\n    context.lineWidth = this.style.borderWidth;\r\n    context.roundRect(this.position.x, this.position.y + this.node.style.titleHeight, this.width, this.height - this.node.style.titleHeight, 5);\r\n    context.stroke();\r\n    context.fill();\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.fillStyle = this.style.backgroundColor;\r\n    context.strokeStyle = this.style.borderColor;\r\n    context.lineWidth = this.style.borderWidth;\r\n    context.roundRect(this.position.x, this.position.y + this.node.style.titleHeight, this.width, this.height - this.node.style.titleHeight, 5);\r\n    context.stroke();\r\n    context.fill();\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    this.position = this.node.position;\r\n    let terminalsDisplayHeight = Math.max(this.node.inputs.length, this.node.outputs.length) * this.node.style.terminalRowHeight + this.node.style.titleHeight;\r\n    let x = this.position.x + this.node.style.padding;\r\n    let y = this.position.y + terminalsDisplayHeight;\r\n    this.children.forEach(child => {\r\n      y += this.node.style.spacing;\r\n      child.width = this.width - this.node.style.padding * 2;\r\n      child.position = new Vector2(x, y);\r\n      y += child.height;\r\n    });\r\n    this.height = y + this.node.style.padding - this.position.y;\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange() { }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void { }\r\n\r\n  serialize(): SerializedContainer {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      width: this.width,\r\n      style: {\r\n        backgroundColor: this.style.backgroundColor,\r\n        shadowColor: this.style.shadowColor,\r\n        shadowBlur: this.style.shadowBlur,\r\n        shadowOffset: this.style.shadowOffset.serialize(),\r\n        borderWidth: this.style.borderWidth,\r\n        borderColor: this.style.borderColor\r\n      },\r\n      childs: this.children.map(child => (child as any).serialize())\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedContainer): Container {\r\n    let uiContainer = new Container(node, data.width, data.style, data.id, Color.deSerialize(data.hitColor));\r\n    uiContainer.children.push(...data.childs.map(serializedChild => {\r\n      switch (serializedChild.type) {\r\n        case UIType.Button: return Button.deSerialize(node, serializedChild);\r\n        case UIType.Container: return Container.deSerialize(node, serializedChild);\r\n        case UIType.Display: return Display.deSerialize(node, serializedChild);\r\n        case UIType.HorizontalLayout: return HorizontalLayout.deSerialize(node, serializedChild);\r\n        case UIType.Image: return Image.deSerialize(node, serializedChild);\r\n        case UIType.Input: return Input.deSerialize(node, serializedChild);\r\n        case UIType.Label: return Label.deSerialize(node, serializedChild);\r\n        case UIType.Select: return Select.deSerialize(node, serializedChild);\r\n        case UIType.Slider: return Slider.deSerialize(node, serializedChild);\r\n        case UIType.Source: return Source.deSerialize(node, serializedChild);\r\n        case UIType.Toggle: return Toggle.deSerialize(node, serializedChild);\r\n        default: return;\r\n      }\r\n    }));\r\n    return uiContainer;\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { DisplayStyle, Serializable, SerializedDisplay } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\nexport class Display extends UINode implements Serializable {\r\n  customRenderer: (context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, width: number, height: number) => void;\r\n  offCanvas: OffscreenCanvas | HTMLCanvasElement;\r\n  offContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  private _rendering: boolean = false;\r\n\r\n  constructor(\r\n    node: Node,\r\n    height: number,\r\n    renderer: (context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, width: number, height: number) => void,\r\n    style: DisplayStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Display, false, { ...Constant.DefaultDisplayStyle(), ...style }, null, null, null, id, hitColor);\r\n    this.customRenderer = renderer;\r\n    this.height = height;\r\n    if (typeof OffscreenCanvas !== 'undefined' && typeof OffscreenCanvasRenderingContext2D !== 'undefined') {\r\n      this.offCanvas = new OffscreenCanvas(this.node.width - 2 * this.node.style.padding, this.height);\r\n      this.offContext = this.offCanvas.getContext('2d');\r\n    } else {\r\n      this.offCanvas = document.createElement('canvas');\r\n      this.offCanvas.width = this.node.width - 2 * this.node.style.padding;\r\n      this.offCanvas.height = this.height;\r\n      this.offContext = this.offCanvas.getContext('2d');\r\n    }\r\n  }\r\n\r\n  private customRender() {\r\n    return new Promise<void>(resolve => {\r\n      this.offContext.clearRect(0, 0, this.offCanvas.width, this.offCanvas.height);\r\n      this.customRenderer(this.offContext, this.offCanvas.width, this.offCanvas.height);\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    let context = this.context;\r\n    context.strokeStyle = this.style.borderColor;\r\n    context.lineWidth = 1;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n\r\n    if (!this._rendering) {\r\n      this._rendering = true;\r\n      this.customRender().finally(() => this._rendering = false);\r\n    }\r\n\r\n    context.drawImage(\r\n      this.offCanvas, 0, 0,\r\n      this.offCanvas.width, this.offCanvas.height,\r\n      this.position.x, this.position.y,\r\n      this.node.width - 2 * this.node.style.padding, this.height\r\n    );\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.strokeStyle = this.style.borderColor;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillStyle = 'lightgrey';\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    this.offCanvas.width = this.node.width - 2 * this.node.style.padding;\r\n    this.offCanvas.height = this.height;\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange() { }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    this.call('rightclick', this);\r\n  }\r\n\r\n  serialize(): SerializedDisplay {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      height: this.height,\r\n      childs: []\r\n    };\r\n  }\r\n  static deSerialize(node: Node, data: SerializedDisplay): Display {\r\n    return new Display(node, data.height, null, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { HorizontalLayoutStyle, Serializable, SerializedHorizontalLayout } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Button } from \"./button\";\r\nimport { Container } from \"./container\";\r\nimport { Display } from \"./display\";\r\nimport { Image } from './image';\r\nimport { Input } from \"./input\";\r\nimport { Label } from \"./label\";\r\nimport { Select } from \"./select\";\r\nimport { Slider } from \"./slider\";\r\nimport { Source } from \"./source\";\r\nimport { Toggle } from \"./toggle\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\nexport class HorizontalLayout extends UINode implements Serializable {\r\n\r\n  constructor(\r\n    node: Node,\r\n    childs?: UINode[],\r\n    style: HorizontalLayoutStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.HorizontalLayout, false, { ...Constant.DefaultHorizontalLayoutStyle(), ...style }, null, null, null, id, hitColor);\r\n    if (childs) this.children.push(...childs);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void { }\r\n  /** @hidden */\r\n  paintLOD1() { }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    let availableWidth = this.width;\r\n    let x = this.position.x;\r\n    let maxHeight = 0;\r\n    this.children.forEach(child => {\r\n      maxHeight = Math.max(maxHeight, child.height);\r\n    });\r\n    this.height = maxHeight;\r\n\r\n    this.children.forEach(child => {\r\n      let childWidth = child.style.grow ? child.style.grow * this.width : (1 / this.children.length) * this.width;\r\n      if (childWidth > availableWidth) childWidth = availableWidth;\r\n      child.width = childWidth;\r\n\r\n      if (child.height < this.height) child.height = this.height;\r\n      child.position = new Vector2(x, this.position.y);\r\n\r\n      availableWidth -= childWidth;\r\n      x += childWidth;\r\n    });\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange() { }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void { }\r\n\r\n  serialize(): SerializedHorizontalLayout {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      style: this.style,\r\n      childs: this.children.map(child => (child as any).serialize())\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedHorizontalLayout): HorizontalLayout {\r\n    let hozLayout = new HorizontalLayout(node, [], data.style, data.id, Color.deSerialize(data.hitColor));\r\n    hozLayout.children.push(...data.childs.map(serializedChild => {\r\n      switch (serializedChild.type) {\r\n        case UIType.Button: return Button.deSerialize(node, serializedChild);\r\n        case UIType.Container: return Container.deSerialize(node, serializedChild);\r\n        case UIType.Display: return Display.deSerialize(node, serializedChild);\r\n        case UIType.HorizontalLayout: return HorizontalLayout.deSerialize(node, serializedChild);\r\n        case UIType.Image: return Image.deSerialize(node, serializedChild);\r\n        case UIType.Input: return Input.deSerialize(node, serializedChild);\r\n        case UIType.Label: return Label.deSerialize(node, serializedChild);\r\n        case UIType.Select: return Select.deSerialize(node, serializedChild);\r\n        case UIType.Slider: return Slider.deSerialize(node, serializedChild);\r\n        case UIType.Source: return Source.deSerialize(node, serializedChild);\r\n        case UIType.Toggle: return Toggle.deSerialize(node, serializedChild);\r\n        default: return;\r\n      }\r\n    }));\r\n    return hozLayout;\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { ImageStyle, Serializable, SerializedImage } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Log } from \"../utils/logger\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\nexport class Image extends UINode implements Serializable {\r\n  private imageCanvas: OffscreenCanvas | HTMLCanvasElement;\r\n  private source: HTMLImageElement;\r\n  private ratio: number;\r\n\r\n  constructor(\r\n    node: Node,\r\n    public sourceString: string,\r\n    propName?: string,\r\n    style: ImageStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Image, false, { ...Constant.DefaultImageStyle(), ...style }, propName, null, null, id, hitColor);\r\n    this.source = document.createElement('img');\r\n\r\n    this.source.onload = () => {\r\n      if (typeof OffscreenCanvas !== 'undefined') this.imageCanvas = new OffscreenCanvas(this.source.width, this.source.height);\r\n      else {\r\n        this.imageCanvas = document.createElement('canvas');\r\n        this.imageCanvas.width = this.source.width;\r\n        this.imageCanvas.height = this.source.height;\r\n      }\r\n\r\n      let imageContext = this.imageCanvas.getContext('2d');\r\n      imageContext.drawImage(this.source, 0, 0);\r\n\r\n      this.ratio = this.source.width / this.source.height;\r\n      this.reflow();\r\n      this.node.ui.update();\r\n    };\r\n    this.source.onerror = (error) => Log.error(error);\r\n    this.source.src = sourceString;\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    if (this.imageCanvas) {\r\n      let x = this.position.x;\r\n      if (this.source.width < this.node.ui.contentWidth) {\r\n        if (this.style.align === 'center') x += this.node.ui.contentWidth / 2 - this.source.width / 2;\r\n        else if (this.style.align === 'right') x += + (this.node.ui.contentWidth - this.source.width);\r\n      }\r\n      this.context.drawImage(\r\n        this.imageCanvas, 0, 0, this.source.width, this.source.height,\r\n        x, this.position.y, this.width, this.height\r\n      );\r\n    }\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    if (this.imageCanvas) {\r\n      let x = this.position.x;\r\n      if (this.source.width < this.node.ui.contentWidth) {\r\n        if (this.style.align === 'center') x += this.node.ui.contentWidth / 2 - this.source.width / 2;\r\n        else if (this.style.align === 'right') x += + (this.node.ui.contentWidth - this.source.width);\r\n      }\r\n      let context = this.context;\r\n      context.fillStyle = 'lightgrey';\r\n      context.strokeStyle = '#000';\r\n      context.fillRect(x, this.position.y, this.width, this.height);\r\n      context.strokeRect(x, this.position.y, this.width, this.height)\r\n    }\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n\r\n    let x = this.position.x;\r\n    if (this.source.width < this.node.ui.contentWidth) {\r\n      if (this.style.align === 'center') x += this.node.ui.contentWidth / 2 - this.source.width / 2;\r\n      else if (this.style.align === 'right') x += + (this.node.ui.contentWidth - this.source.width);\r\n    }\r\n    this.offUIContext.fillRect(x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    if (!this.source.width || !this.source.height) return;\r\n\r\n    if (this.source.width > this.width) {\r\n      this.height = this.width / this.ratio;\r\n    } else {\r\n      this.width = this.source.width;\r\n      this.height = this.source.height;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange() { }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void { }\r\n\r\n  serialize(): SerializedImage {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      source: this.sourceString,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedImage): Image {\r\n    return new Image(node, data.source, data.propName, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","export * from './ui-node';\r\nexport * from './container';\r\nexport * from './label';\r\nexport * from './image';\r\nexport * from './slider';\r\nexport * from './horizontal-layout';\r\nexport * from './button';\r\nexport * from './toggle';\r\nexport * from './select';\r\nexport * from './source';\r\nexport * from './display';\r\nexport * from './input';","import { Vector2 } from \"../math/vector\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Node } from '../core/node';\r\nimport { Label } from './label';\r\nimport { Terminal } from \"../core/terminal\";\r\nimport { Constant, InputType, TerminalType, UIType } from \"../math/constants\";\r\nimport { InputStyle, Serializable, SerializedInput, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Input extends UINode implements Serializable {\r\n  label: Label;\r\n  private inputEl: HTMLInputElement;\r\n  private _value: string | number;\r\n\r\n  get value(): string | number {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._value;\r\n  }\r\n  set value(value: string | number) {\r\n    let val: string | number;\r\n    if (this.style.type === InputType.Number && typeof value === 'string') val = parseInt(value);\r\n    else val = value;\r\n\r\n    if (this.propName) this.node.props[this.propName] = val;\r\n    else {\r\n      this._value = val;\r\n      this.label.text = this._value.toString();\r\n      this.inputEl.value = this._value.toString();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    value: string | number,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: InputStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Input, false, { ...Constant.DefaultInputStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, style.type === InputType.Text ? 'string' : 'number', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, style.type === InputType.Text ? 'string' : 'number', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n\r\n    if (this.style.type === InputType.Number && typeof value === 'string') value = parseInt(value);\r\n    this._value = value;\r\n\r\n    this.label = new Label(this.node, this.value.toString(), null, false, false, {\r\n      fontSize: this.style.fontSize,\r\n      font: this.style.font,\r\n      align: this.style.align,\r\n      color: this.style.color\r\n    }, this.height);\r\n    this.label.on('click', () => {\r\n      if (document.activeElement !== this.inputEl) {\r\n        this.inputEl.style.visibility = 'visible';\r\n        this.inputEl.style.pointerEvents = 'all';\r\n\r\n        let realPosition = this.position.transform(this.node.flow.flowConnect.transform);\r\n        this.inputEl.style.top = (realPosition.y + this.node.flow.flowConnect.canvasDimensions.top + 1) + 'px';\r\n        this.inputEl.style.left = (realPosition.x + this.node.flow.flowConnect.canvasDimensions.left + 1) + 'px';\r\n        this.inputEl.style.width = (this.width - 1) * this.node.flow.flowConnect.scale + 'px';\r\n        this.inputEl.style.height = (this.height - 1) * this.node.flow.flowConnect.scale + 'px';\r\n        this.inputEl.style.fontFamily = this.style.font;\r\n        this.inputEl.style.fontSize = parseInt(this.style.fontSize.replace('px', '')) * this.node.flow.flowConnect.scale + 'px';\r\n        this.inputEl.style.color = this.style.color;\r\n        this.inputEl.style.backgroundColor = this.style.backgroundColor;\r\n        this.inputEl.style.textAlign = this.style.align;\r\n        this.inputEl.focus();\r\n      }\r\n    });\r\n    this.children.push(this.label);\r\n\r\n    this.inputEl = document.createElement('input');\r\n    this.inputEl.className = 'flow-connect-input';\r\n    this.inputEl.spellcheck = false;\r\n    this.inputEl.type = this.style.type;\r\n    this.inputEl.value = this.value.toString();\r\n    this.inputEl.onblur = () => {\r\n      this.inputEl.style.visibility = 'hidden';\r\n      this.inputEl.style.pointerEvents = 'none';\r\n    };\r\n    this.inputEl.onchange = (event: any) => {\r\n      this.value = event.target.value;\r\n      this.label.text = this.value.toString();\r\n    }\r\n    document.body.appendChild(this.inputEl);\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.value = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.value = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.value);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    this.context.strokeStyle = this.style.border;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.strokeStyle = this.style.border;\r\n    context.fillStyle = this.style.backgroundColor;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    this.label.position = this.position;\r\n    this.label.height = this.height;\r\n    this.label.width = this.width;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    let val: string | number;\r\n    if (this.style.type === InputType.Number && typeof newValue === 'string') val = parseInt(newValue);\r\n    else val = newValue;\r\n\r\n    this._value = val;\r\n    this.label.text = this._value.toString();\r\n    this.inputEl.value = this._value.toString();\r\n\r\n    this.output && (this.output as any)['setData'](this.value);\r\n  }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedInput {\r\n    return {\r\n      id: this.id,\r\n      hitColor: this.hitColor.serialize(),\r\n      type: this.type,\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      value: this.value,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedInput): Input {\r\n    return new Input(node, data.value, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Constant, TerminalType, UIType } from '../math/constants';\r\nimport { UINode } from \"./ui-node\";\r\nimport { LabelStyle, Serializable, SerializedLabel, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Label extends UINode implements Serializable {\r\n  private displayText: string;\r\n  private _text: string;\r\n  private textWidth: number;\r\n  private textHeight: number;\r\n\r\n  get text(): string {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._text;\r\n  }\r\n  set text(text: string) {\r\n    if (this.propName) {\r\n      this.node.props[this.propName] = text;\r\n    } else {\r\n      this._text = text;\r\n      this.displayText = this._text;\r\n      this.reflow();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    text: string = '',\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    style: LabelStyle = {},\r\n    height?: number,\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Label, false, { ...Constant.DefaultLabelStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'string', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'string', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this._text = this.propName ? this.node.props[this.propName] : text;\r\n    this.displayText = this._text;\r\n    this.reflow();\r\n\r\n    if (!height) this.height = this.textHeight;\r\n    else this.height = height;\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.text = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.text = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.text);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    let context = this.context;\r\n    context.fillStyle = this.style.color;\r\n    context.font = this.style.fontSize + ' ' + this.style.font;\r\n    context.textBaseline = 'top';\r\n    let y = this.position.y + this.height / 2 - this.textHeight / 2;\r\n    let x = this.position.x;\r\n    if (this.style.align === 'left') {\r\n      x += 5;\r\n    } else if (this.style.align === 'center') {\r\n      x += this.width / 2 - this.textWidth / 2;\r\n    } else if (this.style.align === 'right') {\r\n      x += this.width - this.textWidth - 5;\r\n    }\r\n    context.fillText(this.displayText, x, y);\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.strokeStyle = '#000';\r\n    context.fillStyle = this.style.color;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    let context = this.context;\r\n    context.font = this.style.fontSize + ' ' + this.style.font;\r\n    let metrics = context.measureText(this.displayText);\r\n    context.font = null;\r\n    this.textWidth = metrics.width;\r\n\r\n    this.textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n    if (typeof this.textHeight === 'undefined') {\r\n      let d = document.createElement(\"span\");\r\n      d.style.font = this.style.fontSize + ' ' + this.style.font;\r\n      d.textContent = \"M\";\r\n      document.body.appendChild(d);\r\n      this.textHeight = d.offsetHeight;\r\n      document.body.removeChild(d);\r\n    }\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._text = newValue;\r\n    this.displayText = this._text;\r\n    this.reflow();\r\n\r\n    this.output && (this.output as any)['setData'](this.text);\r\n  }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedLabel {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      height: this.height,\r\n      text: this.text,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedLabel): Label {\r\n    return new Label(node, data.text, data.propName, data.input, data.output, data.style, data.height, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Label } from \"./label\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { SelectStyle, Serializable, SerializedSelect, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Select extends UINode implements Serializable {\r\n  label: Label;\r\n  private _selected: string;\r\n\r\n  get selected(): string {\r\n    if (this.propName) {\r\n      let value = this.node.props[this.propName];\r\n      value = this.options.length === 0 ? 'None' : (this.options.includes(value) ? value : this.options[0]);\r\n      return value;\r\n    }\r\n    return this._selected;\r\n  }\r\n  set selected(selected: string) {\r\n    let value = this.options.length === 0 ? 'None' : (this.options.includes(selected) ? selected : this.options[0]);\r\n    if (this.propName) this.node.props[this.propName] = value;\r\n    else {\r\n      this._selected = value;\r\n      this.label.text = this.selected;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    public options: string[] = [],\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: SelectStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Select, false, { ...Constant.DefaultSelectStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'string', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'string', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n    this._selected = this.options.length === 0 ? 'None' : this.options[0];\r\n    this.label = new Label(this.node, this.selected, null, false, false, { align: 'center', ...this.style }, this.height);\r\n    this.children.push(this.label);\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.selected = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.selected = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.selected);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    let context = this.context;\r\n    context.fillStyle = this.style.arrowColor;\r\n    context.beginPath();\r\n    context.moveTo(this.position.x, this.position.y + this.height / 2);\r\n    context.lineTo(this.position.x + this.width * .15, this.position.y + this.height * .15);\r\n    context.lineTo(this.position.x + this.width * .15, this.position.y + this.height * .85);\r\n    context.lineTo(this.position.x, this.position.y + this.height / 2);\r\n    context.closePath();\r\n    context.fill();\r\n\r\n    context.fillStyle = this.style.arrowColor;\r\n    context.beginPath();\r\n    context.moveTo(this.position.x + this.width, this.position.y + this.height / 2);\r\n    context.lineTo(this.position.x + this.width * .85, this.position.y + this.height * .15);\r\n    context.lineTo(this.position.x + this.width * .85, this.position.y + this.height * .85);\r\n    context.lineTo(this.position.x + this.width, this.position.y + this.height / 2);\r\n    context.closePath();\r\n    context.fill();\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.fillStyle = this.style.arrowColor;\r\n    context.strokeStyle = '#000';\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    this.label.width = this.width * .7;\r\n    this.label.position.x = this.position.x + this.width * .15;\r\n    this.label.position.y = this.position.y + this.height / 2 - this.label.height / 2;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    let value = this.options.length === 0 ? 'None' : (this.options.includes(newValue) ? newValue : this.options[0]);\r\n    this._selected = value;\r\n    this.label.text = this.selected;\r\n\r\n    this.output && (this.output as any)['setData'](this.selected);\r\n  }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    if (this.options.length === 0) return;\r\n    let direction;\r\n    if (realPosition.x < this.position.x + this.width * .15) {\r\n      direction = -1;\r\n    } else if (realPosition.x > this.position.x + this.width * .85) {\r\n      direction = 1;\r\n    } else return;\r\n    this.selected = this.options[(((this.options.indexOf(this.selected) + direction) % this.options.length) + this.options.length) % this.options.length];\r\n    this.label.text = this.selected;\r\n\r\n    this.call('change', this, this.selected);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedSelect {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      options: this.options,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedSelect): Select {\r\n    return new Select(node, data.options, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { clamp, denormalize, normalize } from \"../utils/utils\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { Serializable, SerializedSlider, SerializedTerminal, SliderStyle } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Slider extends UINode implements Serializable {\r\n  private thumbFill: number;\r\n  private _value: number;\r\n\r\n  get value(): number {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._value;\r\n  }\r\n  set value(value: number) {\r\n    value = clamp(value, this.min, this.max);\r\n    if (this.propName) this.node.props[this.propName] = value;\r\n    else {\r\n      this._value = value;\r\n      this.call('change', this, this.value);\r\n      this.reflow();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    public min: number, public max: number,\r\n    value: number,\r\n    public precision: number = 0,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: SliderStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Slider, true, { ...Constant.DefaultSliderStyle(height), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'number', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'number', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n    this.value = parseFloat(value.toFixed(this.precision));\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.value = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.value = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.value);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    let context = this.context;\r\n    context.lineWidth = this.style.railHeight;\r\n    context.strokeStyle = this.style.color;\r\n    context.lineCap = 'butt';\r\n\r\n    let start = Math.max(this.position.x, this.position.x + this.thumbFill - 3);\r\n    if (start !== this.position.x) {\r\n      context.beginPath();\r\n      context.moveTo(this.position.x, this.position.y + this.height / 2);\r\n      context.lineTo(start, this.position.y + this.height / 2);\r\n      context.stroke();\r\n    }\r\n    start = Math.min(this.position.x + 2 * this.style.thumbRadius + this.thumbFill + 3, this.position.x + this.width);\r\n    if (start !== (this.position.x + this.width)) {\r\n      context.beginPath();\r\n      context.moveTo(start, this.position.y + this.height / 2);\r\n      context.lineTo(this.position.x + this.width, this.position.y + this.height / 2);\r\n      context.stroke();\r\n    }\r\n\r\n    context.fillStyle = this.style.thumbColor;\r\n    context.beginPath();\r\n    context.arc(this.position.x + this.style.thumbRadius + this.thumbFill, this.position.y + this.height / 2, this.style.thumbRadius, 0, 2 * Math.PI);\r\n    context.fill();\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.strokeStyle = '#000';\r\n    context.fillStyle = this.style.color;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    this.thumbFill = denormalize(normalize(this.value, this.min, this.max), 0, this.width - 2 * this.style.thumbRadius);\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._value = newValue;\r\n    this.reflow();\r\n    this.call('change', this, this.value);\r\n\r\n    this.output && (this.output as any)['setData'](this.value);\r\n  }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n\r\n    let y = this.position.y + this.height / 2 - this.style.railHeight / 2;\r\n    this.thumbFill = realPosition.clamp(this.position.x + this.style.thumbRadius, this.position.x + this.width - this.style.thumbRadius, y, y).subtract(this.position.x + this.style.thumbRadius, 0).x;\r\n    this.value = parseFloat(denormalize(normalize(this.thumbFill, 0, this.width - 2 * this.style.thumbRadius), this.min, this.max).toFixed(this.precision));\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedSlider {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      min: this.min,\r\n      max: this.max,\r\n      value: this.value,\r\n      precision: this.precision,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedSlider) {\r\n    return new Slider(node, data.min, data.max, data.value, data.precision, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { fileIcon } from \"../resource/icons\";\r\nimport { Image } from \"./image\";\r\nimport { Label } from \"./label\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { Serializable, SerializedSource, SerializedTerminal, SourceStyle } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Source extends UINode implements Serializable {\r\n  label: Label;\r\n\r\n  private htmlInput: HTMLInputElement;\r\n  private fileIcon: Image;\r\n  private _file: File;\r\n\r\n  get file(): File {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._file;\r\n  }\r\n  set file(file: File) {\r\n    if (this.propName) this.node.props[this.propName] = file;\r\n    else {\r\n      this._file = file;\r\n      this.label.text = this._file.name.substring(0, this._file.name.toString().lastIndexOf(\".\"));\r\n      this.call('change', this, this._file);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    public accept?: string,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: SourceStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Source, false, { ...Constant.DefaultSourceStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'file', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'file', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n\r\n    this.htmlInput = document.createElement('input');\r\n    this.htmlInput.type = 'file';\r\n    (accept) && (this.htmlInput.accept = accept);\r\n    this.htmlInput.onchange = () => {\r\n      if (this.htmlInput.files.length > 0) {\r\n        this.file = this.htmlInput.files[0];\r\n      }\r\n    };\r\n\r\n    this.label = new Label(this.node, 'Select', null, false, false, { align: 'center', ...this.style }, this.height);\r\n    this.label.on('click', () => this.htmlInput.click());\r\n\r\n    this.fileIcon = new Image(this.node, fileIcon);\r\n    this.children.push(this.label, this.fileIcon);\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.file = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.file = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.file);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    this.context.strokeStyle = this.style.borderColor;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.strokeStyle = this.style.borderColor;\r\n    context.fillStyle = this.style.color;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    this.label.width = this.width;\r\n    this.label.height = this.height;\r\n    this.label.position = this.position;\r\n\r\n    this.fileIcon.width = this.width * .1;\r\n    this.fileIcon.position.x = this.position.x + 5;\r\n    this.fileIcon.position.y = this.position.y + this.height / 2 - this.fileIcon.height / 2;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._file = newValue;\r\n    this.label.text = this._file.name.substring(0, this._file.name.toString().lastIndexOf(\".\"));\r\n    this.call('change', this, this._file);\r\n\r\n    this.output && (this.output as any)['setData'](this._file);\r\n  }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedSource {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      accept: this.accept,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedSource) {\r\n    return new Source(node, data.accept, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { Serializable, SerializedTerminal, SerializedToggle, ToggleStyle } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Toggle extends UINode implements Serializable {\r\n  private _checked: boolean = false;\r\n\r\n  get checked(): boolean {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._checked;\r\n  }\r\n  set checked(checked: boolean) {\r\n    if (this.propName) this.node.props[this.propName] = checked;\r\n    else {\r\n      this._checked = checked;\r\n      this.call('change', this, this.checked);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: ToggleStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Toggle, false, { ...Constant.DefaultToggleStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'boolean', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'boolean', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this._checked = this.propName ? this.node.props[this.propName] : false;\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.checked = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (typeof data !== 'undefined') this.checked = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.checked);\r\n  }\r\n\r\n  /** @hidden */\r\n  paint(): void {\r\n    let context = this.context;\r\n    context.strokeStyle = this.style.backgroundColor;\r\n    context.lineWidth = this.height * .75;\r\n    context.lineCap = 'round';\r\n    context.beginPath();\r\n    context.moveTo(this.position.x + this.context.lineWidth / 2, this.position.y + this.height / 2);\r\n    context.lineTo(this.position.x + this.width - this.context.lineWidth / 2, this.position.y + this.height / 2);\r\n    context.stroke();\r\n\r\n    context.fillStyle = this.style.color;\r\n    context.beginPath();\r\n    context.arc(this.checked ? this.position.x + this.width - this.height / 2 : this.position.x + this.height / 2, this.position.y + this.height / 2, this.height / 2, 0, 2 * Math.PI);\r\n    context.fill();\r\n  }\r\n  /** @hidden */\r\n  paintLOD1() {\r\n    let context = this.context;\r\n    context.strokeStyle = this.style.color;\r\n    context.fillStyle = this.style.backgroundColor;\r\n    context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  /** @hidden */\r\n  reflow(): void {\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._checked = newValue;\r\n    this.call('change', this, this.checked);\r\n\r\n    this.output && (this.output as any)['setData'](this.checked);\r\n  }\r\n\r\n  /** @hidden */\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    this.checked = !this.checked;\r\n  }\r\n  /** @hidden */\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  /** @hidden */\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedToggle {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      checked: this.checked,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedToggle): Toggle {\r\n    return new Toggle(node, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}","import { Color } from \"../core/color\";\r\nimport { Hooks } from \"../core/hooks\";\r\nimport { Node } from \"../core/node\";\r\nimport { Terminal } from \"../core/terminal\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { LOD, NodeState, UIType, ViewPort } from '../math/constants';\r\nimport { getNewGUID, intersects } from \"../utils/utils\";\r\nimport { Events } from \"../core/interfaces\";\r\n\r\nexport abstract class UINode extends Hooks implements Events {\r\n  /** @hidden */\r\n  renderState: ViewPort;\r\n  private _disabled: boolean;\r\n  /** @hidden */\r\n  hitColor: Color;\r\n\r\n  draggable: boolean;\r\n  width: number = 0;\r\n  height: number = 0;\r\n  children: UINode[];\r\n  get context(): CanvasRenderingContext2D { return this.node.context };\r\n  get offUIContext(): OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D { return this.node.offUIContext };\r\n  position: Vector2;\r\n  get disabled(): boolean { return this._disabled };\r\n  set disabled(disabled: boolean) {\r\n    this._disabled = disabled;\r\n    this.children.forEach(child => child.disabled = disabled);\r\n  }\r\n\r\n  constructor(\r\n    public node: Node,\r\n    position: Vector2,\r\n    public type: UIType,\r\n    draggable: boolean,\r\n    public style: any,\r\n    public propName?: string,\r\n    public input: Terminal = null, public output: Terminal = null,\r\n    public id: string = getNewGUID(),\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super();\r\n    this.hitColor = hitColor;\r\n    this.id = getNewGUID();\r\n    this.setHitColor(hitColor);\r\n    this.position = position;\r\n    this.children = [];\r\n    this.draggable = draggable;\r\n    this.disabled = false;\r\n    if (this.propName) this.node.addPropObserver(this.propName, this.onPropChange.bind(this));\r\n\r\n    if (input) {\r\n      this.node.inputsUI.push(this.input);\r\n      this.input.on('connect', () => this.disabled = true);\r\n      this.input.on('disconnect', () => this.disabled = false);\r\n    }\r\n    if (output) this.node.outputsUI.push(this.output);\r\n  }\r\n\r\n  append(childs: UINode | UINode[]) {\r\n    if (Array.isArray(childs)) {\r\n      this.children.push(...childs);\r\n    } else {\r\n      this.children.push(childs);\r\n    }\r\n    this.update();\r\n  }\r\n  /** @hidden */\r\n  update(): void {\r\n    this.reflow();\r\n    this.children.forEach(child => child.update());\r\n  }\r\n  /** @hidden */\r\n  updateRenderState() {\r\n    if (this.node.renderState.nodeState === NodeState.MINIMIZED) return;\r\n\r\n    let realPos = this.position.transform(this.node.flow.flowConnect.transform);\r\n    this.renderState = intersects(\r\n      0, 0,\r\n      this.node.flow.flowConnect.canvasDimensions.width, this.node.flow.flowConnect.canvasDimensions.height,\r\n      realPos.x, realPos.y,\r\n      realPos.x + this.width * this.node.flow.flowConnect.scale,\r\n      realPos.y + this.height * this.node.flow.flowConnect.scale\r\n    );\r\n\r\n    this.children.forEach(child => child.updateRenderState());\r\n  }\r\n  private setHitColor(hitColor: Color) {\r\n    //if (typeof this.hitColor !== 'undefined') return;\r\n\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.node.hitColorToUI[hitColor.rgbaString] || this.node.hitColorToTerminal[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.node.hitColorToUI[this.hitColor.rgbaString] = this;\r\n  }\r\n  render() {\r\n    if (this.renderState === ViewPort.OUTSIDE) return;\r\n\r\n    let context = this.context;\r\n    if (this.node.renderState.lod === LOD.LOD1) {\r\n      context.save();\r\n      this.paintLOD1();\r\n      context.restore();\r\n    } else if (this.node.renderState.lod === LOD.LOD2) {\r\n      context.save();\r\n      this.paint();\r\n      context.restore();\r\n\r\n      this.offUIContext.save();\r\n      this.offPaint();\r\n      this.offUIContext.restore();\r\n    } else {\r\n      if (this.type === UIType.Container) {\r\n        context.save();\r\n        this.paintLOD1();\r\n        context.restore();\r\n      }\r\n    }\r\n\r\n    if (this.node.renderState.lod > 0) {\r\n      if (this.input) this.input.render();\r\n      if (this.output) this.output.render();\r\n    }\r\n\r\n    this.children.forEach(child => child.render());\r\n  }\r\n\r\n  /** @hidden */\r\n  abstract reflow(): void;\r\n  /** @hidden */\r\n  abstract paint(): void;\r\n  /** @hidden */\r\n  abstract paintLOD1(): void;\r\n  /** @hidden */\r\n  abstract offPaint(): void;\r\n\r\n  /** @hidden */\r\n  abstract onOver(screenPosition: Vector2, realPosition: Vector2): void;\r\n  /** @hidden */\r\n  abstract onDown(screenPosition: Vector2, realPosition: Vector2): void;\r\n  /** @hidden */\r\n  abstract onUp(screenPosition: Vector2, realPosition: Vector2): void;\r\n  /** @hidden */\r\n  abstract onClick(screenPosition: Vector2, realPosition: Vector2): void;\r\n  /** @hidden */\r\n  abstract onDrag(screenPosition: Vector2, realPosition: Vector2): void;\r\n  /** @hidden */\r\n  abstract onEnter(screenPosition: Vector2, realPosition: Vector2): void;\r\n  /** @hidden */\r\n  abstract onExit(screenPosition: Vector2, realPosition: Vector2): void;\r\n  /** @hidden */\r\n  abstract onContextMenu(): void;\r\n\r\n  /** @hidden */\r\n  abstract onPropChange(oldValue: any, newValue: any): void;\r\n}\r\n","/** @hidden */\r\nexport class AVLTreeNode<T> {\r\n  height: number;\r\n  left: AVLTreeNode<T>;\r\n  right: AVLTreeNode<T>;\r\n\r\n  constructor(public data: T[]) {\r\n    this.height = 1;\r\n    this.left = null;\r\n    this.right = null;\r\n  }\r\n}\r\n\r\n/** @hidden */\r\nexport class AVLTree<T> {\r\n  root: AVLTreeNode<T>;\r\n  dataRefToTreeNode: { [key: string]: AVLTreeNode<T> };\r\n  size: number;\r\n\r\n  constructor(public comparator: (a: T, b: T) => Number, public dataToTreeNodeMapper: (data: T) => string) {\r\n    this.root = null;\r\n    this.dataRefToTreeNode = {};\r\n    this.size = 0;\r\n  }\r\n\r\n  height(node: AVLTreeNode<T>) {\r\n    if (!node) return 0;\r\n    return node.height;\r\n  }\r\n  rightRotate(node: AVLTreeNode<T>) {\r\n    let newRoot = node.left;\r\n    node.left = newRoot.right;\r\n    newRoot.right = node;\r\n\r\n    node.height = Math.max(node.left ? node.left.height : 0, node.right ? node.right.height : 0) + 1;\r\n    newRoot.height = Math.max(newRoot.left ? newRoot.left.height : 0, newRoot.right ? newRoot.right.height : 0) + 1;\r\n\r\n    return newRoot;\r\n  }\r\n  leftRotate(node: AVLTreeNode<T>) {\r\n    let newRoot = node.right;\r\n    node.right = newRoot.left;\r\n    newRoot.left = node;\r\n\r\n    node.height = Math.max(node.left ? node.left.height : 0, node.right ? node.right.height : 0) + 1;\r\n    newRoot.height = Math.max(newRoot.left ? newRoot.left.height : 0, newRoot.right ? newRoot.right.height : 0) + 1;\r\n\r\n    return newRoot;\r\n  }\r\n  getBalance(node: AVLTreeNode<T>) {\r\n    if (!node) return 0;\r\n    return (node.left ? node.left.height : 0) - (node.right ? node.right.height : 0);\r\n  }\r\n\r\n  add(data: T): AVLTreeNode<T> {\r\n    let res: { node: AVLTreeNode<T> } = { node: null };\r\n    this.root = this._insert(this.root, data, res);\r\n    this.dataRefToTreeNode[this.dataToTreeNodeMapper(data)] = res.node;\r\n    this.size += 1;\r\n    return res.node;\r\n  }\r\n  private _insert(node: AVLTreeNode<T>, data: T, res: { node: AVLTreeNode<T> }): AVLTreeNode<T> {\r\n    if (!node) {\r\n      let newNode = new AVLTreeNode([data]);\r\n      res.node = newNode;\r\n      return newNode;\r\n    }\r\n\r\n    // Duplicate Keys\r\n    if (this.comparator(data, node.data[0]) === 0) {\r\n      node.data.push(data);\r\n      res.node = node;\r\n      return node;\r\n    }\r\n\r\n    if (this.comparator(data, node.data[0]) < 0) node.left = this._insert(node.left, data, res);\r\n    else node.right = this._insert(node.right, data, res);\r\n\r\n    node.height = 1 + Math.max(node.left ? node.left.height : 0, node.right ? node.right.height : 0);\r\n    let balance = this.getBalance(node);\r\n\r\n    if (balance > 1 && this.comparator(data, node.left.data[0]) < 0) return this.rightRotate(node);\r\n    if (balance > 1 && this.comparator(data, node.left.data[0]) > 0) {\r\n      node.left = this.leftRotate(node.left);\r\n      return this.rightRotate(node);\r\n    }\r\n    if (balance < -1 && this.comparator(data, node.right.data[0]) > 0) return this.leftRotate(node);\r\n    if (balance < -1 && this.comparator(data, node.right.data[0]) < 0) {\r\n      node.right = this.rightRotate(node.right);\r\n      return this.leftRotate(node);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  remove(data: T): boolean {\r\n    let res: { deleted: boolean } = { deleted: false };\r\n    this.root = this._delete(this.root, data, res);\r\n    delete this.dataRefToTreeNode[this.dataToTreeNodeMapper(data)];\r\n    this.size -= 1;\r\n    return res.deleted;\r\n  }\r\n  private _delete(node: AVLTreeNode<T>, data: T, res: { deleted: boolean }): AVLTreeNode<T> {\r\n    if (!node) return node;\r\n\r\n    if (this.comparator(data, node.data[0]) < 0) node.left = this._delete(node.left, data, res);\r\n    else if (this.comparator(data, node.data[0]) > 0) node.right = this._delete(node.right, data, res);\r\n    else {\r\n      // Duplicate Keys\r\n      if (node.data.length > 1) {\r\n        let index = node.data.findIndex(currData => this.dataToTreeNodeMapper(currData) === this.dataToTreeNodeMapper(data));\r\n        if (index > -1) {\r\n          node.data.splice(index, 1);\r\n          res.deleted = true;\r\n        } else {\r\n          res.deleted = false;\r\n        }\r\n        return node;\r\n      } else {\r\n        if (!node.left || !node.right) {\r\n          let temp = null;\r\n          if (!node.left) temp = node.right;\r\n          else temp = node.left;\r\n\r\n          if (!temp) {\r\n            temp = node;\r\n            node = null;\r\n          } else node = temp;\r\n          res.deleted = true;\r\n        } else {\r\n          let temp = this.minValue(node.right);\r\n          node.data = temp.data;\r\n          node.right = this._delete(node.right, temp.data[0], res);\r\n          res.deleted = true;\r\n        }\r\n      }\r\n    }\r\n    if (!node) return node;\r\n\r\n    node.height = Math.max(node.left ? node.left.height : 0, node.right ? node.right.height : 0) + 1;\r\n    let balance = this.getBalance(node);\r\n\r\n    if (balance > 1 && this.getBalance(node.left) >= 0) return this.rightRotate(node);\r\n    if (balance > 1 && this.getBalance(node.left) < 0) {\r\n      node.left = this.leftRotate(node.left);\r\n      return this.rightRotate(node);\r\n    }\r\n    if (balance < -1 && this.getBalance(node.right) <= 0) return this.leftRotate(node);\r\n    if (balance < -1 && this.getBalance(node.right) > 0) {\r\n      node.right = this.rightRotate(node.right);\r\n      return this.leftRotate(node);\r\n    }\r\n    return node;\r\n  }\r\n\r\n  minValue(node: AVLTreeNode<T>) {\r\n    let curr = node;\r\n    while (curr.left) curr = curr.left;\r\n    return curr;\r\n  }\r\n  forEach(action: (item: T) => void) {\r\n    this._inorder(this.root, action);\r\n  }\r\n\r\n  private _inorder(node: AVLTreeNode<T>, action: (item: T) => void) {\r\n    if (node !== null) {\r\n      this._inorder(node.left, action);\r\n      node.data.forEach(data => action(data));\r\n      this._inorder(node.right, action);\r\n    }\r\n  }\r\n  private _reverseInorder(node: AVLTreeNode<T>, action: (item: T) => void) {\r\n    if (node !== null) {\r\n      this._inorder(node.right, action);\r\n      node.data.forEach(data => action(data));\r\n      this._inorder(node.left, action);\r\n    }\r\n  }\r\n}\r\n","export * from './avl-tree';\r\nexport * from './utils';\r\nexport * from './logger';","export enum LogLevel {\r\n  TRACE = 0, DEBUG = 1, INFO = 2, LOG = 2, WARN = 3, ERROR = 4, DISABLED = 5\r\n}\r\n\r\nexport class Log {\r\n  static LOG_LEVEL: LogLevel = LogLevel.WARN;\r\n\r\n  static trace(...args: any): void {\r\n    if (this.LOG_LEVEL > LogLevel.TRACE) return;\r\n    console.trace.apply(this, args);\r\n  }\r\n  static debug(...args: any): void {\r\n    if (this.LOG_LEVEL > LogLevel.DEBUG) return;\r\n    console.debug.apply(this, args);\r\n  }\r\n  static info(...args: any): void {\r\n    if (this.LOG_LEVEL > LogLevel.INFO) return;\r\n    console.info.apply(this, args);\r\n  }\r\n  static log(...args: any): void {\r\n    if (this.LOG_LEVEL > LogLevel.LOG) return;\r\n    console.log.apply(this, args);\r\n  }\r\n  static warn(...args: any): void {\r\n    if (this.LOG_LEVEL > LogLevel.WARN) return;\r\n    console.warn.apply(this, args);\r\n  }\r\n  static error(...args: any): void {\r\n    if (this.LOG_LEVEL > LogLevel.ERROR) return;\r\n    console.error.apply(this, args);\r\n  }\r\n}","import { Graph } from \"../core/graph\";\r\nimport { Rules } from \"../core/interfaces\";\r\nimport { Terminal } from \"../core/terminal\";\r\nimport { ViewPort } from \"../math/constants\";\r\n\r\nexport const getNewGUID = () => {\r\n  var S4 = () => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  return (S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4());\r\n};\r\nexport const normalize = (value: number, min: number, max: number) => {\r\n  return (value - min) / (max - min);\r\n};\r\nexport const denormalize = (normalized: number, min: number, max: number) => {\r\n  return (max - min) * normalized + min;\r\n};\r\nexport const getRandom = (min: number, max: number) => {\r\n  return Math.random() * (max - min) + min;\r\n};\r\nexport const intersects = (start1X: number, start1Y: number, end1X: number, end1Y: number, start2X: number, start2Y: number, end2X: number, end2Y: number): ViewPort => {\r\n  let intersects = !(start2X > end1X || end2X < start1X || start2Y > end1Y || end2Y < start1Y);\r\n  if (intersects) {\r\n    if (!(start2X < start1X || start2Y < start1Y || end2X > end1X || end2Y > end1Y)) return ViewPort.INSIDE;\r\n    else return ViewPort.INTERSECT;\r\n  } else return ViewPort.OUTSIDE;\r\n};\r\nexport const clamp = (value: number, min: number, max: number): number => {\r\n  return value <= min ? min : (value > max ? max : value);\r\n};\r\nexport const canConnect = (source: Terminal, destination: Terminal, rules: Rules, executionGraph: Graph) => {\r\n  if (!destination) return false;\r\n  if (source === destination) return false;\r\n  if (source.node === destination.node) return false;\r\n  if (source.type === destination.type) return false;\r\n  if (!rules[source.dataType].includes(destination.dataType)) return false;\r\n  if (!executionGraph.canConnect(source.node, destination.node)) return false;\r\n  return true;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(184);\n"],"sourceRoot":""}