{"version":3,"sources":["webpack://flow-connect/webpack/universalModuleDefinition","webpack://flow-connect/./src/core/color.ts","webpack://flow-connect/./src/core/connector.ts","webpack://flow-connect/./src/core/flow.ts","webpack://flow-connect/./src/core/graph.ts","webpack://flow-connect/./src/core/group.ts","webpack://flow-connect/./src/core/hooks.ts","webpack://flow-connect/./src/core/index.ts","webpack://flow-connect/./src/core/node.ts","webpack://flow-connect/./src/core/subflow-node.ts","webpack://flow-connect/./src/core/terminal.ts","webpack://flow-connect/./src/core/tunnel-node.ts","webpack://flow-connect/./src/flow-connect.ts","webpack://flow-connect/./src/math/constants.ts","webpack://flow-connect/./src/math/index.ts","webpack://flow-connect/./src/math/vector.ts","webpack://flow-connect/./src/resource/icons.ts","webpack://flow-connect/./src/ui/button.ts","webpack://flow-connect/./src/ui/container.ts","webpack://flow-connect/./src/ui/display.ts","webpack://flow-connect/./src/ui/horizontal-layout.ts","webpack://flow-connect/./src/ui/image.ts","webpack://flow-connect/./src/ui/index.ts","webpack://flow-connect/./src/ui/input.ts","webpack://flow-connect/./src/ui/label.ts","webpack://flow-connect/./src/ui/select.ts","webpack://flow-connect/./src/ui/slider.ts","webpack://flow-connect/./src/ui/source.ts","webpack://flow-connect/./src/ui/toggle.ts","webpack://flow-connect/./src/ui/ui-node.ts","webpack://flow-connect/./src/utils/binary-search-tree.ts","webpack://flow-connect/./src/utils/index.ts","webpack://flow-connect/./src/utils/logger.ts","webpack://flow-connect/./src/utils/utils.ts","webpack://flow-connect/webpack/bootstrap","webpack://flow-connect/webpack/startup"],"names":["root","factory","exports","module","define","amd","i","a","self","Random","Color","Uint8ClampedArray","Math","floor","getRandom","rgbaToHex","rgba","_componentToHex","hexToRGBA","hex","parseInt","slice","c","toString","length","rgbaToString","rgbaToCSSString","normalize","toFixed","serialize","this","rgbaValue","deSerialize","data","hexValue","rgbaString","rgbaCSSString","_data","end","call","flow","state","FlowState","Running","executionGraph","GraphState","FullRun","setDirtyNode","endNode","completeConnection","destination","start","node","startNode","connectors","includes","push","floatingTip","currHitTerminal","onExit","connect","removeConnection","splice","indexOf","canConnect","source","type","rules","dataType","render","flowConnect","context","save","_render","restore","offContext","_offRender","ax","dx","ay","renderState","nodeState","NodeState","MAXIMIZED","position","x","y","width","style","terminalStripMargin","radius","titleHeight","dy","offset","Vector2","Distance","bx","by","cx","cy","midx","midy","beginPath","moveTo","quadraticCurveTo","strokeStyle","lineWidth","stroke","color","id","startId","endId","startNodeId","endNodeId","Connector","isDeserialization","getNewGUID","Constant","DefaultConnectorStyle","Hooks","registerListeners","on","listeners","deregisterListeners","off","existsInFlow","Object","values","nodes","subFlow","addInput","name","flowInput","TunnelNode","inputs","sortedNodes","add","addOutput","flowOutput","outputs","addSubFlow","subFlowNode","SubFlowNode","map","inputNode","outputNode","createNode","terminalStyle","props","inTerminals","outTerminals","Node","removeNode","nodeOrID","removeConnector","floatingConnector","removeAllFocus","forEach","focused","groups","group","connector","stop","Stopped","terminalTypeColors","input","output","Flow","serializedNode","serializedGroup","Group","serializedInput","serializedOutput","serializedConnector","startTerminal","concat","outputsUI","find","terminal","endTerminal","inputsUI","Graph","hitColorToNode","hitColorToGroup","BinarySearchTree","b","zIndex","nodeId","flowNode","order","childs","child","GraphNode","graphNode","nodeToGraphNode","sourceNode","destinationNode","startGraphNode","endGraphNode","updateOrder","currNode","shift","groupedNodes","run","Idle","partialRun","Promise","resolve","reject","processDirtyNodes","error","console","log","keys","dirtyNodes","then","clearDirtyNode","sort","graph","serializedGraphNodes","deSerializedGraphNodes","serializedGroupedNodes","index","serializedGraphNode","key","childId","_name","trim","computeTextMetrics","_position","updateRenderState","recomputeNodePositions","setHitColor","hitColor","font","fontSize","metrics","measureText","textWidth","textHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","d","document","createElement","textContent","body","appendChild","offsetHeight","removeChild","realPos","transform","intersects","canvasDimensions","height","scale","setContainedNodes","groupRealPos","filter","viewport","ViewPort","INSIDE","nodeRealPos","ui","nodeDeltas","subtract","OUTSIDE","offGroupContext","borderColor","fillStyle","strokeRect","fillRect","titleColor","textBaseline","fillText","onClick","screenPosition","realPosition","thisRealPosition","showGenericInput","max","replace","fontFamily","value","nodeDelata","serializedVector","DefaultGroupStyle","colors","DefaultGroupColors","eventKey","callback","registeredEvents","lastId","args","hitColorToNodeButton","deltaX","nodeButtonSize","offUIContext","_offUIRender","align","NodeButton","reflow","update","_zIndex","remove","_width","setupProps","Proxy","set","target","prop","propObservers","oldValue","addPropObserver","propName","removePropObserver","addTerminal","Terminal","TerminalType","IN","addNodeButton","newNodeButton","noOfButtons","nodeButtons","nodeButton","Align","Left","nodeButtonSpacing","dispose","terminalRowHeight","padding","recalculateInputTerminals","recalculateOutputTerminals","toggleNodeState","MINIMIZED","lod","LOD","LOD2","LOD1","LOD0","INTERSECT","getHitTerminal","hitTerminal","hitColorToTerminal","onEnter","getHitUINode","uiNode","hitColorToUI","Container","getHitNodeButton","getInput","inputTerminal","currTerm","setOutput","outputTerminal","inputTerminalsWidth","outputTerminalsWidth","titleFontSize","titleFont","strokeRoundRect","inputTerminalsStripWidth","outputTerminalsStripWidth","onDown","getImageData","currHitUINode","onOver","prevHitTerminal","hitUINode","prevHitUINode","onUp","clone","hitNodeButton","onDrag","draggable","onContextMenu","createLabel","text","Label","createImage","Image","createSlider","min","precision","Slider","createHozLayout","HorizontalLayout","createButton","Button","createToggle","Toggle","createSelect","options","Select","createSource","accept","Source","createDisplay","Display","createInput","Input","DefaultNodeStyle","OUT","maximizeButtonColor","tunnel","proxyTerminal","expandButtonColor","lineTo","closePath","Right","focus","arc","PI","focusColor","fill","shadowBlur","shadowColor","offUIRender","cursor","pop","onEvent","eventCallback","emit","DefaultTerminalStyle","Zero","_proxyTerminal","proxyTerminalId","nodeName","canvasElement","registerChangeListeners","throttle","addEventListener","window","requestAnimationFrame","calculateCanvasDimension","ResizeObserver","observe","prepareCanvas","mount","HTMLDivElement","clientWidth","clientHeight","getContext","setupHitCanvas","OffscreenCanvas","OffscreenCanvasRenderingContext2D","offCanvasElement","offUICanvasElement","offGroupCanvasElement","attachStyles","touchAction","inputStyle","innerHTML","getElementsByTagName","boundingRect","getBoundingClientRect","top","round","scrollY","left","scrollX","polyfill","CanvasRenderingContext2D","prototype","roundRect","fillRoundRect","createFlow","DefaultRules","registerEvents","dragDelta","prevPanPosition","prevPinchDistance","onkeydown","ev","keymap","onkeyup","onpointerdown","currFlow","addPointer","pointerId","getRelativePosition","pointers","currHitNode","getHitNode","Infinity","touchControls","groupStartPoint","currGroup","currHitGroup","getHitGroup","fallbackConnection","onpointerup","hitNode","removePointer","inverseTransform","handleGrouping","newGroup","handleConnection","onpointerout","prevHitNode","onpointermove","nodeIndex","delta","updatePointer","currPinchDistance","handleZoom","Midpoint","pinchScaleDelta","abs","hitGroup","findIndex","multiplyInPlace","updateTransform","pointerType","onclick","oncontextmenu","preventDefault","onwheel","deltaY","wheelScaleDelta","setGenericInput","genericInput","className","visibility","pointerEvents","onblur","onchange","styles","attributes","activeElement","pointer","zoomIn","origin","scaleDelta","maxScale","minScale","intersection","oldConnector","clientX","clientY","scaleOrigin","translate","realSpaceOrigin","translateSelf","scaleSelf","inverse","setTransform","clear","identity","clearRect","rootFlow","cancelAnimationFrame","frameId","bind","fromJson","json","JSON","parse","toJson","serializedFlow","stringify","DOMMatrix","FlowConnect","InputType","TAU","RED","GREEN","BLUE","random","spacing","rowHeight","DefaultButtonStyle","backgroundColor","DefaultContainerStyle","shadowOffset","borderWidth","DefaultDisplayStyle","DefaultHorizontalLayoutStyle","DefaultImageStyle","DefaultInputStyle","border","Text","DefaultLabelStyle","DefaultSelectStyle","arrowColor","DefaultSliderStyle","thumbColor","railHeight","thumbRadius","DefaultSourceStyle","DefaultToggleStyle","UIType","arg1","arg2","addInPlace","multiply","subtractInPlace","rotate","pivot","degrees","cosT","cos","sinT","sin","rotateInPlace","tmpX","tmpY","transformPoint","transformInPlace","transformedPoint","clamp","minX","maxX","minY","maxY","vector1","vector2","vector1OrX1","vector2OrY1","x2","y2","sqrt","pow","One","Bounds","vectors","minVec","Number","MAX_VALUE","maxVec","MIN_VALUE","vector","Average","sumX","sumY","Lerp","amount","xOrDOMPoint","DOMPoint","fileIcon","UINode","paint","paintLOD1","offPaint","label","onPropChange","disabled","_node","children","shadowOffsetX","shadowOffsetY","terminalsDisplayHeight","uiContainer","serializedChild","contentWidth","customRender","resetTransform","availableWidth","maxHeight","childWidth","grow","hozLayout","imageCanvas","drawImage","ratio","sourceString","onload","onerror","Logger","src","_value","val","inputEl","newValue","textAlign","spellcheck","event","_text","displayText","_selected","selected","direction","lineCap","thumbFill","denormalize","parseFloat","_file","file","substring","lastIndexOf","htmlInput","files","click","_checked","checked","_disabled","append","Array","isArray","newNode","BinaryTreeNode","dataRefToTreeNode","dataToTreeNodeMapper","_insert","comparator","parent","right","dataRef","treeNode","_deleteMinNode","findMinNode","action","_inorder","_reverseInorder","LogLevel","LOG_LEVEL","TRACE","apply","info","INFO","warn","WARN","ERROR","DISABLED","S4","normalized","start1X","start1Y","end1X","end1Y","start2X","start2Y","end2X","end2Y","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IACQK,EADJC,EAAIN,IACR,IAAQK,KAAKC,GAAuB,iBAAZL,QAAuBA,QAAUF,GAAMM,GAAKC,EAAED,IAPxE,CASGE,KAAM,WACT,O,uGCVA,aAGA,GAaS,EAAAC,OAAP,WACE,OAAO,IAAIC,EAAM,IAAIC,kBACnB,CAACC,KAAKC,MAAM,EAAAC,UAAU,EAAG,MAAOF,KAAKC,MAAM,EAAAC,UAAU,EAAG,MAAOF,KAAKC,MAAM,EAAAC,UAAU,EAAG,MAAO,QAG3F,EAAAC,UAAP,SAAiBC,GACf,MAAO,IAAMN,EAAMO,gBAAgBD,EAAK,IAAMN,EAAMO,gBAAgBD,EAAK,IAAMN,EAAMO,gBAAgBD,EAAK,IAAMN,EAAMO,gBAAgBD,EAAK,KAEtI,EAAAE,UAAP,SAAiBC,GACf,OAAO,IAAIR,kBAAkB,CAACS,SAASD,EAAIE,MAAM,EAAG,GAAI,IAAKD,SAASD,EAAIE,MAAM,EAAG,GAAI,IAAKD,SAASD,EAAIE,MAAM,EAAG,GAAI,IAAKD,SAASD,EAAIE,MAAM,EAAG,GAAI,OAEhJ,EAAAJ,gBAAP,SAAuBK,GACjBH,EAAMG,EAAEC,SAAS,IACrB,OAAqB,GAAdJ,EAAIK,OAAc,IAAML,EAAMA,GAEhC,EAAAM,aAAP,SAAoBT,GAClB,OAAUA,EAAK,GAAE,IAAIA,EAAK,GAAE,IAAIA,EAAK,GAAE,IAAIA,EAAK,IAE3C,EAAAU,gBAAP,SAAuBV,GACrB,MAAO,QAAQA,EAAK,GAAE,KAAKA,EAAK,GAAE,KAAKA,EAAK,GAAE,KAAK,EAAAW,UAAUX,EAAK,GAAI,EAAG,KAAKY,QAAQ,GAAE,KAG1F,YAAAC,UAAA,WACE,MAAO,CACLb,KAAM,CAACc,KAAKC,UAAU,GAAID,KAAKC,UAAU,GAAID,KAAKC,UAAU,GAAID,KAAKC,UAAU,MAG5E,EAAAC,YAAP,SAAmBC,GACjB,OAAO,IAAIvB,EAAMuB,EAAKjB,OAE1B,GArCE,WAAYA,GACVc,KAAKC,UAAYf,EACjBc,KAAKI,SAAWxB,EAAMK,UAAUe,KAAKC,WACrCD,KAAKK,WAAazB,EAAMe,aAAaK,KAAKC,WAC1CD,KAAKM,cAAgB1B,EAAMgB,gBAAgBI,KAAKC,WAVvC,EAAArB,S,gUCHb,aACA,SACA,SAMA,GAME,sBAAI,mBAAI,C,IAAR,WAAkB,OAAOoB,KAAKO,O,IAC9B,SAASJ,GACPH,KAAKO,MAAQJ,EACbH,KAAKQ,KAAOR,KAAKQ,IAAIC,KAAK,OAAQN,GAC9BH,KAAKU,KAAKC,QAAU,EAAAC,UAAUC,SAAWb,KAAKU,KAAKI,eAAeH,QAAU,EAAAI,WAAWC,SACzFhB,KAAKU,KAAKI,eAAeG,aAAajB,KAAKkB,U,gCA8B/C,YAAAC,mBAAA,SAAmBC,GACZpB,KAAKqB,OAIRrB,KAAKQ,IAAMY,EACXpB,KAAKkB,QAAUlB,KAAKQ,IAAIc,OAJxBtB,KAAKqB,MAAQD,EACbpB,KAAKuB,UAAYvB,KAAKqB,MAAMC,MAMzBtB,KAAKqB,MAAMG,WAAWC,SAASzB,OAAOA,KAAKqB,MAAMG,WAAWE,KAAK1B,OACtEA,KAAKQ,IAAIgB,WAAW,GAAKxB,MACpB2B,YAAc,KAEnB3B,KAAKuB,UAAUK,iBAAmB5B,KAAKuB,UAAUK,gBAAgBC,OAAO,KAAM,MAC9E7B,KAAKuB,UAAUK,gBAAkB,KACjC5B,KAAKkB,QAAQU,iBAAmB5B,KAAKkB,QAAQU,gBAAgBC,OAAO,KAAM,MAC1E7B,KAAKkB,QAAQU,gBAAkB,KAE/B5B,KAAKU,KAAKI,eAAegB,QAAQ9B,KAAKuB,UAAWvB,KAAKkB,SACtDlB,KAAKqB,MAAMZ,KAAK,UAAWT,KAAKqB,MAAOrB,MACvCA,KAAKQ,IAAIC,KAAK,UAAWT,KAAKQ,IAAKR,OAErC,YAAA+B,iBAAA,WACM/B,KAAKqB,QACPrB,KAAKqB,MAAMG,WAAWC,SAASzB,OAASA,KAAKqB,MAAMG,WAAWQ,OAAOhC,KAAKqB,MAAMG,WAAWS,QAAQjC,MAAO,GACtGA,KAAKuB,UAAUK,kBACjB5B,KAAKuB,UAAUK,gBAAgBC,OAAO,KAAM,MAC5C7B,KAAKuB,UAAUK,gBAAkB,OAGjC5B,KAAKQ,MACPR,KAAKQ,IAAIgB,WAAWC,SAASzB,OAASA,KAAKQ,IAAIgB,WAAWQ,OAAOhC,KAAKQ,IAAIgB,WAAWS,QAAQjC,MAAO,GAChGA,KAAKkB,QAAQU,kBACf5B,KAAKkB,QAAQU,gBAAgBC,OAAO,KAAM,MAC1C7B,KAAKkB,QAAQU,gBAAkB,QAIrC,YAAAM,WAAA,SAAWd,GACT,IAAIe,EAAUnC,KAAKqB,OAAQrB,KAAKQ,IAEhC,QAAKY,IACDe,IAAWf,IACXe,EAAOb,OAASF,EAAYE,OAC5Ba,EAAOC,OAAShB,EAAYgB,SAC3BpC,KAAKU,KAAK2B,MAAMF,EAAOG,UAAUb,SAASL,EAAYkB,aACtDtC,KAAKU,KAAKI,eAAeoB,WAAWC,EAAOb,KAAMF,EAAYE,WAIpE,YAAAiB,OAAA,WACEvC,KAAKU,KAAK8B,YAAYC,QAAQC,OAC9B1C,KAAK2C,UACL3C,KAAKU,KAAK8B,YAAYC,QAAQG,UAE9B5C,KAAKU,KAAK8B,YAAYK,WAAWH,OACjC1C,KAAK8C,aACL9C,KAAKU,KAAK8B,YAAYK,WAAWD,WAEnC,YAAAD,QAAA,W,IACMI,EAAQC,EAGHC,EAFLjD,KAAKqB,MACHrB,KAAKuB,UAAU2B,YAAYC,YAAc,EAAAC,UAAUC,WACpDN,GAAD,EAAW,CAAC/C,KAAKqB,MAAMiC,SAASC,EAAGvD,KAAKqB,MAAMiC,SAASE,IAApD,GAAI,OAENT,GAAD,EAAW,CAAC/C,KAAKuB,UAAU+B,SAASC,EAAIvD,KAAKuB,UAAUkC,MAAQzD,KAAKuB,UAAUmC,MAAMC,oBAAsB3D,KAAKqB,MAAMqC,MAAME,OAAQ5D,KAAKuB,UAAU+B,SAASE,EAAIxD,KAAKuB,UAAUmC,MAAMG,YAAc,IAA/L,GAAI,OAERd,GAAD,EAAW,CAAC/C,KAAK2B,YAAY4B,EAAGvD,KAAK2B,YAAY6B,IAA9C,GAAI,MAIAM,EAFL9D,KAAKQ,IACHR,KAAKkB,QAAQgC,YAAYC,YAAc,EAAAC,UAAUC,WAClDL,GAAD,EAAW,CAAChD,KAAKQ,IAAI8C,SAASC,EAAGvD,KAAKQ,IAAI8C,SAASE,IAAhD,GAAI,OAENR,GAAD,EAAW,CAAChD,KAAKkB,QAAQoC,SAASC,EAAIvD,KAAKkB,QAAQwC,MAAMC,oBAAsB3D,KAAKQ,IAAIkD,MAAME,OAAQ5D,KAAKkB,QAAQoC,SAASE,EAAIxD,KAAKkB,QAAQwC,MAAMG,YAAc,IAA9J,GAAI,OAERb,GAAD,EAAW,CAAChD,KAAK2B,YAAY4B,EAAGvD,KAAK2B,YAAY6B,IAA9C,GAAI,MAELO,EAAS,EAAAC,QAAQC,SAASlB,EAAIE,EAAID,EAAIc,GAGtC,EAAW,CAACf,GAFhBgB,GAAU,IAEmBd,GAAxBiB,EAAE,KAAEC,EAAE,KACP,EAAW,CAACnB,EAAKe,EAAQD,GAAxBM,EAAE,KAAEC,EAAE,KACP,EAAe,EAAEH,EAAKE,GAAM,GAAID,EAAKE,GAAM,GAA1CC,EAAI,KAAEC,EAAI,KAEfvE,KAAKU,KAAK8B,YAAYC,QAAQ+B,YAC9BxE,KAAKU,KAAK8B,YAAYC,QAAQgC,OAAO1B,EAAIE,GACzCjD,KAAKU,KAAK8B,YAAYC,QAAQiC,iBAAiBR,EAAIC,EAAIG,EAAMC,GAC7DvE,KAAKU,KAAK8B,YAAYC,QAAQgC,OAAOH,EAAMC,GAC3CvE,KAAKU,KAAK8B,YAAYC,QAAQiC,iBAAiBN,EAAIC,EAAIrB,EAAIc,GAC3D9D,KAAKU,KAAK8B,YAAYC,QAAQkC,YAAc,OAC5C3E,KAAKU,KAAK8B,YAAYC,QAAQmC,UAAY5E,KAAK0D,MAAMD,MAAQ,EAC7DzD,KAAKU,KAAK8B,YAAYC,QAAQoC,SAE9B7E,KAAKU,KAAK8B,YAAYC,QAAQ+B,YAC9BxE,KAAKU,KAAK8B,YAAYC,QAAQgC,OAAO1B,EAAIE,GACzCjD,KAAKU,KAAK8B,YAAYC,QAAQiC,iBAAiBR,EAAIC,EAAIG,EAAMC,GAC7DvE,KAAKU,KAAK8B,YAAYC,QAAQgC,OAAOH,EAAMC,GAC3CvE,KAAKU,KAAK8B,YAAYC,QAAQiC,iBAAiBN,EAAIC,EAAIrB,EAAIc,GAC3D9D,KAAKU,KAAK8B,YAAYC,QAAQkC,YAAc3E,KAAK0D,MAAMoB,MACvD9E,KAAKU,KAAK8B,YAAYC,QAAQmC,UAAY5E,KAAK0D,MAAMD,MACrDzD,KAAKU,KAAK8B,YAAYC,QAAQoC,UAEhC,YAAA/B,WAAA,aAEA,YAAA/C,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACTC,QAAShF,KAAKqB,MAAM0D,GACpBE,MAAOjF,KAAKQ,IAAIuE,GAChBG,YAAalF,KAAKuB,UAAUwD,GAC5BI,UAAWnF,KAAKkB,QAAQ6D,GACxBrB,MAAO1D,KAAK0D,QAGT,EAAAxD,YAAP,SAAmBQ,EAAYW,EAAiBb,EAAeL,GAC7D,OAAO,IAAIiF,EAAU1E,EAAMW,EAAOb,EAAK,KAAML,EAAKuD,MAAOvD,EAAK4E,IAAI,IAEtE,GA/IE,WACSrE,EACPW,EACAb,EACOmB,EACA+B,EACAqB,EACPM,QAFO,IAAA3B,MAAA,SACA,IAAAqB,MAAa,EAAAO,mBACpB,IAAAD,OAAA,GANO,KAAA3E,OAGA,KAAAiB,cACA,KAAA+B,QACA,KAAAqB,KAIP/E,KAAK0D,MAAQ,EAAH,KAAQ,EAAA6B,SAASC,yBAA4B9B,GACvD1D,KAAKqB,MAAQA,EACbrB,KAAKQ,IAAMA,EACPR,KAAKqB,QAAOrB,KAAKuB,UAAYvB,KAAKqB,MAAMC,MACxCtB,KAAKQ,MAAKR,KAAKkB,QAAUlB,KAAKQ,IAAIc,MAClCD,GAASb,IACXR,KAAK2B,YAAc,KACnB3B,KAAKqB,MAAMG,WAAWE,KAAK1B,MAC3BA,KAAKQ,IAAIgB,WAAWE,KAAK1B,MAEpBqF,GAAmBrF,KAAKU,KAAKI,eAAegB,QAAQ9B,KAAKuB,UAAWvB,KAAKkB,SAC9ElB,KAAKqB,MAAMZ,KAAK,UAAWT,KAAKqB,MAAOrB,MACvCA,KAAKQ,IAAIC,KAAK,UAAWT,KAAKQ,IAAKR,OArC5B,EAAAoF,a,ybCNb,IAYA,EAZA,QACA,SACA,SACA,SACA,SAEA,SACA,SACA,SACA,SACA,SAEA,KAA0B,EAAAK,MAAA,OAmCxB,YAAAC,kBAAA,sBACMX,EAAK/E,KAAKwC,YAAYmD,GAAG,YAAa,WAAM,SAAKlF,KAAK,YAAa,KACvET,KAAK4F,UAAqB,UAAIb,GAEhC,YAAAc,oBAAA,WACE7F,KAAKwC,YAAYsD,IAAI,YAAa9F,KAAK4F,UAAqB,kBACrD5F,KAAK4F,UAAqB,WAEnC,YAAAG,aAAA,SAAarF,GACX,IAAiB,UAAAsF,OAAOC,OAAOjG,KAAKkG,OAAnB,eAA2B,CAAvC,IAAI5E,EAAI,KACX,GAAKA,EAAqB6E,UAAYzF,EAAM,OAAO,EAC9C,GAAKY,EAAqB6E,QAC7B,OAAQ7E,EAAqB6E,QAAQJ,aAAarF,GAGtD,OAAO,GAGT,YAAA0F,SAAA,SAASC,EAAc/D,EAAkBgB,GACnCgD,EAAY,IAAI,EAAAC,WAAWvG,KAAM,QAASsD,EAAU,IAAK,GAAI,CAAC,CAAE+C,KAAMA,EAAM/D,SAAUA,IAAa,GAAI,GAAI,IAQ/G,OANAtC,KAAKwG,OAAO9E,KAAK4E,GACjBtG,KAAKkG,MAAMI,EAAUvB,IAAMuB,EAC3BtG,KAAKyG,YAAYC,IAAIJ,GACrBtG,KAAKc,eAAe4F,IAAIJ,GAExBtG,KAAKS,KAAK,YAAaT,KAAMsG,GACtBA,GAET,YAAAK,UAAA,SAAUN,EAAc/D,EAAkBgB,GACpCsD,EAAa,IAAI,EAAAL,WAAWvG,KAAM,SAAUsD,EAAU,IAAK,CAAC,CAAE+C,KAAMA,EAAM/D,SAAUA,IAAa,GAAI,GAAI,GAAI,IAQjH,OANAtC,KAAK6G,QAAQnF,KAAKkF,GAClB5G,KAAKkG,MAAMU,EAAW7B,IAAM6B,EAC5B5G,KAAKyG,YAAYC,IAAIE,GACrB5G,KAAKc,eAAe4F,IAAIE,GAExB5G,KAAKS,KAAK,aAAcT,KAAM4G,GACvBA,GAET,YAAAE,WAAA,SAAWpG,EAAY4C,GACjByD,EAAc,IAAI,EAAAC,YACpBhH,KACAU,EAAK2F,KACL/C,EACA,IACA,GAAI,GAAI,GACR5C,EAAK8F,OAAOS,IAAI,SAAAC,GAAe,MAAO,CAAEb,KAAMa,EAAUL,QAAQ,GAAGR,KAAM/D,SAAU4E,EAAUL,QAAQ,GAAGvE,YACxG5B,EAAKmG,QAAQI,IAAI,SAAAE,GAAgB,MAAO,CAAEd,KAAMc,EAAWX,OAAO,GAAGH,KAAM/D,SAAU6E,EAAWX,OAAO,GAAGlE,YAC1G5B,GAKF,OAHAV,KAAKkG,MAAMa,EAAYhC,IAAMgC,EAC7B/G,KAAKyG,YAAYC,IAAIK,GACrB/G,KAAKc,eAAe4F,IAAIK,GACjBA,GAGT,YAAAK,WAAA,SAAWf,EAAc/C,EAAmBG,EAAe+C,EAAgBK,EAAiBnD,EAAuB2D,EAAmCC,QAA1D,IAAA5D,MAAA,SAAuB,IAAA2D,MAAA,IACjH,IAAIE,EAAqB,GAAIC,EAAsB,QAC7B,IAAXhB,IAAwBe,EAAcf,QAC1B,IAAZK,IAAyBW,EAAeX,GAC/CvF,EAAO,IAAI,EAAAmG,KACbzH,KACAqG,EACA/C,EACAG,EACA8D,EACAC,EACA9D,EACA2D,EACAC,GAOF,OAJAtH,KAAKkG,MAAM5E,EAAKyD,IAAMzD,EACtBtB,KAAKyG,YAAYC,IAAIpF,GACrBtB,KAAKc,eAAe4F,IAAIpF,GAEjBA,GAET,YAAAoG,WAAA,SAAWC,KAmBX,YAAAC,gBAAA,SAAgB7C,GACV/E,KAAKwB,WAAWuD,KAAQ/E,KAAKwC,YAAYqF,oBAAmB7H,KAAKwC,YAAYqF,kBAAoB,aAC9F7H,KAAKwB,WAAWuD,IAEzB,YAAA+C,eAAA,WACE9B,OAAOC,OAAOjG,KAAKkG,OAAO6B,QAAQ,SAAAzG,GAAQ,OAAAA,EAAK0G,SAAU,KAE3D,YAAAzF,OAAA,WACEvC,KAAKiI,OAAOF,QAAQ,SAAAG,GAAS,OAAAA,EAAM3F,WACnCyD,OAAOC,OAAOjG,KAAKwB,YAAYuG,QAAQ,SAAAI,GAAa,OAAAA,EAAU5F,WAC9DvC,KAAKyG,YAAYsB,QAAQ,SAAAzG,GAAQ,OAAAA,EAAKiB,YAGxC,YAAAlB,MAAA,WACMrB,KAAKW,QAAU,EAAAC,UAAUC,UAE7Bb,KAAKW,MAAQ,EAAAC,UAAUC,QACvBb,KAAKS,KAAK,QAAST,MACnBA,KAAKc,eAAeO,UAEtB,YAAA+G,KAAA,WAEEpI,KAAKW,MAAQ,EAAAC,UAAUyH,QACvBrI,KAAKS,KAAK,OAAQT,MAClBgG,OAAOC,OAAOjG,KAAKkG,OAAO6B,QAAQ,SAAAzG,GAC5BA,aAAgB,EAAA0F,aAClB1F,EAAK6E,QAAQiC,UAMnB,YAAArI,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACTsB,KAAMrG,KAAKqG,KACXhE,MAAOrC,KAAKqC,MACZiG,mBAAoBtI,KAAKsI,mBACzBpC,MAAOF,OAAOC,OAAOjG,KAAKkG,OAAOe,IAAI,SAAA3F,GAAQ,OAAAA,EAAKvB,cAClDkI,OAAQjI,KAAKiI,OAAOhB,IAAI,SAAAiB,GAAS,OAAAA,EAAMnI,cACvCyB,WAAYwE,OAAOC,OAAOjG,KAAKwB,YAAYyF,IAAI,SAAAkB,GAAa,OAAAA,EAAUpI,cACtEyG,OAAQxG,KAAKwG,OAAOS,IAAI,SAAAsB,GAAS,OAAAA,EAAMxI,cACvC8G,QAAS7G,KAAK6G,QAAQI,IAAI,SAAAuB,GAAU,OAAAA,EAAOzI,cAC3Ce,eAAgBd,KAAKc,eAAef,cAGjC,EAAAG,YAAP,SAAmBsC,EAA0BrC,GAC3C,IAAIO,EAAO,IAAI+H,EAAKjG,EAAarC,EAAKkG,KAAMlG,EAAKkC,MAAOlC,EAAKmI,mBAAoBnI,EAAK4E,IAyCtF,OAvCA5E,EAAK+F,MAAM6B,QAAQ,SAAAW,GAEWpH,GAAxBoH,EAAevC,QAAgB,EAAAa,YACvB,EAAAS,MADmCvH,YAAYQ,EAAMgI,GAEjEhI,EAAKwF,MAAM5E,EAAKyD,IAAMzD,EACtBZ,EAAK+F,YAAYC,IAAIpF,KAGvBnB,EAAK8H,OAAOF,QAAQ,SAAAY,GAClB,IAAIT,EAAQ,EAAAU,MAAM1I,YAAYQ,EAAMiI,GACpCjI,EAAKuH,OAAOvG,KAAKwG,GACjBA,EAAMhC,MAAM6B,QAAQ,SAAAzG,GAAQ,OAAAA,EAAK4G,MAAQA,MAG3C/H,EAAKqG,OAAOuB,QAAQ,SAAAc,GACdN,EAAQ,EAAAhC,WAAWrG,YAAYQ,EAAMmI,GACzCnI,EAAK8F,OAAO9E,KAAK6G,GACjB7H,EAAKwF,MAAMqC,EAAMxD,IAAMwD,EACvB7H,EAAK+F,YAAYC,IAAI6B,KAGvBpI,EAAK0G,QAAQkB,QAAQ,SAAAe,GACfN,EAAS,EAAAjC,WAAWrG,YAAYQ,EAAMoI,GAC1CpI,EAAKmG,QAAQnF,KAAK8G,GAClB9H,EAAKwF,MAAMsC,EAAOzD,IAAMyD,EACxB9H,EAAK+F,YAAYC,IAAI8B,KAGvBrI,EAAKqB,WAAWuG,QAAQ,SAAAgB,GACtB,IAAIxH,EAAYb,EAAKwF,MAAM6C,EAAoB7D,aAC3C8D,EAAgBzH,EAAUsF,QAAQoC,OAAO1H,EAAU2H,WAAWC,KAAK,SAAAC,GAAY,OAAAA,EAASrE,KAAOgE,EAAoB/D,UACnH9D,EAAUR,EAAKwF,MAAM6C,EAAoB5D,WACzCkE,EAAcnI,EAAQsF,OAAOyC,OAAO/H,EAAQoI,UAAUH,KAAK,SAAAC,GAAY,OAAAA,EAASrE,KAAOgE,EAAoB9D,QAC3GkD,EAAY,EAAA/C,UAAUlF,YAAYQ,EAAMsI,EAAeK,EAAaN,GACxErI,EAAKc,WAAWuH,EAAoBhE,IAAMoD,IAG5CzH,EAAKI,eAAiB,EAAAyI,MAAMrJ,YAAYQ,EAAMP,EAAKW,gBAE5CJ,GAEX,GAlNE,WACS8B,EACA6D,EACAhE,EACAiG,EACAvD,QAAA,IAAAA,MAAa,EAAAO,cALtB,MAQE,cAAO,K,OAPA,EAAA9C,cACA,EAAA6D,OACA,EAAAhE,QACA,EAAAiG,qBACA,EAAAvD,KATT,EAAAa,UAA4C,GAC5C,EAAAjF,MAAmB,EAAAC,UAAUyH,QAY3B,EAAKnC,MAAQ,GACb,EAAK+B,OAAS,GACd,EAAKzG,WAAa,GAClB,EAAKgI,eAAiB,GACtB,EAAKC,gBAAkB,GACvB,EAAKhD,YAAc,IAAI,EAAAiD,iBAAiB,SAACjL,EAASkL,GAAY,OAAClL,EAAEmL,OAASD,EAAEC,QAAS,SAACtI,GAAe,OAAAA,EAAKyD,KAC1G,EAAKyB,OAAS,GACd,EAAKK,QAAU,GACf,EAAK/F,eAAiB,IAAI,EAAAyI,MAE1B,EAAK7D,oB,EAhCI,EAAA+C,Q,uqDCdb,aACA,SAGA,QAEA,GAUE,YAAA1I,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT8E,OAAQ7J,KAAK8J,SAAS/E,GACtBgF,MAAO/J,KAAK+J,MACZC,OAAQhK,KAAKgK,OAAO/C,IAAI,SAAAgD,GAAS,OAAAA,EAAMlF,OAGpC,EAAA7E,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAI+J,EAAU5I,EAAMnB,EAAK4J,MAAO5J,EAAK4E,KAEhD,GAhBE,WAAmB+E,EAAgBC,EAAgBhF,GAAhC,KAAA+E,WAHnB,KAAAE,OAAsB,GAIpBhK,KAAK+J,MAAQA,GAAgB,EAC7B/J,KAAK+E,GAAKA,GAAU,EAAAO,aAPX,EAAA4E,YAmCX,YAAAxD,IAAA,SAAIvG,GACGH,KAAKkG,MAAM,IAAIlG,KAAKkG,MAAMxE,KAAK,IACpC,IAAIyI,EAAY,IAAID,EAAU/J,GAC9BH,KAAKkG,MAAM,GAAGxE,KAAKyI,GACnBnK,KAAKoK,gBAAgBjK,EAAK4E,IAAMoF,GAElC,YAAArI,QAAA,SAAQuI,EAAkBC,GAA1B,WACMC,EAAiBvK,KAAKoK,gBAAgBC,EAAWtF,IACjDyF,EAAexK,KAAKoK,gBAAgBE,EAAgBvF,IAExD,IAAKwF,EAAeP,OAAOvI,SAAS+I,KAClCD,EAAeP,OAAOtI,KAAK8I,GAEvBA,EAAaT,OAASQ,EAAeR,OAAO,CAC9C/J,KAAKyK,YAAYD,EAAcD,EAAeR,MAAQ,GACtD,IAAI,EAAqB,GACzB,EAAMrI,KAAK8I,GACX,KAAwB,IAAjB,EAAM9K,S,WACX,IAAIgL,EAAW,EAAMC,QACrBD,EAASV,OAAOjC,QAAQ,SAAAkC,GAClBA,EAAMF,OAASW,EAASX,QAC1B,EAAKU,YAAYR,EAAOS,EAASX,MAAQ,GACpC,EAAMtI,SAASwI,IAAQ,EAAMvI,KAAKuI,M,KAOnD,YAAAQ,YAAA,SAAYN,EAAsBJ,GAChC/J,KAAKkG,MAAMiE,EAAUJ,OAAO/H,OAAOhC,KAAKkG,MAAMiE,EAAUJ,OAAO9H,QAAQkI,GAAY,GAC9EnK,KAAKkG,MAAM6D,KAAQ/J,KAAKkG,MAAM6D,GAAS,IAC5CI,EAAUJ,MAAQA,EAClB/J,KAAKkG,MAAM6D,GAAOrI,KAAKyI,IAEzB,YAAAjI,WAAA,SAAWmI,EAAkBC,GAC3B,OAAItK,KAAKoK,gBAAgBE,EAAgBvF,IAAIiF,OAAOvI,SAASzB,KAAKoK,gBAAgBC,EAAWtF,MAI/F,YAAA1D,MAAA,WACMrB,KAAKW,QAAU,EAAAI,WAAWsH,UAE9BrI,KAAKW,MAAQ,EAAAI,WAAWC,QAExBhB,KAAKkG,MAAM6B,QAAQ,SAAA6C,GACjBA,EAAa7C,QAAQ,SAAAoC,GAAa,OAAAA,EAAUL,SAASe,UAGvD7K,KAAKW,MAAQ,EAAAI,WAAW+J,OAE1B,YAAA1C,KAAA,WACEpI,KAAKW,MAAQ,EAAAI,WAAWsH,SAEpB,YAAA0C,WAAN,W,mGACe,SAAM,IAAIC,QAAiB,SAACC,EAASC,GAChD,IACE,EAAKC,oBACLF,GAAQ,GACR,MAAOG,GACPC,QAAQC,IAAIF,GACZF,GAAO,O,cANE,UAUuC,EAAtClF,OAAOuF,KAAKvL,KAAKwL,YAAY9L,OACzC,GAAMM,KAAK+K,cADT,M,OACF,S,iCAEJ,YAAA9J,aAAA,SAAaK,GAAb,WACM6I,EAAY7I,aAAgB,EAAAmG,KAAOzH,KAAKoK,gBAAgB9I,EAAKyD,IAAMzD,EAClEtB,KAAKwL,WAAWrB,EAAUpF,MAC7B/E,KAAKwL,WAAWrB,EAAUpF,IAAMoF,EAE5BnK,KAAKW,QAAU,EAAAI,WAAW+J,OAC5B9K,KAAKW,MAAQ,EAAAI,WAAWF,QAExBb,KAAK+K,aAAaU,KAAK,WAAM,OAAC,EAAK9K,MAAQ,EAAAI,WAAW+J,UAI5D,YAAAY,eAAA,SAAepK,GACT6I,EAAY7I,aAAgB,EAAAmG,KAAOzH,KAAKoK,gBAAgB9I,EAAKyD,IAAMzD,EACnEtB,KAAKwL,WAAWrB,EAAUpF,YAAY/E,KAAKwL,WAAWrB,EAAUpF,KAEtE,YAAAoG,kBAAA,sBACMK,EAAaxF,OAAOC,OAAOjG,KAAKwL,YAAYG,KAAK,SAAClN,EAAGkL,GAAM,OAAClL,EAAEsL,MAAQJ,EAAEI,QAC5EsB,QAAQC,IAAI,EAAIE,IAESA,EACnBzD,QAAQ,SAAAoC,GACZA,EAAUL,SAASe,MACnB,EAAKa,eAAevB,MAIxB,YAAApK,UAAA,sBACMqK,EAA6C,GAGjD,OAFApE,OAAOuF,KAAKvL,KAAKoK,iBAAiBrC,QAAQ,SAAA8B,GAAU,OAAAO,EAAgBP,GAAU,EAAKO,gBAAgBP,GAAQ9E,KAEpG,CACLmB,MAAOlG,KAAKkG,MAAMe,IAAI,SAAA2D,GAAgB,OAAAA,EAAa3D,IAAI,SAAAkD,GAAa,OAAAA,EAAUpK,gBAC9EqK,gBAAiBA,IAGd,EAAAlK,YAAP,SAAmBQ,EAAYP,GAC7B,IAAIyL,EAAQ,IAAIrC,EAEZsC,EAA+D,GAC/DC,EAAuD,GAkB3D,OAhBA3L,EAAK+F,MAAM6B,QAAQ,SAACgE,EAAwBC,GAC1CJ,EAAM1F,MAAM8F,GAASD,EAAuB9E,IAAI,SAAAgF,GAC9C,IAAI9B,EAAYD,EAAUhK,YAAYQ,EAAKwF,MAAM+F,EAAoBpC,QAASoC,GAG9E,OAFAH,EAAuB3B,EAAUpF,IAAMoF,EACvC0B,EAAqB1B,EAAUpF,IAAMkH,EAC9B9B,MAIXnE,OAAOuF,KAAKO,GAAwB/D,QAAQ,SAAAmE,GAC1CJ,EAAuBI,GAAKlC,OAAS6B,EAAqBK,GAAKlC,OAAO/C,IAAI,SAAAkF,GAAW,OAAAL,EAAuBK,OAE9GnG,OAAOuF,KAAKpL,EAAKiK,iBAAiBrC,QAAQ,SAAA8B,GACxC+B,EAAMxB,gBAAgBP,GAAUiC,EAAuB3L,EAAKiK,gBAAgBP,MAGvE+B,GA1IX,EA4IA,EAtIE,aALA,KAAAjL,MAAoB,EAAAI,WAAWsH,QAM7BrI,KAAKkG,MAAQ,GACblG,KAAKoK,gBAAkB,GACvBpK,KAAKwL,WAAa,GATT,EAAAjC,S,8pBC7Bb,IASA,EATA,SACA,SACA,SACA,SAEA,SAIA,KAA2B,EAAA9D,MAAA,OAMzB,sBAAI,mBAAI,C,IAAR,WAAqB,OAAOzF,KAAKoM,O,IACjC,SAAS/F,GACFA,GAAwB,KAAhBA,EAAKgG,OACbrM,KAAKoM,MAAQ/F,EADerG,KAAKoM,MAAQ,UAE9CpM,KAAKsM,sB,gCAIP,sBAAI,uBAAQ,C,IAAZ,WAA0B,OAAOtM,KAAKuM,W,IACtC,SAAajJ,GACXtD,KAAKuM,UAAYjJ,EACjBtD,KAAKwM,oBACLxM,KAAKyM,0B,gCA6BP,YAAAC,YAAA,SAAYC,GACV,IAAKA,EAEH,IADAA,EAAW,EAAA/N,MAAMD,SACVqB,KAAKU,KAAK+I,gBAAgBkD,EAAStM,aAAasM,EAAW,EAAA/N,MAAMD,SAE1EqB,KAAK2M,SAAWA,EAChB3M,KAAKU,KAAK+I,gBAAgBzJ,KAAK2M,SAAStM,YAAcL,MAExD,YAAAsM,mBAAA,WACEtM,KAAKU,KAAK8B,YAAYC,QAAQmK,KAAO5M,KAAK0D,MAAMmJ,SAAW,IAAM7M,KAAK0D,MAAMkJ,KAC5E,IAAIE,EAAU9M,KAAKU,KAAK8B,YAAYC,QAAQsK,YAAY/M,KAAKqG,MAC7DrG,KAAKgN,UAAYF,EAAQrJ,MACzBqJ,EAAU9M,KAAKU,KAAK8B,YAAYC,QAAQsK,YAAY,KACpD/M,KAAKU,KAAK8B,YAAYC,QAAQmK,KAAO,KACrC5M,KAAKiN,WAAaH,EAAQI,wBAA0BJ,EAAQK,8BAE7B,IAApBnN,KAAKiN,cACVG,EAAIC,SAASC,cAAc,SAC7BC,YAAc,IAChBH,EAAE1J,MAAMkJ,KAAO5M,KAAK0D,MAAMmJ,SAAW,IAAM7M,KAAK0D,MAAMkJ,KACtDS,SAASG,KAAKC,YAAYL,GAC1BpN,KAAKiN,WAAaG,EAAEM,aACpBL,SAASG,KAAKG,YAAYP,KAG9B,YAAAZ,kBAAA,WACE,IAAIoB,EAAU5N,KAAKsD,SAASuK,UAAU7N,KAAKU,KAAK8B,YAAYqL,WAC5D7N,KAAKkD,YAAc,EAAA4K,WACjB,EAAG,EACH9N,KAAKU,KAAK8B,YAAYuL,iBAAiBtK,MAAOzD,KAAKU,KAAK8B,YAAYuL,iBAAiBC,OACrFJ,EAAQrK,EAAGqK,EAAQpK,EACnBoK,EAAQrK,EAAIvD,KAAKyD,MAAQzD,KAAKU,KAAK8B,YAAYyL,MAC/CL,EAAQpK,EAAIxD,KAAKgO,OAAShO,KAAKU,KAAK8B,YAAYyL,QAGpD,YAAAC,kBAAA,sBACMC,EAAenO,KAAKsD,SAASuK,UAAU7N,KAAKU,KAAK8B,YAAYqL,WAEjE7N,KAAKkG,MAAQF,OAAOuF,KAAKvL,KAAKU,KAAKwF,OAChCe,IAAI,SAAAiF,GAAO,SAAKxL,KAAKwF,MAAMgG,KAC3BkC,OAAO,SAAA9M,GAAQ,OAACA,EAAK4G,OAAS5G,EAAK4B,YAAYmL,WAAa,EAAAC,SAASC,SACrEH,OAAO,SAAA9M,GACN,IAAIkN,EAAclN,EAAKgC,SAASuK,UAAU,EAAKnN,KAAK8B,YAAYqL,WAEhE,OAAO,EAAAC,WAAWK,EAAa5K,EAAG4K,EAAa3K,EAC7C2K,EAAa5K,EAAI,EAAKE,MAAQ,EAAK/C,KAAK8B,YAAYyL,MACpDE,EAAa3K,EAAI,EAAKwK,OAAS,EAAKtN,KAAK8B,YAAYyL,MACrDO,EAAYjL,EAAGiL,EAAYhL,EAC3BgL,EAAYjL,EAAIjC,EAAKmC,MAAQ,EAAK/C,KAAK8B,YAAYyL,MACnDO,EAAYhL,EAAIlC,EAAKmN,GAAGT,OAAS,EAAKtN,KAAK8B,YAAYyL,SACnD,EAAAK,SAASC,SAGnBvO,KAAKkG,MAAM6B,QAAQ,SAACzG,EAAM0K,IACxB1K,EAAK4G,MAAQ,GACRwG,WAAW1C,GAAS1K,EAAKgC,SAASqL,SAAS,EAAKrL,aAGzD,YAAAmJ,uBAAA,sBACEzM,KAAKkG,MAAM6B,QAAQ,SAACzG,EAAM0K,GACxB1K,EAAKgC,SAAW,EAAKA,SAASoD,IAAI,EAAKgI,WAAW1C,OAItD,YAAAzJ,OAAA,WACMvC,KAAKkD,cAAgB,EAAAoL,SAASM,UAElC5O,KAAKU,KAAK8B,YAAYC,QAAQC,OAC9B1C,KAAK2C,UACL3C,KAAKU,KAAK8B,YAAYC,QAAQG,UAE9B5C,KAAKU,KAAK8B,YAAYqM,gBAAgBnM,OACtC1C,KAAK8C,aACL9C,KAAKU,KAAK8B,YAAYqM,gBAAgBjM,YAExC,YAAAD,QAAA,WACE3C,KAAKU,KAAK8B,YAAYC,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YACvD9O,KAAKU,KAAK8B,YAAYC,QAAQmC,UAAY,EAC1C5E,KAAKU,KAAK8B,YAAYC,QAAQsM,UAAY/O,KAAK0D,MAAMoB,MACrD9E,KAAKU,KAAK8B,YAAYC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC5FhO,KAAKU,KAAK8B,YAAYC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAE1FhO,KAAKU,KAAK8B,YAAYC,QAAQsM,UAAY/O,KAAK0D,MAAMwL,WACrDlP,KAAKU,KAAK8B,YAAYC,QAAQ0M,aAAe,SAC7CnP,KAAKU,KAAK8B,YAAYC,QAAQmK,KAAO5M,KAAK0D,MAAMmJ,SAAW,IAAM7M,KAAK0D,MAAMkJ,KAC5E5M,KAAKU,KAAK8B,YAAYC,QAAQ2M,SAASpP,KAAKqG,KAAMrG,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAI,KAEvF,YAAAV,WAAA,WACE9C,KAAKU,KAAK8B,YAAYqM,gBAAgBE,UAAY/O,KAAK2M,SAASrM,cAChEN,KAAKU,KAAK8B,YAAYqM,gBAAgBI,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAClGhO,KAAKU,KAAK8B,YAAYqM,gBAAgBI,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAIxD,KAAKiN,WAAa,GAAIjN,KAAKgN,UAAWhN,KAAKiN,WAAa,KAG5I,YAAAoC,QAAA,SAAQC,EAAyBC,GAAjC,WACEvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,GAErCC,EAAmBxP,KAAKsD,SAASuK,UAAU7N,KAAKU,KAAK8B,YAAYqL,WACjEyB,EAAe9L,EAAIgM,EAAiBhM,GACtCxD,KAAKU,KAAK8B,YAAYiN,iBAAiBD,EAAiBb,SAAS,GAAI,GAAK3O,KAAKiN,YAAcjN,KAAKU,KAAK8B,YAAYyL,OAAQjO,KAAKqG,KAAM,CACpI5C,MAAO3E,KAAK4Q,IAAI1P,KAAKgN,UAAW,IAAMhN,KAAKU,KAAK8B,YAAYyL,MAAQ,KACpED,OAAQhO,KAAKiN,WAAajN,KAAKU,KAAK8B,YAAYyL,MAAQ,KACxDpB,SAAUvN,SAASU,KAAK0D,MAAMmJ,SAAS8C,QAAQ,KAAM,KAAO3P,KAAKU,KAAK8B,YAAYyL,MAAQ,KAC1F2B,WAAY5P,KAAK0D,MAAMkJ,MACtB,CACDxK,KAAM,QACL,SAACyN,GACF,EAAKxJ,KAAOwJ,KAKlB,YAAA9P,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT4H,SAAU3M,KAAK2M,SAAS5M,YACxBuD,SAAUtD,KAAKsD,SAASvD,YACxBsG,KAAMrG,KAAKqG,KACX5C,MAAOzD,KAAKyD,MACZuK,OAAQhO,KAAKgO,OACbtK,MAAO1D,KAAK0D,MACZwC,MAAOlG,KAAKkG,MAAMe,IAAI,SAAA3F,GAAQ,OAAAA,EAAKyD,KACnC2J,WAAY1O,KAAK0O,WAAWzH,IAAI,SAAA6I,GAAc,OAAAA,EAAW/P,gBAGtD,EAAAG,YAAP,SAAmBQ,EAAYP,GAC7B,IAAI+H,EAAQ,IAAIU,EAAMlI,EAAM,EAAAsD,QAAQ9D,YAAYC,EAAKmD,UAAWnD,EAAKsD,MAAOtD,EAAK6N,OAAQ7N,EAAKkG,KAAMlG,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,WAQhJ,OAPAxM,EAAK+F,MAAM6B,QAAQ,SAAA8B,GACjB3B,EAAMhC,MAAMxE,KAAKhB,EAAKwF,MAAM2D,MAE9B1J,EAAKuO,WAAW3G,QAAQ,SAAAgI,GACtB7H,EAAMwG,WAAWhN,KAAK,EAAAsC,QAAQ9D,YAAY6P,MAGrC7H,GAEX,GAjKE,WACSxH,EACP4C,EACOG,EAA0BuK,EACjC3H,EACO3C,EACAqB,EACA4H,QAJA,IAAAlJ,MAAA,QAA0B,IAAAuK,MAAA,QAE1B,IAAAtK,MAAA,SACA,IAAAqB,MAAa,EAAAO,cANtB,MAUE,cAAO,K,OATA,EAAA5E,OAEA,EAAA+C,QAA0B,EAAAuK,SAE1B,EAAAtK,QACA,EAAAqB,KACA,EAAA4H,WA3BT,EAAAzG,MAAgB,GAChB,EAAAwI,WAAwB,GAUxB,EAAAxL,YAAwB,EAAAoL,SAASC,OAoB/B,EAAK7K,MAAQ,EAAH,KAAQ,EAAA6B,SAASyK,qBAAwBtM,GACnD,EAAKqB,GAAK,EAAAO,aACV,EAAKiH,UAAYjJ,EACZ,EAAKI,MAAMoB,OAAU,EAAKpB,MAAMoL,cAC/BmB,EAAS,EAAA1K,SAAS2K,mBAAmBvR,SACzC,EAAK+E,MAAMoL,YAAcmB,EAAO,GAChC,EAAKvM,MAAMoB,MAAQmL,EAAO,IAE5B,EAAK5J,KAAOA,EACZ,EAAKqG,YAAYC,GACjB,EAAKL,qBAEL,EAAK5L,KAAKiF,GAAG,YAAa,WAAM,SAAK6G,sB,EA5C5B,EAAA5D,S,4ECTb,OASE,YAAAjD,GAAA,SAAGwK,EAAkBC,GACdpQ,KAAKqQ,iBAAiBF,KAAWnQ,KAAKqQ,iBAAiBF,GAAY,IAExE,IAAIpL,EAAK/E,KAAKsQ,OAGd,OAFAtQ,KAAKqQ,iBAAiBF,GAAUpL,GAAMqL,EACtCpQ,KAAKsQ,QAAU,EACRvL,GAET,YAAAtE,KAAA,SAAK0P,G,IAAkB,wDACjBnQ,KAAKqQ,iBAAiBF,KACpBI,EAAMvK,OAAOC,OAAOjG,KAAKqQ,iBAAiBF,IAAWpI,QAAQ,SAAAqI,GAAY,OAAAA,EAAQ,aAAIG,KACpFvK,OAAOC,OAAOjG,KAAKqQ,iBAAiBF,IAAWpI,QAAQ,SAAAqI,GAAY,OAAAA,QAG5E,YAAAtK,IAAA,SAAIqK,EAAkBpL,UACb/E,KAAKqQ,iBAAiBF,GAAUpL,IAE3C,GAtBE,aACE/E,KAAKqQ,iBAAmB,GACxBrQ,KAAKsQ,OAAS,EANL,EAAA7K,S,2YCAb,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,YACA,a,uuBCTA,aACA,SACA,SACA,SACA,SAGA,SACA,SAGA,GAaE,YAAAiH,YAAA,WAEE,IADA,IAAI5H,EAAQ,EAAAlG,MAAMD,SACXqB,KAAKsB,KAAKkP,qBAAqB1L,EAAMzE,aAAayE,EAAQ,EAAAlG,MAAMD,SACvEqB,KAAK2M,SAAW7H,EAChB9E,KAAKsB,KAAKkP,qBAAqBxQ,KAAK2M,SAAStM,YAAcL,MAE7D,YAAAuC,OAAA,WACEvC,KAAKsB,KAAKmB,QAAQC,OAClB1C,KAAK2C,QAAQ3C,KAAMA,KAAKsB,KAAKgC,SAASoD,IAAI1G,KAAKyQ,OAAQzQ,KAAKsB,KAAKoC,MAAMG,YAAc,EAAI7D,KAAKsB,KAAKoC,MAAMgN,eAAiB,IAC1H1Q,KAAKsB,KAAKmB,QAAQG,UAElB5C,KAAKsB,KAAKqP,aAAajO,OACvB1C,KAAK4Q,eACL5Q,KAAKsB,KAAKqP,aAAa/N,WAEzB,YAAAgO,aAAA,WACE5Q,KAAKsB,KAAKqP,aAAa5B,UAAY/O,KAAK2M,SAASrM,cACjDN,KAAKsB,KAAKqP,aAAa1B,SACrBjP,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKyQ,OAC5BzQ,KAAKsB,KAAKgC,SAASE,EAAIxD,KAAKsB,KAAKoC,MAAMG,YAAc,EAAI7D,KAAKsB,KAAKoC,MAAMgN,eAAiB,EAC1F1Q,KAAKsB,KAAKoC,MAAMgN,eAChB1Q,KAAKsB,KAAKoC,MAAMgN,iBAGtB,GAjCE,WACSpP,EACA8O,EACAzN,EACAkO,GAHA,KAAAvP,OACA,KAAA8O,WACA,KAAAzN,UACA,KAAAkO,QANT,KAAAJ,OAAiB,EAQfzQ,KAAK0M,cAVI,EAAAoE,aAuCb,WAA0B,EAAArL,MAAA,OA8BxB,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOzF,KAAKuM,W,IAEd,SAAajJ,GACXtD,KAAKuM,UAAYjJ,EACjBtD,KAAK+Q,SACL/Q,KAAKyO,GAAGuC,SACRhR,KAAKwM,qB,gCAEP,sBAAI,qBAAM,C,IAAV,WACE,OAAOxM,KAAKiR,S,IAEd,SAAWrH,GACT5J,KAAKiR,QAAUrH,EACX5J,KAAKU,KAAK+F,YAAYyK,OAAOlR,OAC/BA,KAAKU,KAAK+F,YAAYC,IAAI1G,O,gCAG9B,sBAAI,oBAAK,C,IAAT,WACE,OAAOA,KAAKmR,Q,IAEd,SAAU1N,GACRzD,KAAKmR,OAAS1N,EACdzD,KAAKyO,GAAGhL,MAAQA,EAChBzD,KAAKyO,GAAGuC,U,gCA+CV,YAAAI,WAAA,SAAW9J,GAAX,WAEEtH,KAAKsH,MAAQ,IAAI+J,MADyB,GACN,CAClCC,IAAK,SAACC,EAAQC,EAAc3B,QACE,IAAjB0B,EAAOC,KAChB,EAAKC,cAAcD,GAAQ,IAE7B,IAAIE,EAAWH,EAAOC,GAOtB,OANAD,EAAOC,GAAQ3B,EACf,EAAK4B,cAAcD,GAAMzJ,QAAQ,SAAAqI,GAAY,OAAAA,EAASsB,EAAU7B,KAE5D,EAAKQ,iBAA6B,YACpC,EAAK5P,KAAK,aAAc,EAAM+Q,EAAME,EAAU7B,IAEzC,KAIX7J,OAAOuF,KAAKjE,GAAOS,QAAQ,SAAAmE,GACzB,EAAK5E,MAAM4E,GAAO5E,EAAM4E,MAG5B,YAAAyF,gBAAA,SAAgBC,EAAkBxB,QACI,IAAzBpQ,KAAKsH,MAAMsK,IACpB5R,KAAKyR,cAAcG,GAAUlQ,KAAK0O,IAGtC,YAAAyB,mBAAA,SAAmBD,EAAkBxB,GAC/BpQ,KAAKyR,cAAcG,IACrB5R,KAAKyR,cAAcG,GAAU5P,OAAOhC,KAAKyR,cAAcG,GAAU3P,QAAQmO,GAAW,IAGxF,YAAA1D,YAAA,SAAYC,GACV,IAAKA,EAEH,IADAA,EAAW,EAAA/N,MAAMD,SACVqB,KAAKU,KAAK8I,eAAemD,EAAStM,aAAasM,EAAW,EAAA/N,MAAMD,SAEzEqB,KAAK2M,SAAWA,EAChB3M,KAAKU,KAAK8I,eAAexJ,KAAK2M,SAAStM,YAAcL,MAEvD,YAAA8R,YAAA,SAAY1I,KAERA,IADIA,aAAoB,EAAA2I,UACb,EAAAA,SAAS7R,YAAYF,KAAMoJ,GAEpCA,GAAShH,OAAS,EAAA4P,aAAaC,GAAIjS,KAAKwG,OACvCxG,KAAK6G,SADyCnF,KAAK0H,GAExDpJ,KAAK+Q,SACL/Q,KAAKyO,GAAGsC,UAEV,YAAAmB,cAAA,SAAc9B,EAAsB7N,EAA6DsO,GAC/F,IAAIsB,EAAgB,IAAIrB,EAAW9Q,KAAMoQ,EAAU7N,EAAQsO,GAEvDuB,EAAcpS,KAAKqS,YAAYjE,OAAO,SAAAkE,GAAc,OAAAA,EAAWzB,QAAUsB,EAActB,QAAOnR,OAExE+Q,EAAtBI,IAAU,EAAA0B,MAAMC,KAAeJ,GAAepS,KAAK0D,MAAMgN,eAAiB1Q,KAAK0D,MAAM+O,mBAC3EzS,KAAKyD,MAAQ2O,GAAepS,KAAK0D,MAAMgN,eAAiB1Q,KAAK0D,MAAM+O,mBAAqBzS,KAAK0D,MAAMgN,eAIjH,OAHAyB,EAAc1B,OAASA,EACvBzQ,KAAKqS,YAAY3Q,KAAKyQ,GAEfA,GAET,YAAAO,QAAA,WACE1S,KAAKU,KAAKgH,WAAW1H,KAAK+E,KAE5B,YAAAgM,OAAA,WACE,IAAIvN,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAK0D,MAAMiP,kBAAoB,EAAI3S,KAAK0D,MAAMkP,QAAU,EAAI5S,KAAK0D,MAAMG,YAC7F7D,KAAKwG,OAAO9G,OAASM,KAAK6G,QAAQnH,QACpCM,KAAK6S,0BAA0BrP,GAC/BA,EAAIxD,KAAKsD,SAASE,EAAKxD,KAAKwG,OAAO9G,OAASM,KAAK0D,MAAMiP,kBAAqB,EAAK3S,KAAK6G,QAAQnH,OAASM,KAAK0D,MAAMiP,kBAAqB,EAAI3S,KAAK0D,MAAMiP,kBAAoB,EAAI3S,KAAK0D,MAAMkP,QAAU,EAAI5S,KAAK0D,MAAMG,YAClN7D,KAAK8S,2BAA2BtP,KAEhCxD,KAAK8S,2BAA2BtP,GAChCA,EAAIxD,KAAKsD,SAASE,EAAKxD,KAAK6G,QAAQnH,OAASM,KAAK0D,MAAMiP,kBAAqB,EAAK3S,KAAKwG,OAAO9G,OAASM,KAAK0D,MAAMiP,kBAAqB,EAAI3S,KAAK0D,MAAMiP,kBAAoB,EAAI3S,KAAK0D,MAAMkP,QAAU,EAAI5S,KAAK0D,MAAMG,YAClN7D,KAAK6S,0BAA0BrP,KAGnC,YAAAuP,gBAAA,WACE/S,KAAKkD,YAAYC,UAAYnD,KAAKkD,YAAYC,YAAc,EAAAC,UAAUC,UAAY,EAAAD,UAAU4P,UAAY,EAAA5P,UAAUC,WAEpH,YAAAmJ,kBAAA,WACE,IAAIoB,EAAU5N,KAAKsD,SAASuK,UAAU7N,KAAKU,KAAK8B,YAAYqL,WAC5D7N,KAAKkD,YAAYmL,SAAW,EAAAP,WAC1B,EAAG,EACH9N,KAAKU,KAAK8B,YAAYuL,iBAAiBtK,MAAOzD,KAAKU,KAAK8B,YAAYuL,iBAAiBC,OACrFJ,EAAQrK,EAAGqK,EAAQpK,EACnBoK,EAAQrK,EAAIvD,KAAKyD,MAAQzD,KAAKU,KAAK8B,YAAYyL,MAC/CL,EAAQpK,GAAKxD,KAAKkD,YAAYC,YAAc,EAAAC,UAAUC,UAAYrD,KAAKyO,GAAGT,OAAShO,KAAK0D,MAAMG,aAAe7D,KAAKU,KAAK8B,YAAYyL,OAGnG,GAA9BjO,KAAKU,KAAK8B,YAAYyL,MAAajO,KAAKkD,YAAY+P,IAAM,EAAAC,IAAIC,KACzDnT,KAAKU,KAAK8B,YAAYyL,OAAS,IAAqC,GAA9BjO,KAAKU,KAAK8B,YAAYyL,MAAYjO,KAAKkD,YAAY+P,IAAM,EAAAC,IAAIE,KACvGpT,KAAKkD,YAAY+P,IAAM,EAAAC,IAAIG,KAE5BrT,KAAKkD,YAAYmL,WAAa,EAAAC,SAASgF,WACzCtT,KAAKyO,GAAGjC,qBAGZ,YAAAqG,0BAAA,SAA0BrP,GAA1B,WACExD,KAAKwG,OAAOuB,QAAQ,SAAAqB,GAClBA,EAAS9F,SAASC,EAAI,EAAKD,SAASC,EAAI,EAAKG,MAAMC,oBAAsByF,EAAS1F,MAAME,OACxFwF,EAAS9F,SAASE,EAAIA,EACtBA,GAAK,EAAKE,MAAMiP,qBAGpB,YAAAG,2BAAA,SAA2BtP,GAA3B,WACExD,KAAK6G,QAAQkB,QAAQ,SAAAqB,GACnBA,EAAS9F,SAASC,EAAI,EAAKD,SAASC,EAAI,EAAKkL,GAAGhL,MAAQ,EAAKC,MAAMC,oBAAsByF,EAAS1F,MAAME,OACxGwF,EAAS9F,SAASE,EAAIA,EACtBA,GAAK,EAAKE,MAAMiP,qBAGpB,YAAAY,eAAA,SAAe5G,EAAkB2C,EAAyBC,GACxD,IAAIiE,EAAc,KAElBjE,EAAeA,EAAa1B,UAAU7N,KAAKU,KAAK8B,YAAYqL,WAC5D,IAAI2B,EAAmBxP,KAAKsD,SAASuK,UAAU7N,KAAKU,KAAK8B,YAAYqL,WAarE,OAX+C,EAA5C7N,KAAKwG,OAAO9G,OAASM,KAAKsJ,SAAS5J,QAAc6P,EAAahM,EAAIiM,EAAiBjM,GACrC,EAA9CvD,KAAK6G,QAAQnH,OAASM,KAAKkJ,UAAUxJ,QAAc6P,EAAahM,EAAIiM,EAAiBjM,EAAIvD,KAAKyO,GAAGhL,MAAQzD,KAAKU,KAAK8B,YAAYyL,SAEhIuF,EAAcxT,KAAKyT,mBAAmB9G,IAGpC3M,KAAK4B,iBAAmB5B,KAAK4B,kBAAoB4R,IACnDxT,KAAK4B,gBAAgBC,OAAOyN,EAAgBC,GAC5CiE,GAAeA,EAAYE,QAAQpE,EAAgBC,IAG9CiE,GAET,YAAAG,aAAA,SAAahH,GACPiH,EAAS5T,KAAK6T,aAAalH,GAC/B,OAAIiH,aAAkB,EAAAE,UAAkB,KACjCF,GAET,YAAAG,iBAAA,SAAiBpH,GACf,OAAO3M,KAAKwQ,qBAAqB7D,IAEnC,YAAAqH,SAAA,SAAS5K,GACP,GAAwB,iBAAbA,EAAuB,CAChC,IAAI6K,EAAgBjU,KAAKwG,OAAO2C,KAAK,SAAA+K,GAAY,OAACA,EAAS7N,OAAS+C,IACpE,GAAI6K,EAAe,OAAQA,EAA+B,eAE1D,GAAIjU,KAAKwG,OAAO4C,GAAW,OAAQpJ,KAAKwG,OAAO4C,GAA2B,UAE5E,OAAO,MAET,YAAA+K,UAAA,SAAU/K,EAA2BjJ,GACnC,GAAwB,iBAAbiJ,EAAuB,CAChC,IAAIgL,EAAiBpU,KAAK6G,QAAQsC,KAAK,SAAA+K,GAAY,OAACA,EAAS7N,OAAS+C,IACtE,GAAIgL,EAAgB,OAAQA,EAAgC,QAAEjU,QAE1DH,KAAK6G,QAAQuC,IAAYpJ,KAAK6G,QAAQuC,GAA2B,QAAEjJ,IAG3E,YAAA0K,IAAA,WACM7K,KAAKU,KAAKC,QAAU,EAAAC,UAAUyH,SAElCrI,KAAKS,KAAK,UAAWT,KAAMA,KAAKwG,OAAOS,IAAI,SAAAmC,GAAY,OAA6B,EAA7BA,EAAS5H,WAAW9B,OAAa0J,EAAS5H,WAAW,GAAGrB,KAAO,SAGxH,YAAAoC,OAAA,WACMvC,KAAKkD,YAAYmL,WAAa,EAAAC,SAASM,UACvC5O,KAAKkD,YAAYC,YAAc,EAAAC,UAAUC,WAAWrD,KAAKyO,GAAGlM,SAEhEvC,KAAKyC,QAAQC,OACb1C,KAAK2C,UACL3C,KAAKyC,QAAQG,UAEb5C,KAAKqS,YAAYtK,QAAQ,SAAAuK,GAAc,OAAAA,EAAW/P,WAElDvC,KAAK6C,WAAWH,OAChB1C,KAAK8C,aACL9C,KAAK6C,WAAWD,YAElB,YAAAD,QAAA,eAsCQ0R,EAEAC,EAxCR,OACMtU,KAAKkD,YAAYC,YAAc,EAAAC,UAAUC,UAChB,EAAvBrD,KAAKkD,YAAY+P,MACnBjT,KAAKwG,OAAOuB,QAAQ,SAAAqB,GAAY,OAAAA,EAAS7G,WACzCvC,KAAK6G,QAAQkB,QAAQ,SAAAqB,GAAY,OAAAA,EAAS7G,aAG5CvC,KAAKyC,QAAQsM,UAAY,QACyB,EAA7C/O,KAAKwG,OAAO9G,OAASM,KAAKsJ,SAAS5J,SAClCkE,GAA8B,EAArB5D,KAAKwG,OAAO9G,OAAaM,KAAKwG,OAAyBxG,KAAKsJ,UAAvB,GAAG5F,MAAME,OAC3D5D,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAIvD,KAAK0D,MAAMC,oBAA+B,EAATC,EAAY5D,KAAKsD,SAASE,EAAIxD,KAAK0D,MAAMG,YAAc,EAAID,EAAiB,EAATA,EAAqB,EAATA,IAEtG,EAA/C5D,KAAK6G,QAAQnH,OAASM,KAAKkJ,UAAUxJ,SACpCkE,GAA+B,EAAtB5D,KAAK6G,QAAQnH,OAAaM,KAAK6G,QAA0B7G,KAAKkJ,WAAvB,GAAGxF,MAAME,OAC7D5D,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAIvD,KAAKyD,MAAQzD,KAAK0D,MAAMC,oBAAqB3D,KAAKsD,SAASE,EAAIxD,KAAK0D,MAAMG,YAAc,EAAID,EAAiB,EAATA,EAAqB,EAATA,KAI5J5D,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMwL,WACpClP,KAAKyC,QAAQmK,KAAO5M,KAAK0D,MAAM6Q,cAAgB,IAAMvU,KAAK0D,MAAM8Q,UAChExU,KAAKyC,QAAQ0M,aAAe,SAC5BnP,KAAKyC,QAAQ2M,SAASpP,KAAKqG,KAAMrG,KAAKsD,SAASC,EAAIvD,KAAKyO,GAAGhL,MAAQ,EAAIzD,KAAKyC,QAAQsK,YAAY/M,KAAKqG,MAAM5C,MAAQ,EAAGzD,KAAKsD,SAASE,EAAIxD,KAAK0D,MAAMG,YAAc,GAE7J7D,KAAKkD,YAAYC,YAAc,EAAAC,UAAUC,YAC3CrD,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMoB,MACpC9E,KAAKyC,QAAQmK,KAAO5M,KAAK0D,MAAMmJ,SAAW,IAAM7M,KAAK0D,MAAMkJ,KAC3D5M,KAAKyC,QAAQ0M,aAAe,SAC5BnP,KAAKwG,OAAOuB,QAAQ,SAAAqB,GAClB,EAAK3G,QAAQ2M,SAAShG,EAAS/C,KAAM+C,EAAS9F,SAASC,EAAI6F,EAAS1F,MAAME,OAAS,EAAKF,MAAMC,oBAAsB,EAAKD,MAAMkP,QAASxJ,EAAS9F,SAASE,KAE5JxD,KAAK6G,QAAQkB,QAAQ,SAAAqB,GACnB,EAAK3G,QAAQ2M,SAAShG,EAAS/C,KAAM+C,EAAS9F,SAASC,EAAI6F,EAAS1F,MAAME,OAAS,EAAKF,MAAMC,oBAAsB,EAAKD,MAAMkP,QAAU,EAAKnQ,QAAQsK,YAAY3D,EAAS/C,MAAM5C,MAAO2F,EAAS9F,SAASE,MAI1MxD,KAAKgI,UACPhI,KAAKyC,QAAQkC,YAAc,OAC3B3E,KAAKyC,QAAQmC,UAAY,EACrByP,EAA6C,IAAvBrU,KAAKwG,OAAO9G,OAAyC,IAAzBM,KAAKsJ,SAAS5J,OAAe,EAAoC,EAAhCM,KAAKsJ,SAAS,GAAG5F,MAAME,OAA4C,EAA9B5D,KAAKwG,OAAO,GAAG9C,MAAME,OACjJyQ,GAAwD,EAAjCrU,KAAK0D,MAAMC,oBAC9B2Q,EAA+C,IAAxBtU,KAAK6G,QAAQnH,OAA0C,IAA1BM,KAAKkJ,UAAUxJ,OAAe,EAAqC,EAAjCM,KAAKkJ,UAAU,GAAGxF,MAAME,OAA6C,EAA/B5D,KAAK6G,QAAQ,GAAGnD,MAAME,OACtJ0Q,GAAyD,EAAjCtU,KAAK0D,MAAMC,oBACnC3D,KAAKyC,QAAQgS,gBACXzU,KAAKsD,SAASC,EAAI8Q,EAClBrU,KAAKsD,SAASE,EACdxD,KAAKyD,MAAQ4Q,EAAsBC,EACnCtU,KAAKkD,YAAYC,YAAc,EAAAC,UAAUC,UAAarD,KAAKyO,GAAGT,OAAShO,KAAK0D,MAAMkP,QAAW5S,KAAK0D,MAAMG,YACxG,KAIN,YAAAf,WAAA,WACE9C,KAAK6C,WAAWkM,UAAY/O,KAAK2M,SAASrM,cAC1C,IASMsD,EATFL,EAAIvD,KAAKsD,SAASC,EAClBC,EAAIxD,KAAKsD,SAASE,EAClBkR,EAA2B,EAAGC,EAA4B,EACzD3U,KAAKwG,OAAO9G,OAASM,KAAKsJ,SAAS5J,SAAY,IAC9CkE,GAA8B,EAArB5D,KAAKwG,OAAO9G,OAAaM,KAAKwG,OAAyBxG,KAAKsJ,UAAvB,GAAG5F,MAAME,OAC3DL,GAAKvD,KAAK0D,MAAMC,oBAA+B,EAATC,EACtC8Q,EAAoC,EAAT9Q,EAAa5D,KAAK0D,MAAMC,qBAEhD3D,KAAK6G,QAAQnH,OAASM,KAAKkJ,UAAUxJ,SAAY,IAEpDiV,EAAqC,GADjC/Q,GAA+B,EAAtB5D,KAAK6G,QAAQnH,OAAaM,KAAK6G,QAA0B7G,KAAKkJ,WAAvB,GAAGxF,MAAME,QACpB5D,KAAK0D,MAAMC,qBAEtD3D,KAAK6C,WAAWoM,SAAS1L,EAAGC,EAC1BxD,KAAKyO,GAAGhL,MAAQiR,EAA2BC,EAC3C3U,KAAKkD,YAAYC,YAAc,EAAAC,UAAUC,UAAYrD,KAAKyO,GAAGT,OAAShO,KAAK0D,MAAMG,cAMrF,YAAA+Q,OAAA,SAAOtF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,GAExC,IAAI5C,EAAW,EAAA/N,MAAMe,aAAaK,KAAKU,KAAK8B,YAAYmO,aAAakE,aAAavF,EAAe/L,EAAG+L,EAAe9L,EAAG,EAAG,GAAGrD,MAE5HH,KAAK8U,cAAgB9U,KAAK2T,aAAahH,GACvC3M,KAAK8U,eAAiB9U,KAAK8U,cAAcF,OAAOtF,EAAgBC,GAE5DiE,EAAcxT,KAAKuT,eAAe5G,EAAU2C,EAAgBC,GAC5DiE,IACFxT,KAAK4B,gBAAkB4R,EACvBxT,KAAK4B,gBAAgBgT,OAAOtF,EAAgBC,KAGhD,YAAAwF,OAAA,SAAOzF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,GAExC,IAAI5C,EAAW,EAAA/N,MAAMe,aAAaK,KAAKU,KAAK8B,YAAYmO,aAAakE,aAAavF,EAAe/L,EAAG+L,EAAe9L,EAAG,EAAG,GAAGrD,MAExHqT,EAAcxT,KAAKuT,eAAe5G,EAAU2C,EAAgBC,GAE5DiE,IAAgBxT,KAAKgV,iBACvBhV,KAAKgV,iBAAmBhV,KAAKgV,gBAAgBnT,OAAOyN,EAAgBC,GACpEiE,GAAeA,EAAYE,QAAQpE,EAAgBC,IAEnDiE,IAAiBxT,KAAK4B,iBAAoB4R,EAAYuB,OAAOzF,EAAgBC,GAE/EvP,KAAKgV,gBAAkBxB,EAEnByB,EAAYjV,KAAK2T,aAAahH,GAC9BsI,IAAcjV,KAAKkV,eACrBlV,KAAKkV,eAAiBlV,KAAKkV,cAAcrT,OAAOyN,EAAgBC,GAChE0F,GAAaA,EAAUvB,QAAQpE,EAAgBC,IAE/C0F,IAAejV,KAAK8U,eAAkBG,EAAUF,OAAOzF,EAAgBC,GAEzEvP,KAAKkV,cAAgBD,GAEvB,YAAAvB,QAAA,SAAQpE,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,GAExC,IAAI5C,EAAW,EAAA/N,MAAMe,aAAaK,KAAKU,KAAK8B,YAAYmO,aAAakE,aAAavF,EAAe/L,EAAG+L,EAAe9L,EAAG,EAAG,GAAGrD,MAExHqT,EAAcxT,KAAKuT,eAAe5G,EAAU2C,EAAgBC,GAChEiE,GAAeA,EAAY3R,OAAOyN,EAAgBC,GAClDvP,KAAKgV,iBAAmBhV,KAAKgV,gBAAgBnT,OAAOyN,EAAgBC,GACpEvP,KAAKgV,gBAAkB,KACvBhV,KAAK4B,iBAAmB5B,KAAK4B,gBAAgBC,OAAOyN,EAAgBC,IAEtE,YAAA4F,KAAA,SAAK7F,EAAyBC,GAC5BvP,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,GAEtC,IAAI5C,EAAW,EAAA/N,MAAMe,aAAaK,KAAKU,KAAK8B,YAAYmO,aAAakE,aAAavF,EAAe/L,EAAG+L,EAAe9L,EAAG,EAAG,GAAGrD,MAE5HH,KAAK8U,cAAgB,KACrB,IAAIG,EAAYjV,KAAK2T,aAAahH,GAClCsI,GAAaA,EAAUE,KAAK7F,EAAe8F,QAAS7F,EAAa6F,SAE7D5B,EAAcxT,KAAKuT,eAAe5G,EAAU2C,EAAgBC,GAChEiE,GAAeA,EAAY2B,KAAK7F,EAAgBC,IAElD,YAAAF,QAAA,SAAQC,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,GAEzC,IAEM8F,EAFF1I,EAAW,EAAA/N,MAAMe,aAAaK,KAAKU,KAAK8B,YAAYmO,aAAakE,aAAavF,EAAe/L,EAAG+L,EAAe9L,EAAG,EAAG,GAAGrD,MACxHoP,EAAa/L,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAK0D,MAAMG,YAAc7D,KAAKU,KAAK8B,YAAYyL,OAChFoH,EAAgBrV,KAAK+T,iBAAiBpH,KACzB0I,EAAcjF,YAE/BpQ,KAAK4B,iBAAmB5B,KAAK4B,gBAAgByN,QAAQC,EAAgBC,IAEjE0F,EAAYjV,KAAK2T,aAAahH,KACrBsI,EAAU5F,QAAQC,EAAe8F,QAAS7F,EAAa6F,WAGxE,YAAAE,OAAA,SAAOhG,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,GAExCvP,KAAK8U,eAAiB9U,KAAK8U,cAAcS,WAAavV,KAAK8U,cAAcQ,OAAOhG,EAAgBC,IAElG,YAAAiG,cAAA,WACExV,KAAKS,KAAK,aAAcT,OAK1B,YAAAyV,YAAA,SAAYC,EAAc9D,EAAmBrJ,EAAiBC,EAAkB9E,GAC9E,OAAO,IAAI,EAAAiS,MAAM3V,KAAM0V,EAAM9D,EAAUrJ,EAAOC,EAAQ9E,IAExD,YAAAkS,YAAA,SAAYzT,EAAgByP,EAAmBlO,GAC7C,OAAO,IAAI,EAAAmS,MAAM7V,KAAMmC,EAAQyP,EAAUlO,IAE3C,YAAAoS,aAAA,SAAaC,EAAarG,EAAaG,EAAemG,EAAoBpE,EAAmBrJ,EAAiBC,EAAkBwF,EAAiBtK,GAC/I,OAAO,IAAI,EAAAuS,OAAOjW,KAAM+V,EAAKrG,EAAKG,EAAOmG,EAAWpE,EAAUrJ,EAAOC,EAAQwF,EAAQtK,IAEvF,YAAAwS,gBAAA,SAAgBlM,EAAmBtG,GACjC,OAAO,IAAI,EAAAyS,iBAAiBnW,KAAMgK,EAAQtG,IAE5C,YAAA0S,aAAA,SAAaV,EAAcnN,EAAiBC,EAAkBwF,EAAiBtK,GAC7E,OAAO,IAAI,EAAA2S,OAAOrW,KAAM0V,EAAMnN,EAAOC,EAAQwF,EAAQtK,IAEvD,YAAA4S,aAAA,SAAa1E,EAAmBrJ,EAAiBC,EAAkBwF,EAAiBtK,GAClF,OAAO,IAAI,EAAA6S,OAAOvW,KAAM4R,EAAUrJ,EAAOC,EAAQwF,EAAQtK,IAE3D,YAAA8S,aAAA,SAAaC,EAAmB7E,EAAmBrJ,EAAiBC,EAAkBwF,EAAiBtK,GACrG,OAAO,IAAI,EAAAgT,OAAO1W,KAAMyW,EAAS7E,EAAUrJ,EAAOC,EAAQwF,EAAQtK,IAEpE,YAAAiT,aAAA,SAAaC,EAAiBhF,EAAmBrJ,EAAiBC,EAAkBwF,EAAiBtK,GACnG,OAAO,IAAI,EAAAmT,OAAO7W,KAAM4W,EAAQhF,EAAUrJ,EAAOC,EAAQwF,EAAQtK,IAEnE,YAAAoT,cAAA,SAAc9I,EAAgBzL,EAAoFmB,GAChH,OAAO,IAAI,EAAAqT,QAAQ/W,KAAMgO,EAAQzL,EAAQmB,IAE3C,YAAAsT,YAAA,SAAYnH,EAAwB+B,EAAmBrJ,EAAiBC,EAAkBwF,EAAiBtK,GACzG,OAAO,IAAI,EAAAuT,MAAMjX,KAAM6P,EAAO+B,EAAUrJ,EAAOC,EAAQwF,EAAQtK,IAIjE,YAAA3D,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACTsB,KAAMrG,KAAKqG,KACX/C,SAAUtD,KAAKsD,SAASvD,YACxB0D,MAAOzD,KAAKyD,MACZ6D,MAAOtH,KAAKsH,MACZd,OAAQxG,KAAKwG,OAAOS,IAAI,SAAAmC,GAAY,OAAAA,EAASrJ,cAC7C8G,QAAS7G,KAAK6G,QAAQI,IAAI,SAAAmC,GAAY,OAAAA,EAASrJ,cAC/C2D,MAAO1D,KAAK0D,MACZ2D,cAAerH,KAAKqH,cACpBsF,SAAU3M,KAAK2M,SAAS5M,YACxB6J,OAAQ5J,KAAK4J,OACb5B,QAAShI,KAAKgI,QACd9E,YAAalD,KAAKkD,YAClBuL,GAAIzO,KAAKyO,GAAG1O,cAGT,EAAAG,YAAP,SAAmBQ,EAAYP,GAC7B,OAAO,IAAIsH,EAAK/G,EAAMP,EAAKkG,KAAM,EAAArC,QAAQ9D,YAAYC,EAAKmD,UAAWnD,EAAKsD,MAAOtD,EAAKqG,OAAQrG,EAAK0G,QAAS1G,EAAKuD,MAAOvD,EAAKkH,cAAelH,EAAKmH,MAAOnH,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,UAAWxM,EAAKsO,KAE5M,GAjbE,WACS/N,EACA2F,EACP/C,EACAG,EACA+C,EAA8BK,EACvBnD,EACA2D,EACPC,EACOvC,EACA4H,EACP8B,QALO,IAAA/K,MAAA,SACA,IAAA2D,MAAA,SACP,IAAAC,MAAA,SACO,IAAAvC,MAAa,EAAAO,cATtB,MAcE,cAAO,K,OAbA,EAAA5E,OACA,EAAA2F,OAIA,EAAA3C,QACA,EAAA2D,gBAEA,EAAAtC,KACA,EAAA4H,WA1DT,EAAA3E,SAAmB,EACnB,EAAAxB,OAAqB,GACrB,EAAAK,QAAsB,GACtB,EAAAyC,SAAuB,GACvB,EAAAJ,UAAwB,GAExB,EAAAmJ,YAA4B,GAG5B,EAAAZ,cAA8E,GAC9E,EAAAvO,YAA2B,CAAEmL,SAAU,EAAAC,SAASC,OAAQpL,UAAW,EAAAC,UAAUC,UAAW4P,IAAK,EAAAC,IAAIC,MACjG,EAAAjL,MAAe,KAoDb,EAAKiJ,OAAS1N,EACd,EAAKC,MAAQ,EAAH,KAAQ,EAAA6B,SAAS2R,oBAAuBxT,GAClD,EAAK6I,UAAYjJ,EACjB,EAAK8N,WAAW9J,GAChB,EAAKuM,aAAe,GACpB,EAAKJ,mBAAqB,GAC1B,EAAKjD,qBAAuB,GAC5B,EAAK5G,OAAS,EACd,EAAKnH,QAAU/B,EAAK8B,YAAYC,QAChC,EAAKI,WAAanC,EAAK8B,YAAYK,WACnC,EAAK8N,aAAejQ,EAAK8B,YAAYmO,aACrC,EAAKjE,YAAYC,IACjB,IAAKnG,QAAO9E,KAAI,QAAI8E,EAAOS,IAAI,SAAAsB,GAAS,WAAI,EAAAwJ,SAAS,EAAM,EAAAC,aAAaC,GAAI1J,EAAMjG,SAAUiG,EAAMlC,KAAMkC,EAAM7E,OAAsB,EAAD,GAAM2D,GAAiB,KAAMkB,EAAMxD,IAAgB,KAAMwD,EAAMoE,SAAW,EAAA/N,MAAMsB,YAAYqI,EAAMoE,UAAY,UACjP,IAAK9F,SAAQnF,KAAI,QAAImF,EAAQI,IAAI,SAAAuB,GAAU,WAAI,EAAAuJ,SAAS,EAAM,EAAAC,aAAamF,IAAK3O,EAAOlG,SAAUkG,EAAOnC,KAAMmC,EAAO9E,OAAuB,EAAD,GAAM2D,GAAiB,KAAMmB,EAAOzD,IAAiB,KAAMyD,EAAOmE,SAAW,EAAA/N,MAAMsB,YAAYsI,EAAOmE,UAAY,SAC7P,EAAK8B,GAAKA,EAAMA,aAAc,EAAAqF,UAAYrF,EAAK,EAAAqF,UAAU5T,YAAY,EAAMuO,GAAO,IAAI,EAAAqF,UAAU,EAAMrQ,GAEtG,EAAKyO,cAAc,WAAM,SAAKa,mBAAmB,SAACT,EAAwBhP,GACxE,EAAKb,QAAQsM,UAAY,EAAKrL,MAAM0T,oBACpC,EAAK3U,QAAQwM,SAAS3L,EAASC,EAAGD,EAASE,EAAG,EAAKE,MAAMgN,eAAgB,EAAKhN,MAAMgN,iBACnF,EAAA6B,MAAMC,MAET,EAAKzB,SACL,EAAKtC,GAAGuC,SAER,EAAKtQ,KAAKiF,GAAG,YAAa,WAAM,SAAK6G,sB,EAjG5B,EAAA/E,Q,gcClDb,IASA,EATA,SACA,SACA,SACA,SAEA,QACA,SAGA,KAAiC,EAAAA,KAAA,OAmD/B,YAAAoD,IAAA,WACM7K,KAAKU,KAAKC,QAAU,EAAAC,UAAUyH,UAElCrI,KAAKS,KAAK,UAAWT,MACrBA,KAAKmG,QAAQ9E,UAEf,YAAAtB,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACTsB,KAAMrG,KAAKqG,KACX/C,SAAUtD,KAAKsD,SAASvD,YACxB0D,MAAOzD,KAAKyD,MACZ6D,MAAOtH,KAAKsH,MACZd,OAAQxG,KAAKwG,OAAOS,IAAI,SAAAmC,GAAY,OAAAA,EAASrJ,cAC7C8G,QAAS7G,KAAK6G,QAAQI,IAAI,SAAAmC,GAAY,OAAAA,EAASrJ,cAC/C2D,MAAO1D,KAAK0D,MACZ2D,cAAerH,KAAKqH,cACpBsF,SAAU3M,KAAK2M,SAAS5M,YACxB6J,OAAQ5J,KAAK4J,OACb5B,QAAShI,KAAKgI,QACd9E,YAAalD,KAAKkD,YAClBuL,GAAIzO,KAAKyO,GAAG1O,YACZoG,QAASnG,KAAKmG,QAAQpG,cAGnB,EAAAG,YAAP,SAAmBQ,EAAYP,GAC7B,IAAIgG,EAAU,EAAAsC,KAAKvI,YAAYQ,EAAK8B,YAAarC,EAAKgG,SACtD,OAAO,IAAIa,EAAYtG,EAAMP,EAAKkG,KAAM,EAAArC,QAAQ9D,YAAYC,EAAKmD,UAAWnD,EAAKsD,MAAOtD,EAAKuD,MAAOvD,EAAKkH,cAAelH,EAAKmH,MAAOnH,EAAKqG,OAAQrG,EAAK0G,QAASV,EAAShG,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAE5M,GA9EE,WACEjM,EACA2F,EACA/C,EACAG,EACAC,EAAuB2D,EACvBC,EACAd,EAAeK,EACRV,EACPpB,EACA4H,QALA,IAAAjJ,MAAA,SAAuB,IAAA2D,MAAA,SACvB,IAAAC,MAAA,IANF,MAaE,YAAM5G,EAAM2F,EAAM/C,EAAUG,EAAO+C,GAAkB,GAAIK,GAAoB,GAAInD,EAAO2D,EAAeC,EAAOvC,EAAI4H,IAAS,K,OALpH,EAAAxG,UAOP,EAAKA,QAAQR,GAAG,YAAa,SAACQ,EAASkR,GACrC,IAAIC,EAAgB,IAAI,EAAAvF,SAAS,EAAM,EAAAC,aAAaC,GAAIoF,EAAOxQ,QAAQ,GAAGvE,SAAU+U,EAAOxQ,QAAQ,GAAGR,MACtGgR,EAAOC,cAAgBA,EACvB,EAAKxF,YAAYwF,KAEnB,EAAKnR,QAAQR,GAAG,aAAc,SAACQ,EAASkR,GACtC,IAAIC,EAAgB,IAAI,EAAAvF,SAAS,EAAM,EAAAC,aAAamF,IAAKE,EAAO7Q,OAAO,GAAGlE,SAAU+U,EAAO7Q,OAAO,GAAGH,MACrGgR,EAAOC,cAAgBA,EACvB,EAAKxF,YAAYwF,KAGnB,EAAKnR,QAAQK,OAAOuB,QAAQ,SAACb,EAAW8E,GAAU,OAAA9E,EAAUoQ,cAAgB,EAAK9Q,OAAOwF,KACxF,EAAK7F,QAAQU,QAAQkB,QAAQ,SAACZ,EAAY6E,GAAU,OAAA7E,EAAWmQ,cAAgB,EAAKzQ,QAAQmF,KAE5F,EAAKkG,cAAc,WACjB,EAAKxR,KAAK8B,YAAYD,OAAO,EAAK4D,UACjC,SAACmM,EAAwBhP,GAC1B,EAAKb,QAAQkC,YAAc,EAAKjB,MAAM6T,kBAEtC,EAAK9U,QAAQ+B,YACb,EAAK/B,QAAQgC,OAAOnB,EAASC,EAAGD,EAASE,EAAI,EAAKE,MAAMgN,eAAiB,GACzE,EAAKjO,QAAQ+U,OAAOlU,EAASC,EAAGD,EAASE,EAAI,EAAKE,MAAMgN,gBACxD,EAAKjO,QAAQ+U,OAAOlU,EAASC,EAAI,EAAKG,MAAMgN,eAAgBpN,EAASE,GACrE,EAAKf,QAAQ+U,OAAOlU,EAASC,EAAI,EAAKG,MAAMgN,eAAgBpN,EAASE,EAAI,EAAKE,MAAMgN,eAAiB,GACrG,EAAKjO,QAAQgC,OAAOnB,EAASC,EAAI,EAAKG,MAAMgN,eAAgBpN,EAASE,GACrE,EAAKf,QAAQ+U,OAAOlU,EAASC,EAAI,EAAKG,MAAMgN,eAAiB,EAAGpN,EAASE,GACzE,EAAKf,QAAQgC,OAAOnB,EAASC,EAAGD,EAASE,EAAI,EAAKE,MAAMgN,gBACxD,EAAKjO,QAAQ+U,OAAOlU,EAASC,EAAI,EAAKG,MAAMgN,eAAiB,EAAGpN,EAASE,EAAI,EAAKE,MAAMgN,gBACxF,EAAKjO,QAAQgV,YAEb,EAAKhV,QAAQoC,UACZ,EAAA0N,MAAMmF,O,EAhDA,EAAA1Q,e,iqBCTb,IASA,EATA,SACA,SACA,SACA,SACA,SACA,SAIA,KAA8B,EAAAvB,MAAA,OAgC5B,YAAAiH,YAAA,SAAYC,GACV,IAAKA,EAEH,IADAA,EAAW,EAAA/N,MAAMD,SACVqB,KAAKsB,KAAKmS,mBAAmB9G,EAAStM,aAAeL,KAAKsB,KAAKuS,aAAalH,EAAStM,aAAasM,EAAW,EAAA/N,MAAMD,SAE5HqB,KAAK2M,SAAWA,EAChB3M,KAAKsB,KAAKmS,mBAAmBzT,KAAK2M,SAAStM,YAAcL,MAE3D,YAAAuC,OAAA,WACEvC,KAAKsB,KAAKmB,QAAQC,OAEd1C,KAAK2X,QACP3X,KAAKsB,KAAKmB,QAAQ+B,YAClBxE,KAAKsB,KAAKmB,QAAQmV,IAAI5X,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAuB,EAApBxD,KAAK0D,MAAME,OAAY,EAAG,EAAI9E,KAAK+Y,IAC3F7X,KAAKsB,KAAKmB,QAAQsM,UAAY/O,KAAK0D,MAAMoU,WACzC9X,KAAKsB,KAAKmB,QAAQsV,QAGE,UAAlB/X,KAAKsC,UACPtC,KAAKsB,KAAKmB,QAAQ+B,YAClBxE,KAAKsB,KAAKmB,QAAQgC,OAAOzE,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAwB,IAApBxD,KAAK0D,MAAME,QACvE5D,KAAKsB,KAAKmB,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAwB,IAApBvD,KAAK0D,MAAME,OAAc5D,KAAKsD,SAASE,GAClFxD,KAAKsB,KAAKmB,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAwB,IAApBxD,KAAK0D,MAAME,QACvE5D,KAAKsB,KAAKmB,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAwB,IAApBvD,KAAK0D,MAAME,OAAc5D,KAAKsD,SAASE,GAClFxD,KAAKsB,KAAKmB,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAwB,IAApBxD,KAAK0D,MAAME,QACvE5D,KAAKsB,KAAKmB,QAAQgV,cAElBzX,KAAKsB,KAAKmB,QAAQ+B,YAClBxE,KAAKsB,KAAKmB,QAAQmV,IAAI5X,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAK0D,MAAME,OAAQ,EAAG,EAAI9E,KAAK+Y,KAEzF7X,KAAKsB,KAAKmB,QAAQsM,UAAY/O,KAAK2X,MAAQ,UAAa3X,KAAKsB,KAAKZ,KAAK4H,mBAAmBtI,KAAKsC,WAAa,OAC5GtC,KAAKsB,KAAKmB,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YAC3C9O,KAAKsB,KAAKmB,QAAQuV,WAAahY,KAAK0D,MAAMsU,WAC1ChY,KAAKsB,KAAKmB,QAAQwV,YAAcjY,KAAK0D,MAAMuU,YAC3CjY,KAAKsB,KAAKmB,QAAQsV,OAClB/X,KAAKsB,KAAKmB,QAAQoC,SAElB7E,KAAKsB,KAAKmB,QAAQG,UAElB5C,KAAKkY,eAEP,YAAAA,YAAA,WACElY,KAAKsB,KAAKqP,aAAajO,OAEvB1C,KAAKsB,KAAKqP,aAAanM,YACvBxE,KAAKsB,KAAKqP,aAAaiH,IAAI5X,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAK0D,MAAME,OAAS5D,KAAKsB,KAAKoC,MAAMC,oBAAqB,EAAG,EAAI7E,KAAK+Y,IAClI7X,KAAKsB,KAAKqP,aAAa5B,UAAY/O,KAAK2M,SAASrM,cACjDN,KAAKsB,KAAKqP,aAAaoH,OAEvB/X,KAAKsB,KAAKqP,aAAa/N,WAGzB,YAAA8Q,QAAA,SAAQpE,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,GAEzCvP,KAAK2X,OAAQ,EACb3X,KAAKsB,KAAKZ,KAAK8B,YAAY2V,OAAS,WAEtC,YAAAtW,OAAA,SAAOyN,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,GAExCvP,KAAK2X,OAAQ,EACb3X,KAAKsB,KAAKZ,KAAK8B,YAAY2V,OAAS,SAEtC,YAAAvD,OAAA,SAAOtF,EAAyBC,GAG9B,IAiBMpH,EAnBNnI,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,GAEX,EAAzBvP,KAAKwB,WAAW9B,OACdM,KAAKoC,OAAS,EAAA4P,aAAaC,IAC7BjS,KAAKwB,WAAW,GAAGN,QAAQU,gBAAkB,KAC7C5B,KAAKwB,WAAW,GAAGhB,IAAM,KACzBR,KAAKwB,WAAW,GAAGG,YAAc4N,EACjCvP,KAAKsB,KAAKZ,KAAK8B,YAAYqF,kBAAoB7H,KAAKwB,WAAW,GAC/DxB,KAAKwB,WAAW,GAAGH,MAAMZ,KAAK,aAAcT,KAAKwB,WAAW,GAAGH,MAAOrB,KAAKwB,WAAW,IACtFxB,KAAKS,KAAK,aAAcT,KAAMA,KAAKwB,WAAW,IAC9CxB,KAAKwB,WAAW4W,OAEZpY,KAAKsB,KAAKZ,KAAK8B,YAAYqF,oBAC3BM,EAAY,IAAI,EAAA/C,UAAUpF,KAAKsB,KAAKZ,KAAMV,KAAM,KAAMuP,EAAc,IACxEvP,KAAKsB,KAAKZ,KAAKc,WAAW2G,EAAUpD,IAAMoD,EAC1CnI,KAAKsB,KAAKZ,KAAK8B,YAAYqF,kBAAoBM,GAG7CnI,KAAKsB,KAAKZ,KAAK8B,YAAYqF,oBAC3BM,EAAY,IAAI,EAAA/C,UAAUpF,KAAKsB,KAAKZ,KAAMV,KAAKoC,OAAS,EAAA4P,aAAaC,GAAK,KAAOjS,KAAMA,KAAKoC,OAAS,EAAA4P,aAAaC,GAAKjS,KAAO,KAAMuP,EAAc,IACtJvP,KAAKsB,KAAKZ,KAAKc,WAAW2G,EAAUpD,IAAMoD,EAC1CnI,KAAKsB,KAAKZ,KAAK8B,YAAYqF,kBAAoBM,IAGnD,YAAAgN,KAAA,SAAK7F,EAAyBC,GAC5BvP,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAF,QAAA,SAAQC,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAAwF,OAAA,SAAOzF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACExV,KAAKS,KAAK,aAAcT,OAG1B,YAAAqY,QAAA,SAAQlY,GACFH,KAAKoC,OAAS,EAAA4P,aAAaC,IAAMjS,KAAKsY,eAAetY,KAAKsY,cAAcnY,IAE9E,YAAAoY,KAAA,SAAKpY,GACCH,KAAKoC,OAAS,EAAA4P,aAAamF,KAAkC,IAA3BnX,KAAKwB,WAAW9B,QACpDM,KAAKwB,WAAWuG,QAAQ,SAAAI,GACtBA,EAAU3H,KAAO2H,EAAU3H,IAAI6X,QAAQlY,MAK7C,YAAAJ,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXE,SAAUtC,KAAKsC,SACf+D,KAAMrG,KAAKqG,KACX3C,MAAO1D,KAAK0D,MACZiJ,SAAU3M,KAAK2M,SAAS5M,cAGrB,EAAAG,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAI4R,EAASzQ,EAAMnB,EAAKiC,KAAMjC,EAAKmC,SAAUnC,EAAKkG,KAAMlG,EAAKuD,MAAO,KAAMvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAErH,GA5JE,WACSrL,EACAc,EACAE,EACA+D,EACA3C,EACA4U,EACAvT,EACA4H,QAHA,IAAAjJ,MAAA,IALT,MAUE,cAAO,K,OATA,EAAApC,OACA,EAAAc,OACA,EAAAE,WACA,EAAA+D,OACA,EAAA3C,QACA,EAAA4U,gBACA,EAAAvT,KACA,EAAA4H,WAGP,EAAKjJ,MAAQ,EAAH,KAAQ,EAAA6B,SAASiT,wBAA2B9U,GACtD,EAAKqB,GAAKA,GAAU,EAAAO,aACpB,EAAKoH,YAAYC,GACjB,EAAKnL,WAAa,GAClB,EAAK8B,SAAW,EAAAU,QAAQyU,OACxB,EAAKd,OAAQ,EAET,EAAKvV,OAAS,EAAA4P,aAAaC,GAAK,EAAsB,QAAI,WAC5D,OAA6B,EAAzB,EAAKzQ,WAAW9B,OAAmB,EAAK8B,WAAW,GAAGrB,KACnD,MAEH,EAAsB,QAAI,SAACA,GAC/B,EAAKqB,WAAWuG,QAAQ,SAAAI,GAAa,OAAAA,EAAUhI,KAAOA,K,EA5B/C,EAAA4R,Y,+bCRb,IAOA,EAPA,SACA,SAGA,QAGA,KAAgC,EAAAtK,KAAA,OAE9B,sBAAI,4BAAa,C,IAAjB,WAAgC,OAAOzH,KAAK0Y,gB,IAC5C,SAAkBtP,GAAlB,WACEpJ,KAAK0Y,eAAiBtP,EACtBpJ,KAAK0Y,eAAe/S,GAAG,OAAQ,SAAAxF,GAC5B,EAAK0G,QAAQ,GAAoB,QAAE1G,M,gCA+BxC,YAAAJ,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACTsB,KAAMrG,KAAKqG,KACX/C,SAAUtD,KAAKsD,SAASvD,YACxB0D,MAAOzD,KAAKyD,MACZ6D,MAAOtH,KAAKsH,MACZd,OAAQxG,KAAKwG,OAAOS,IAAI,SAAAmC,GAAY,OAAAA,EAASrJ,cAC7C8G,QAAS7G,KAAK6G,QAAQI,IAAI,SAAAmC,GAAY,OAAAA,EAASrJ,cAC/C2D,MAAO1D,KAAK0D,MACZ2D,cAAerH,KAAKqH,cACpBsF,SAAU3M,KAAK2M,SAAS5M,YACxB6J,OAAQ5J,KAAK4J,OACb5B,QAAShI,KAAKgI,QACd9E,YAAalD,KAAKkD,YAClBuL,GAAIzO,KAAKyO,GAAG1O,YACZ4Y,gBAAiB3Y,KAAKsX,cAAcvS,KAGjC,EAAA7E,YAAP,SAAmBQ,EAAYP,GAC7B,OAAO,IAAIoG,EAAW7F,EAAMP,EAAKkG,KAAM,EAAArC,QAAQ9D,YAAYC,EAAKmD,UAAWnD,EAAKsD,MAAOtD,EAAKqG,OAAQrG,EAAK0G,QAAS1G,EAAKuD,MAAOvD,EAAKkH,cAAelH,EAAKmH,MAAOnH,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAElM,GAjDE,WACEjM,EACAkY,EACAtV,EACAG,EACA+C,EAAeK,EACfnD,EAAkB2D,EAClBC,EACAvC,EACA4H,GATF,MAYE,YAAMjM,EAAMkY,EAAUtV,EAAUG,EAAO+C,EAAQK,EAASnD,EAAO2D,EAAeC,EAAOvC,EAAI4H,IAAS,K,OAEzE,EAArB,EAAKnG,OAAO9G,OACd,EAAK8G,OAAO,GAAGb,GAAG,OAAQ,SAAAxF,GACvB,EAAKmX,cAA+B,QAAEnX,KAGzC,EAAK0G,QAAQ,GAAGlB,GAAG,UAAW,SAACyD,EAAUjB,GACI,EAAvC,EAAKmP,cAAc9V,WAAW9B,SAChCyI,EAAUhI,KAAO,EAAKmX,cAAc9V,WAAW,GAAGrB,Q,EA/B/C,EAAAoG,c,kwBCRb,IAMA,EANA,SACA,SACA,SAEA,SAEA,KAAiC,EAAAd,MAAA,OAU/B,sBAAI,qBAAM,C,IAAV,WAAuB,OAAOzF,KAAK6Y,cAAcnV,MAAMyU,Q,IACvD,SAAWA,GAAkBnY,KAAK6Y,cAAcnV,MAAMyU,OAASA,G,gCAoB/D,sBAAI,oBAAK,C,IAAT,WAAsB,OAAOnY,KAAK6N,UAAUpP,G,gCAkB5C,YAAAqa,wBAAA,sBACMC,GAAW,EACf1L,SAAS2L,iBAAiB,SAAU,WAC7BD,IACHE,OAAOC,sBAAsB,WAC3B,EAAKC,2BACLJ,GAAW,IAEbA,GAAW,KAIQ,IAAIK,eAAe,WACxC,EAAKD,6BAEQE,QAAQrZ,KAAK6Y,gBAE9B,YAAAS,cAAA,SAAcC,EAA4C9V,EAAgBuK,GACnEuL,EAKMA,aAAiBC,gBAC1BxZ,KAAK6Y,cAAgBxL,SAASC,cAAc,UACxC7J,GAASuK,GACXhO,KAAK6Y,cAAcpV,MAAQA,EAC3BzD,KAAK6Y,cAAc7K,OAASA,IAE5BhO,KAAK6Y,cAAcpV,MAAQ8V,EAAME,YACjCzZ,KAAK6Y,cAAc7K,OAASuL,EAAMG,cAEpCH,EAAM9L,YAAYzN,KAAK6Y,iBAEvB7Y,KAAK6Y,cAAgBU,EACjB9V,GAASuK,IACXhO,KAAK6Y,cAAcpV,MAAQA,EAC3BzD,KAAK6Y,cAAc7K,OAASA,KAlB9BhO,KAAK6Y,cAAgBxL,SAASC,cAAc,UAC5CtN,KAAK6Y,cAAcpV,MAAQ4J,SAASG,KAAKiM,YACzCzZ,KAAK6Y,cAAc7K,OAASX,SAASG,KAAKkM,aAC1CrM,SAASG,KAAKC,YAAYzN,KAAK6Y,gBAkBjC7Y,KAAKyC,QAAUzC,KAAK6Y,cAAcc,WAAW,OAE/C,YAAAC,eAAA,WACiC,oBAApBC,iBAAgF,oBAAtCC,mCACnD9Z,KAAK+Z,iBAAmB,IAAIF,gBAAgB7Z,KAAK+N,iBAAiBtK,MAAOzD,KAAK+N,iBAAiBC,QAC/FhO,KAAKga,mBAAqB,IAAIH,gBAAgB7Z,KAAK+N,iBAAiBtK,MAAOzD,KAAK+N,iBAAiBC,QACjGhO,KAAKia,sBAAwB,IAAIJ,gBAAgB7Z,KAAK+N,iBAAiBtK,MAAOzD,KAAK+N,iBAAiBC,UAEpGhO,KAAK+Z,iBAAmB1M,SAASC,cAAc,UAC/CtN,KAAKga,mBAAqB3M,SAASC,cAAc,UACjDtN,KAAKia,sBAAwB5M,SAASC,cAAc,WAEtDtN,KAAK6C,WAAa7C,KAAK+Z,iBAAiBJ,WAAW,MACnD3Z,KAAK2Q,aAAe3Q,KAAKga,mBAAmBL,WAAW,MACvD3Z,KAAK6O,gBAAkB7O,KAAKia,sBAAsBN,WAAW,OAE/D,YAAAO,aAAA,WACEla,KAAK6Y,cAAcnV,MAAMyW,YAAc,OAEvC,IAAIC,EAAa/M,SAASC,cAAc,SACxC8M,EAAWC,UAAY,iNACvBhN,SAASiN,qBAAqB,QAAQ,GAAG7M,YAAY2M,IAEvD,YAAAjB,yBAAA,WACE,IAAIoB,EAAeva,KAAK6Y,cAAc2B,wBACtCxa,KAAK+N,iBAAmB,CACtB0M,IAAK3b,KAAK4b,MAAMH,EAAaE,IAAMxB,OAAO0B,SAC1CC,KAAM9b,KAAK4b,MAAMH,EAAaK,KAAO3B,OAAO4B,SAC5CpX,MAAO3E,KAAK4b,MAAMH,EAAa9W,OAC/BuK,OAAQlP,KAAK4b,MAAMH,EAAavM,SAElChO,KAAK+Z,iBAAiBtW,MAAQzD,KAAK+N,iBAAiBtK,MACpDzD,KAAK+Z,iBAAiB/L,OAAShO,KAAK+N,iBAAiBC,OACrDhO,KAAKga,mBAAmBvW,MAAQzD,KAAK+N,iBAAiBtK,MACtDzD,KAAKga,mBAAmBhM,OAAShO,KAAK+N,iBAAiBC,OACvDhO,KAAKia,sBAAsBxW,MAAQzD,KAAK+N,iBAAiBtK,MACzDzD,KAAKia,sBAAsBjM,OAAShO,KAAK+N,iBAAiBC,QAE5D,YAAA8M,SAAA,WACEC,yBAAyBC,UAAUC,UAAY,SAAU1X,EAAWC,EAAWC,EAAeuK,EAAgBpK,GAC5G5D,KAAKwE,YACLxE,KAAKyE,OAAOlB,EAAIK,EAAQJ,GACxBxD,KAAKwX,OAAOjU,EAAIE,EAAQG,EAAQJ,GAChCxD,KAAK0E,iBAAiBnB,EAAIE,EAAOD,EAAGD,EAAIE,EAAOD,EAAII,GACnD5D,KAAKwX,OAAOjU,EAAIE,EAAOD,EAAIwK,EAASpK,GACpC5D,KAAK0E,iBAAiBnB,EAAIE,EAAOD,EAAIwK,EAAQzK,EAAIE,EAAQG,EAAQJ,EAAIwK,GACrEhO,KAAKwX,OAAOjU,EAAIK,EAAQJ,EAAIwK,GAC5BhO,KAAK0E,iBAAiBnB,EAAGC,EAAIwK,EAAQzK,EAAGC,EAAIwK,EAASpK,GACrD5D,KAAKwX,OAAOjU,EAAGC,EAAII,GACnB5D,KAAK0E,iBAAiBnB,EAAGC,EAAGD,EAAIK,EAAQJ,GACxCxD,KAAKyX,aAEPsD,yBAAyBC,UAAUvG,gBAAkB,SAAUlR,EAAWC,EAAWC,EAAeuK,EAAgBpK,QAC5F,IAAXA,IAAwBA,EAAS,GAC5C5D,KAAKib,UAAU1X,EAAGC,EAAGC,EAAOuK,EAAQpK,GACpC5D,KAAK6E,UAEPkW,yBAAyBC,UAAUE,cAAgB,SAAU3X,EAAWC,EAAWC,EAAeuK,EAAgBpK,QAC1F,IAAXA,IAAwBA,EAAS,GAC5C5D,KAAKib,UAAU1X,EAAGC,EAAGC,EAAOuK,EAAQpK,GACpC5D,KAAK+X,SAGT,YAAAoD,WAAA,SAAW1E,GAET,YAFS,IAAAA,MAAA,CAAyBpQ,KAAM,WAAYhE,MAAO,GAAIiG,mBAAoB,KACnFtC,OAAOuF,KAAK,EAAAhG,SAAS6V,cAAcrT,QAAQ,SAAAmE,GAAO,OAAAuK,EAAQpU,MAAM6J,GAAO,EAAA3G,SAAS6V,aAAalP,KACtF,IAAI,EAAAzD,KAAKzI,KAAMyW,EAAQpQ,KAAMoQ,EAAQpU,MAAOoU,EAAQnO,qBAG7D,YAAA+S,eAAA,eACMC,EADN,OAEMC,EAA2B,EAAAvX,QAAQyU,OACnC+C,GAA6B,EAEjCvC,OAAOwC,UAAY,SAACC,GACjB,EAAKC,OAAOD,EAAGxP,OAAS,EAAKyP,OAAOD,EAAGxP,MAAO,IAEjD+M,OAAO2C,QAAU,SAACF,GAChB,EAAKC,OAAOD,EAAGxP,MAAO,GAGxBlM,KAAK6Y,cAAcgD,cAAgB,SAACH,GAC7B,EAAKI,WAEV,EAAKC,WAAWL,EAAGM,UAAW,EAAKC,oBAAoBP,IAC1B,IAAzB,EAAKQ,SAASxc,QAChB6b,EAAkB,EAAKW,SAAS,GAAG5M,eACnC,EAAK6M,YAAc,EAAKC,WAAW,EAAKF,SAAS,GAAG5M,gBAChD,EAAK6M,aACP,EAAKA,YAAYvS,OAASyS,IACtB,EAAKV,OAAgB,QACvB,EAAKQ,YAAYnU,SAAW,EAAKmU,YAAYnU,SAE7C,EAAK8T,SAAShU,iBACd,EAAKqU,YAAYnU,SAAU,GAE7B,EAAKmU,YAAYvH,OAAO,EAAKsH,SAAS,GAAG5M,eAAe8F,QAAS,EAAK8G,SAAS,GAAG3M,aAAa6F,SAC/FkG,EAAY,EAAKa,YAAY7Y,SAASqL,SAAS,EAAKuN,SAAS,GAAG3M,eAE3D,EAAKoM,OAAgB,SAMjB,EAAKA,OAAgB,SAAK,EAAKW,cAA2B,eACjE,EAAKC,gBAAkB,EAAKL,SAAS,GAAG3M,aAAa6F,QACrD,EAAKoH,UAAY,IAAI,EAAA5T,MAAM,EAAKkT,SAAU,EAAKS,gBAAgBnH,QAAS,EAAG,EAAG,eAP9E,EAAK0G,SAAShU,iBAEd,EAAK2U,aAAe,EAAKC,YAAY,EAAKR,SAAS,GAAG5M,gBACtD,EAAKmN,eAAiBnB,EAAY,EAAKmB,aAAanZ,SAASqL,SAAS,EAAKuN,SAAS,GAAG3M,kBAQ3F,EAAK4M,YAAc,KACnB,EAAKM,aAAe,KACpB,EAAKX,SAAShU,iBACV,EAAKD,mBACP,EAAK8U,wBAIX3c,KAAK6Y,cAAc+D,YAAc,SAAClB,GAChC,IAMIpM,EACAC,EAOAsN,EAdC,EAAKf,WAEV,EAAKgB,cAAc,EAAKZ,SAAUR,GAE9B,EAAKQ,SAASxc,OAAS,IAAG8b,GAAqB,GAG/CjM,GADAD,EAAiB,EAAK2M,oBAAoBP,IACZ7N,UAAU,EAAKkP,kBAE7C,EAAKZ,aAAa,EAAKa,eAAe1N,GAE1C,EAAK6M,YAAc,KACnB,EAAKM,aAAe,MAEhBI,EAAU,EAAKT,WAAW9M,KACnBuN,EAAQ1H,KAAK7F,EAAe8F,QAAS7F,EAAa6F,SAEzD,EAAKoH,YACHS,EAAW,EAAKT,UACpB,EAAKA,UAAY,KACI,GAAjBS,EAASxZ,OAAgC,GAAlBwZ,EAASjP,SAClC,EAAK8N,SAAS7T,OAAOvG,KAAKub,GAC1BA,EAAS/O,sBAGT,EAAKrG,mBAAmB,EAAKqV,iBAAiBL,EAASvN,EAAgBC,KAE7EvP,KAAK6Y,cAAcsE,aAAe,SAACzB,GACjC,IAaMuB,EAWA3N,EAxBD,EAAKwM,WAEV,EAAKgB,cAAc,EAAKZ,SAAUR,GACL,IAAzB,EAAKQ,SAASxc,SACZ,EAAKyc,cACH7M,EAAiB,EAAK2M,oBAAoBP,GAC9C,EAAKsB,eAAe1N,IAEtB,EAAK6M,YAAc,KACnB,EAAKM,aAAe,MAGlB,EAAKD,YACHS,EAAW,EAAKT,UACpB,EAAKA,UAAY,KACI,GAAjBS,EAASxZ,OAAgC,GAAlBwZ,EAASjP,SAClC,EAAK8N,SAAS7T,OAAOvG,KAAKub,GAC1BA,EAAS/O,sBAIT,EAAKrG,mBAAmB,EAAK8U,qBAE7B,EAAKS,cAEH7N,GADAD,EAAiB,EAAK2M,oBAAoBP,IACZ7N,UAAU,EAAKkP,kBACjD,EAAKK,YAAYvb,OAAOyN,EAAgBC,GACxC,EAAK6N,YAAc,QAGvBpd,KAAK6Y,cAAcwE,cAAgB,SAAC3B,GAClC,IAEIpM,EACAC,EA6BMpB,EAYEmP,EASJC,EArDH,EAAKzB,WAGNvM,GADAD,EAAiB,EAAK2M,oBAAoBP,IACZ7N,UAAU,EAAKkP,kBAEjD,EAAKS,cAAc9B,EAAGM,UAAW1M,EAAgBC,GAEpB,IAAzB,EAAK2M,SAASxc,SACZ+d,EAAoB,EAAAzZ,QAAQC,SAAS,EAAKiY,SAAS,GAAG5M,eAAgB,EAAK4M,SAAS,GAAG5M,gBACnE,EAApBkM,GACEiC,IAAsBjC,GACxB,EAAKkC,WAA+BlC,EAApBiC,EAAuC,EAAAzZ,QAAQ2Z,SAAS,EAAKzB,SAAS,GAAG5M,eAAgB,EAAK4M,SAAS,GAAG5M,gBAAiB,EAAKsO,iBAGpJpC,EAAoBiC,GAGlB,EAAKjB,YACHjN,EAAahM,EAAI,EAAKgZ,gBAAgBhZ,IAAG,EAAKiZ,UAAUjQ,UAAUhJ,EAAIgM,EAAahM,GACvF,EAAKiZ,UAAU/Y,MAAQ3E,KAAK+e,IAAI,EAAKtB,gBAAgBhZ,EAAIgM,EAAahM,GAElEgM,EAAa/L,EAAI,EAAK+Y,gBAAgB/Y,IAAG,EAAKgZ,UAAUjQ,UAAU/I,EAAI+L,EAAa/L,GACvF,EAAKgZ,UAAUxO,OAASlP,KAAK+e,IAAI,EAAKtB,gBAAgB/Y,EAAI+L,EAAa/L,IAGrE,EAAK2Y,aACP,EAAKA,YAAY7G,OAAOhG,EAAe8F,QAAS7F,EAAa6F,SACvD,EAAK+G,YAAYrH,eAAkB,EAAKqH,YAAYrH,cAAcS,WAAe,EAAK4G,YAAYva,iBAAoB,EAAKiG,oBAC/H,EAAKsU,YAAY7Y,SAAWiM,EAAa7I,IAAI4U,IAEzCwC,EAAW,EAAKpB,YAAYpN,KAChBwO,IAAa,EAAK3B,YAAYjU,QACxCiG,EAAe2P,EAASxa,SAASuK,UAAU,EAAKA,WAChDW,EAAc,EAAK2N,YAAY7Y,SAASuK,UAAU,EAAKA,WAExC,EAAAC,WAAWK,EAAa5K,EAAG4K,EAAa3K,EACzD2K,EAAa5K,EAAIua,EAASra,MAAQ,EAAKwK,MACvCE,EAAa3K,EAAIsa,EAAS9P,OAAS,EAAKC,MACxCO,EAAYjL,EAAGiL,EAAYhL,EAC3BgL,EAAYjL,EAAI,EAAK4Y,YAAY1Y,MAAQ,EAAKwK,MAC9CO,EAAYhL,EAAI,EAAK2Y,YAAY1N,GAAGT,OAAS,EAAKC,SAG/B,EAAAK,SAASC,SACxB+O,EAAYQ,EAAS5X,MAAM6X,UAAU,SAAAzc,GAAQ,OAAAA,EAAKyD,KAAO,EAAKoX,YAAYpX,KAC9E+Y,EAASpP,WAAW4O,GAAa,EAAKnB,YAAY7Y,SAASqL,SAASmP,EAASxa,cAK/E,EAAKmZ,aACP,EAAKA,aAAanZ,SAAWiM,EAAa7I,IAAI4U,GACZ,IAAzB,EAAKY,SAASxc,QAAiB,EAAKic,OAAgB,SAAM,EAAKW,cAA2B,cAC/FiB,EAAQjO,EAAeX,SAAS4M,GAAiByC,gBAAgB,EAAI,EAAK/P,OAC9EsN,EAAkBjM,EAClB,EAAK2O,gBAAgB,KAAM,KAAMV,IAGjC,EAAK1V,oBAAmB,EAAKA,kBAAkBlG,YAAc4N,GAE1C,UAAnBmM,EAAGwC,aAA4B,EAAK/B,eAClCU,EAAU,EAAKT,WAAW9M,MACd,EAAK8N,aACnB,EAAKA,aAAe,EAAKA,YAAYvb,OAAOyN,EAAgBC,GAC5DsN,GAAWA,EAAQnJ,QAAQpE,EAAgBC,IAE3CsN,IAAa,EAAKV,aAAgBU,EAAQ9H,OAAOzF,EAAgBC,GAEnE,EAAK6N,YAAcP,KAGvB7c,KAAK6Y,cAAcsF,QAAU,SAACzC,GAC5B,IAEIpM,EACAC,EAHC,EAAKuM,WAGNvM,GADAD,EAAiB,EAAK2M,oBAAoBP,IACZ7N,UAAU,EAAKkP,mBAC7CF,EAAU,EAAKT,WAAW9M,KACnBuN,EAAQxN,QAAQC,EAAe8F,QAAS7F,EAAa6F,SAE3DyH,IACCiB,EAAW,EAAKpB,YAAYpN,KACpBwO,EAASzO,QAAQC,EAAe8F,QAAS7F,EAAa6F,WAGtEpV,KAAK6Y,cAAcuF,cAAgB,SAAC1C,GAC7B,EAAKI,WAEVJ,EAAG2C,iBAEC/O,EAAiB,EAAK2M,oBAAoBP,IAC1CmB,EAAU,EAAKT,WAAW9M,KACnBuN,EAAQrH,gBACd,EAAKmG,OAAgB,SAAG,EAAKG,SAAShU,iBAC3C+U,IAAYA,EAAQ7U,SAAU,KAEhChI,KAAK6Y,cAAcyF,QAAU,SAAC5C,GACvB,EAAKI,UAEV,EAAK4B,WAAWhC,EAAG6C,OAAS,EAAG,EAAKtC,oBAAoBP,GAAK,EAAK8C,mBAGtE,YAAAC,gBAAA,sBACEze,KAAK0e,aAAaC,UAAY,qBAC9B3e,KAAK0e,aAAahb,MAAMkb,WAAa,SACrC5e,KAAK0e,aAAahb,MAAMmb,cAAgB,OACxC7e,KAAK0e,aAAahb,MAAMkP,QAAU,IAElC5S,KAAK0e,aAAaI,OAAS,WACzB,EAAKJ,aAAahb,MAAMkb,WAAa,SACrC,EAAKF,aAAahb,MAAMmb,cAAgB,OAExC,EAAKH,aAAaK,SAAW,MAG/B1R,SAASG,KAAKC,YAAYzN,KAAK0e,eAEjC,YAAAjP,iBAAA,SAAiBnM,EAA8BuM,EAAemP,EAAgCC,EAAoC7O,GAAlI,WACM/C,SAAS6R,gBAAkBlf,KAAK0e,eAEpC1Y,OAAOuF,KAAKyT,GAAQjX,QAAQ,SAAAmE,GAAO,OAAC,EAAKwS,aAAahb,MAAcwI,GAAO8S,EAAO9S,KAClFlG,OAAOuF,KAAK0T,GAAYlX,QAAQ,SAAAmE,GAAO,OAAC,EAAKwS,aAAqBxS,GAAO+S,EAAW/S,KAEpFlM,KAAK0e,aAAahb,MAAMkX,KAAQtX,EAASC,EAAIvD,KAAK+N,iBAAiB6M,KAAQ,KAC3E5a,KAAK0e,aAAahb,MAAM+W,IAAOnX,EAASE,EAAIxD,KAAK+N,iBAAiB0M,IAAM,EAAK,KAC7Eza,KAAK0e,aAAahb,MAAMkb,WAAa,UACrC5e,KAAK0e,aAAahb,MAAMmb,cAAgB,MACxC7e,KAAK0e,aAAa7O,MAAQA,EAC1B7P,KAAK0e,aAAaK,SAAW,WAAM,OAAA3O,EAAS,EAAKsO,aAAa7O,QAC9D7P,KAAK0e,aAAa/G,UAEpB,YAAA6F,cAAA,SAAczY,EAAYuK,EAAyBC,GACjD,IAAI4P,EAAUnf,KAAKkc,SAAS/S,KAAK,SAAAgW,GAAW,OAAAA,EAAQpa,KAAOA,IACvDoa,IACFA,EAAQ7P,eAAiBA,EACzB6P,EAAQ5P,aAAeA,IAG3B,YAAAmO,WAAA,SAAW0B,EAAiBC,EAAiBC,GACtCtf,KAAK6N,UAAUpP,GAAKuB,KAAKuf,UAAYH,GAAYpf,KAAK6N,UAAUpP,GAAKuB,KAAKwf,WAAaJ,GAC5Fpf,KAAKie,gBAAgBmB,EAASE,EAAc,EAAIA,EAAaD,EAAQ,OAEvE,YAAArC,eAAA,SAAe1N,GAAf,IAQImQ,EAiBQnC,EAzBZ,OACMQ,EAAW9d,KAAK0c,YAAYpN,GAG5BwO,IACE3P,EAAe2P,EAASxa,SAASuK,UAAU7N,KAAK6N,WAChDW,EAAcxO,KAAKmc,YAAY7Y,SAASuK,UAAU7N,KAAK6N,WAE3D4R,EAAe,EAAA3R,WAAWK,EAAa5K,EAAG4K,EAAa3K,EACrD2K,EAAa5K,EAAIua,EAASra,MAAQzD,KAAKiO,MACvCE,EAAa3K,EAAIsa,EAAS9P,OAAShO,KAAKiO,MACxCO,EAAYjL,EAAGiL,EAAYhL,EAC3BgL,EAAYjL,EAAIvD,KAAKmc,YAAY1Y,MAAQzD,KAAKiO,MAC9CO,EAAYhL,EAAIxD,KAAKmc,YAAY1N,GAAGT,OAAShO,KAAKiO,QAIlDjO,KAAKmc,YAAYjU,QACflI,KAAKmc,YAAYjU,QAAU4V,GACzBR,EAAYtd,KAAKmc,YAAYjU,MAAMhC,MAAM6X,UAAU,SAAAzc,GAAQ,OAAAA,EAAKyD,KAAO,EAAKoX,YAAYpX,KAC5F/E,KAAKmc,YAAYjU,MAAMhC,MAAMlE,OAAOsb,EAAW,GAC/Ctd,KAAKmc,YAAYjU,MAAMwG,WAAW1M,OAAOsb,EAAW,GACpDtd,KAAKmc,YAAYjU,MAAQ,MAErBuX,IAAiB,EAAAnR,SAASC,SACxB+O,EAAYtd,KAAKmc,YAAYjU,MAAMhC,MAAM6X,UAAU,SAAAzc,GAAQ,OAAAA,EAAKyD,KAAO,EAAKoX,YAAYpX,KAC5F/E,KAAKmc,YAAYjU,MAAMhC,MAAMlE,OAAOsb,EAAW,GAC/Ctd,KAAKmc,YAAYjU,MAAMwG,WAAW1M,OAAOsb,EAAW,GACpDtd,KAAKmc,YAAYjU,MAAQ,OAK3B4V,GACE2B,IAAiB,EAAAnR,SAASC,UAC5BvO,KAAKmc,YAAYjU,MAAQ4V,GAChB5X,MAAMxE,KAAK1B,KAAKmc,aACzB2B,EAASpP,WAAWhN,KAAK1B,KAAKmc,YAAY7Y,SAASqL,SAASmP,EAASxa,aAI3E,YAAA4Z,iBAAA,SAAiBL,EAAevN,EAAyBC,GACvD,GAAKsN,EAAL,CAIIrJ,EAAcqJ,EAAQtJ,eACxB,EAAA3U,MAAMe,aAAaK,KAAK2Q,aAAakE,aAAavF,EAAe/L,EAAG+L,EAAe9L,EAAG,EAAG,GAAGrD,MAC5FmP,EAAe8F,QACf7F,EAAa6F,SAGf,GADI5B,IAAaqJ,EAAQjb,gBAAkB4R,GACtCA,EAAL,CAKIpS,EAAcyb,EAAQjb,gBAC1B,GAAK5B,KAAK6H,kBAAkB3F,WAAWd,GAIhC,CACL,GAAIA,EAAYgB,OAAS,EAAA4P,aAAamF,IACpCnX,KAAK6H,kBAAkB1G,mBAAmBC,GAC1Cyb,EAAQjb,gBAAkB,UAE1B,GAAoC,EAAhCR,EAAYI,WAAW9B,OAAY,CACrC,GAAI0B,EAAYI,WAAW,GAAGH,QAAUrB,KAAK6H,kBAAkBxG,MAG7D,OAFArB,KAAK2c,0BACLE,EAAQjb,gBAAkB,MAGxBoK,EAAQ5K,EAAYI,WAAW,GAAGH,MAAMG,WAAWS,QAAQb,EAAYI,WAAW,IACjFke,EAAgBte,EAAYI,WAAW,GAAGH,MAAMG,WAAWQ,OAAOgK,EAAO,GAAE,UACzEhM,KAAK8b,SAASta,WAAWke,EAAa3a,IAC7C2a,EAAare,MAAMZ,KAAK,aAAcif,EAAare,MAAOqe,GAC1DA,EAAalf,IAAIC,KAAK,aAAcif,EAAalf,IAAKkf,GAEtD1f,KAAK6H,kBAAkB1G,mBAAmBC,GAC1Cyb,EAAQjb,gBAAkB,UAE1B5B,KAAK6H,kBAAkB1G,mBAAmBC,GAC1Cyb,EAAQjb,gBAAkB,KAG9B5B,KAAK6H,kBAAoB,UA3BzB7H,KAAK2c,qBACLE,EAAQjb,gBAAkB,UAP1B5B,KAAK2c,0BAVL3c,KAAK2c,sBA8CT,YAAAV,oBAAA,SAAoBP,GAClB,OAAO,IAAI,EAAA1X,QAAQ0X,EAAGiE,QAAU3f,KAAK+N,iBAAiB6M,KAAMc,EAAGkE,QAAU5f,KAAK+N,iBAAiB0M,MAEjG,YAAAwD,gBAAA,SAAgBhQ,EAAe4R,EAAsBC,GAC/C7R,IACE8R,EAAkBF,EAAYhS,UAAU7N,KAAK+c,kBACjD/c,KAAK6N,UACFmS,cAAcD,EAAgBxc,EAAGwc,EAAgBvc,GACjDyc,UAAUhS,EAAOA,GACjB+R,eAAeD,EAAgBxc,GAAIwc,EAAgBvc,IAEpDsc,GACF9f,KAAK6N,UAAUmS,cAAcF,EAAUvc,EAAGuc,EAAUtc,GAGtDxD,KAAK+c,iBAAmB/c,KAAK6N,UAAUqS,UAEvClgB,KAAKyC,QAAQ0d,aAAangB,KAAK6N,WAC/B7N,KAAK6C,WAAWsd,aAAangB,KAAK6N,WAClC7N,KAAK2Q,aAAawP,aAAangB,KAAK6N,WACpC7N,KAAK6O,gBAAgBsR,aAAangB,KAAK6N,WAEvC7N,KAAKS,KAAK,YAAaT,OAEzB,YAAA2c,mBAAA,WACE3c,KAAK6H,kBAAkB9F,mBACvB/B,KAAK8b,SAASlU,gBAAgB5H,KAAK6H,kBAAkB9C,KAEvD,YAAAgX,WAAA,SAAWC,EAAmB1Y,GAC5BtD,KAAKkc,SAASxa,KAAK,CACjBqD,GAAIiX,EACJ1M,eAAgBhM,EAChBiM,aAAcjM,EAASuK,UAAU7N,KAAK+c,qBAG1C,YAAAD,cAAA,SAAcZ,EAAqBR,GACjCQ,EAASla,OAAOka,EAAS6B,UAAU,SAAAoB,GAAW,OAAAA,EAAQpa,KAAO2W,EAAGM,YAAY,IAE9E,YAAAI,WAAA,SAAW9Y,GACLjD,EAAa,EAAAzB,MAAMe,aAAaK,KAAK6C,WAAWgS,aAAavR,EAASC,EAAGD,EAASE,EAAG,EAAG,GAAGrD,MAC/F,OAAOH,KAAK8b,SAAStS,eAAenJ,IAEtC,YAAAqc,YAAA,SAAYpZ,GACNjD,EAAa,EAAAzB,MAAMe,aAAaK,KAAK6O,gBAAgBgG,aAAavR,EAASC,EAAGD,EAASE,EAAG,EAAG,GAAGrD,MACpG,OAAOH,KAAK8b,SAASrS,gBAAgBpJ,IAEvC,YAAA+f,MAAA,WACEpgB,KAAKyC,QAAQC,OACb1C,KAAKyC,QAAQ0d,aAAangB,KAAKqgB,UAC/BrgB,KAAKyC,QAAQ6d,UAAU,EAAG,EAAGtgB,KAAK+N,iBAAiBtK,MAAOzD,KAAK+N,iBAAiBC,QAChFhO,KAAKyC,QAAQG,UAEb5C,KAAK6C,WAAWH,OAChB1C,KAAK6C,WAAWsd,aAAangB,KAAKqgB,UAClCrgB,KAAK6C,WAAWyd,UAAU,EAAG,EAAGtgB,KAAK+N,iBAAiBtK,MAAOzD,KAAK+N,iBAAiBC,QACnFhO,KAAK6C,WAAWD,UAEhB5C,KAAK2Q,aAAajO,OAClB1C,KAAK2Q,aAAawP,aAAangB,KAAKqgB,UACpCrgB,KAAK2Q,aAAa2P,UAAU,EAAG,EAAGtgB,KAAK+N,iBAAiBtK,MAAOzD,KAAK+N,iBAAiBC,QACrFhO,KAAK2Q,aAAa/N,UAElB5C,KAAK6O,gBAAgBnM,OACrB1C,KAAK6O,gBAAgBsR,aAAangB,KAAKqgB,UACvCrgB,KAAK6O,gBAAgByR,UAAU,EAAG,EAAGtgB,KAAK+N,iBAAiBtK,MAAOzD,KAAK+N,iBAAiBC,QACxFhO,KAAK6O,gBAAgBjM,WAGvB,YAAA6X,IAAA,WACEza,KAAKuC,OAAOvC,KAAKugB,WAEnB,YAAAhe,OAAA,SAAO7B,GACDA,IAASV,KAAK8b,WACd9b,KAAK8b,WACP7C,OAAOuH,qBAAqBxgB,KAAKygB,SACjCzgB,KAAK8b,SAASjW,uBAEX7F,KAAKugB,UAAavgB,KAAKugB,SAASxa,aAAarF,KAChDV,KAAKugB,SAAW7f,GAElBV,KAAK8b,SAAWpb,EAChBV,KAAK2C,YAEP,YAAAA,QAAA,WACE3C,KAAKogB,QAELpgB,KAAKwc,WAAaxc,KAAKwc,UAAUja,SACjCvC,KAAK8b,SAASvZ,SACdvC,KAAKS,KAAK,SAAUT,MAEpBA,KAAKygB,QAAUxH,OAAOC,sBAAsBlZ,KAAK2C,QAAQ+d,KAAK1gB,QAGhE,YAAA2gB,SAAA,SAASC,GACP,IAAIzgB,EACAO,EAAa,KAEjB,IACEP,EAAO0gB,KAAKC,MAAMF,GAClBlgB,EAAO,EAAA+H,KAAKvI,YAAYF,KAAMG,GAC9B,MAAOiL,GACPC,QAAQC,IAAIF,GAEd,OAAO1K,GAET,YAAAqgB,OAAA,SAAOrgB,GACL,IAAIsgB,EAAiCtgB,EAAKX,YAC1C,IACE,OAAO8gB,KAAKI,UAAUD,EAAgB,MACtC,MAAO5V,GACPC,QAAQC,IAAIF,KAGlB,GA9jBE,WAAYmO,EAA4C9V,EAAgBuK,GAAxE,MACE,cAAO,K,OApCT,EAAAD,iBAA8B,CAAE0M,IAAK,EAAGG,KAAM,EAAGnX,MAAO,EAAGuK,OAAQ,GAsBnE,EAAAkO,SAAsB,GACtB,EAAAP,OAAqC,GACrC,EAAAW,cAAgD,CAAE,aAAe,GACjE,EAAAkD,SAAmB,GACnB,EAAAD,SAAmB,EACnB,EAAAf,gBAA0B,KAC1B,EAAAZ,gBAA0B,KAC1B,EAAAc,aAAiCrR,SAASC,cAAc,SAExD,EAAAO,UAAuB,IAAIqT,UAC3B,EAAAnE,iBAA8B,IAAImE,UAClC,EAAAb,SAAsB,IAAIa,UAIxB,EAAK5H,cAAcC,EAAO9V,EAAOuK,GACjC,EAAK4L,iBACL,EAAKT,2BACL,EAAKL,0BACL,EAAKoB,eACL,EAAKY,WAEL,EAAKO,iBACL,EAAKoD,kB,EA9CI,EAAA0C,cAomBb,YACA,WACA,YACA,a,mLC7mBA,IA0JYC,EA1JZ,SAEA,GACS,EAAAC,IAAOviB,KAAK+Y,GAAK,IACjB,EAAAuD,aAA6C,CAAE,OAAU,CAAC,UAAW,OAAU,CAAC,UAAW,QAAW,CAAC,WAAY,KAAQ,CAAC,QAAS,MAAS,CAAC,UAC/I,EAAAlL,mBAAqB,CAC1BD,OAAQ,CACN,CAAC,yBAA0B,2BAC3B,CAAC,yBAA0B,2BAC3B,CAAC,yBAA0B,4BAE7BqR,IAAK,WAAM,OAAA/b,EAAS2K,mBAAmBD,OAAO,IAC9CsR,MAAO,WAAM,OAAAhc,EAAS2K,mBAAmBD,OAAO,IAChDuR,KAAM,WAAM,OAAAjc,EAAS2K,mBAAmBD,OAAO,IAC/CtR,OAAQ,WAAM,OAAA4G,EAAS2K,mBAAmBD,OAAOnR,KAAKC,MAAMD,KAAK2iB,UAAYlc,EAAS2K,mBAAmBD,OAAOvQ,OAAS,OAGpH,EAAAwX,iBAAmB,WACxB,MAAO,CACLtK,KAAM,QACNC,SAAU,SACV2H,UAAW,QACXD,cAAe,SACfzP,MAAO,OACPoK,WAAY,OACZkI,oBAAqB,WACrB1G,eAAgB,GAChB+B,kBAAmB,EACnB8E,kBAAmB,OACnB3E,QAAS,GACT8O,QAAS,GACTC,UAAW,GACX9d,YAAa,GACb8O,kBAAmB,GACnBhP,oBAAqB,IAGlB,EAAA6B,sBAAwB,WAC7B,MAAO,CACL/B,MAAO,EACPqB,MAAO,cAGJ,EAAAkL,kBAAoB,WACzB,MAAO,CACLd,WAAY,OACZrC,SAAU,OACVD,KAAM,UAGH,EAAA4L,qBAAuB,WAC5B,MAAO,CACL5U,OAAQ,EACRkL,YAAa,OACbkJ,WAAY,EACZC,YAAa,OACbH,WAAY,cAGT,EAAA8J,mBAAqB,WAC1B,MAAO,CACLC,gBAAiB,OACjBjP,QAAS,EACT9N,MAAO,OACP8H,KAAM,QACNC,SAAU,SAGP,EAAAiV,sBAAwB,WAC7B,MAAO,CACLD,gBAAiB,UACjB5J,YAAa,OACbD,WAAY,EACZ+J,aAAc,IAAI,EAAA/d,QAAQ,EAAG,GAC7Bge,YAAa,EACblT,YAAa,SAGV,EAAAmT,oBAAsB,WAC3B,MAAO,CACLnT,YAAa,SAGV,EAAAoT,6BAA+B,WACpC,MAAO,IAEF,EAAAC,kBAAoB,WACzB,MAAO,CACLtR,MAAO,SAGJ,EAAAuR,kBAAoB,WACzB,MAAO,CACLP,gBAAiB,OACjB/c,MAAO,OACP+H,SAAU,OACVD,KAAM,QACNyV,OAAQ,kBACRxR,MAAO,OACPzO,KAAMgf,EAAUkB,OAGb,EAAAC,kBAAoB,WACzB,MAAO,CACLzd,MAAO,OACP+H,SAAU,OACVD,KAAM,QACNiE,MAAO,SAGJ,EAAA2R,mBAAqB,WAC1B,MAAO,CACLC,WAAY,SAGT,EAAAC,mBAAqB,SAAC1U,GAC3B,MAAO,CACLlJ,MAAO,OACP6d,WAAY,OACZC,WAAY,EACZC,YAAa7U,EAAS,IAGnB,EAAA8U,mBAAqB,WAC1B,MAAO,CACLhU,YAAa,SAGV,EAAAiU,mBAAqB,WAC1B,MAAO,CACLlB,gBAAiB,OACjB/c,MAAO,SAGb,GApIA,cAAa,EAAAS,YAsID+I,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAClB,qBACA,yBACA,8BAEUlL,EAAA,EAAAA,YAAA,EAAAA,UAAS,KACnB,2BACA,8BAEU8P,EAAA,EAAAA,MAAA,EAAAA,IAAG,KACbA,EAAA,eACAA,IAAA,eACAA,IAAA,gBAEUlB,EAAA,EAAAA,eAAA,EAAAA,aAAY,KACtB,aACA,kBAEUoP,IAAA,EAAAA,YAAA,EAAAA,UAAS,KACnB,YACA,mBAEU7O,EAAA,EAAAA,QAAA,EAAAA,MAAK,KACf,iBACA,sBAEUyQ,EAAA,EAAAA,SAAA,EAAAA,OAAM,KAChB,qBACA,6BACA,yBACA,2CACA,qBACA,qBACA,qBACA,uBACA,uBACA,uBACA,yBAEUpiB,EAAA,EAAAA,YAAA,EAAAA,UAAS,KACnB,uBACA,0BAEUG,EAAA,EAAAA,aAAA,EAAAA,WAAU,KACpB,uBACA,yBACA,mBACA,0B,0YCvLF,YACA,a,gFCAA,aAEA,GAaE,YAAAtB,SAAA,WACE,MAAO,IAAMO,KAAKuD,EAAEzD,QAAQ,GAAK,KAAOE,KAAKwD,EAAE1D,QAAQ,GAAK,KAE9D,YAAA4G,IAAA,SAAIuc,EAAwBC,GAC1B,OAAID,aAAgBjf,EACX,IAAIA,EAAQhE,KAAKuD,EAAI0f,EAAK1f,EAAGvD,KAAKwD,EAAIyf,EAAKzf,GAE3C,IAAIQ,EAAQhE,KAAKuD,EAAI0f,OADH,IAATC,EACkBljB,KAAKwD,EAAIyf,EAETjjB,KAAKwD,EAAI0f,IAG/C,YAAAC,WAAA,SAAWF,EAAwBC,GAWjC,OAVID,aAAgBjf,GAClBhE,KAAKuD,GAAK0f,EAAK1f,EACfvD,KAAKwD,GAAKyf,EAAKzf,QACU,IAAT0f,GAChBljB,KAAKuD,GAAK0f,EACVjjB,KAAKwD,GAAKyf,IAEVjjB,KAAKuD,GAAK0f,EACVjjB,KAAKwD,GAAK0f,GAELljB,MAET,YAAAojB,SAAA,SAASH,EAAwBC,GAC/B,OAAID,aAAgBjf,EACX,IAAIA,EAAQhE,KAAKuD,EAAI0f,EAAK1f,EAAGvD,KAAKwD,EAAIyf,EAAKzf,GAE3C,IAAIQ,EAAQhE,KAAKuD,EAAI0f,OADH,IAATC,EACkBljB,KAAKwD,EAAIyf,EAETjjB,KAAKwD,EAAI0f,IAG/C,YAAAlF,gBAAA,SAAgBiF,EAAwBC,GAWtC,OAVID,aAAgBjf,GAClBhE,KAAKuD,GAAK0f,EAAK1f,EACfvD,KAAKwD,GAAKyf,EAAKzf,QACU,IAAT0f,GAChBljB,KAAKuD,GAAK0f,EACVjjB,KAAKwD,GAAKyf,IAEVjjB,KAAKuD,GAAK0f,EACVjjB,KAAKwD,GAAK0f,GAELljB,MAET,YAAA2O,SAAA,SAASsU,EAAwBC,GAC/B,OAAID,aAAgBjf,EACX,IAAIA,EAAQhE,KAAKuD,EAAI0f,EAAK1f,EAAGvD,KAAKwD,EAAIyf,EAAKzf,GAE3C,IAAIQ,EAAQhE,KAAKuD,EAAI0f,OADH,IAATC,EACkBljB,KAAKwD,EAAIyf,EAETjjB,KAAKwD,EAAI0f,IAG/C,YAAAG,gBAAA,SAAgBJ,EAAwBC,GAClCD,aAAgBjf,GAClBhE,KAAKuD,GAAK0f,EAAK1f,EACfvD,KAAKwD,GAAKyf,EAAKzf,QACU,IAAT0f,GAChBljB,KAAKuD,GAAK0f,EACVjjB,KAAKwD,GAAKyf,IAEVjjB,KAAKuD,GAAK0f,EACVjjB,KAAKwD,GAAK0f,IAGd,YAAAI,OAAA,SAAOC,EAAgBC,GACrBA,GAAoB,EAAAje,SAAS8b,IAC7B,IAAIoC,EAAO3kB,KAAK4kB,IAAIF,GAChBG,EAAO7kB,KAAK8kB,IAAIJ,GACpB,OAAO,IAAIxf,EACRyf,GAAQzjB,KAAKuD,EAAIggB,EAAMhgB,GAAOogB,GAAQ3jB,KAAKwD,EAAI+f,EAAM/f,GAAM+f,EAAMhgB,EACjEogB,GAAQ3jB,KAAKuD,EAAIggB,EAAMhgB,GAAOkgB,GAAQzjB,KAAKwD,EAAI+f,EAAM/f,GAAM+f,EAAM/f,IAGtE,YAAAqgB,cAAA,SAAcN,EAAgBC,GAC5BA,GAAoB,EAAAje,SAAS8b,IAC7B,IAAIoC,EAAO3kB,KAAK4kB,IAAIF,GAChBG,EAAO7kB,KAAK8kB,IAAIJ,GAKpB,OAJAxjB,KAAK8jB,KAAQL,GAAQzjB,KAAKuD,EAAIggB,EAAMhgB,GAAOogB,GAAQ3jB,KAAKwD,EAAI+f,EAAM/f,GAAM+f,EAAMhgB,EAC9EvD,KAAK+jB,KAAQJ,GAAQ3jB,KAAKuD,EAAIggB,EAAMhgB,GAAOkgB,GAAQzjB,KAAKwD,EAAI+f,EAAM/f,GAAM+f,EAAM/f,EAC9ExD,KAAKuD,EAAIvD,KAAK8jB,KACd9jB,KAAKwD,EAAIxD,KAAK+jB,KACP/jB,MAET,YAAA6N,UAAA,SAAUA,GACR,OAAO,IAAI7J,EAAQ6J,EAAUmW,eAAehkB,QAE9C,YAAAikB,iBAAA,SAAiBpW,G,IACXqW,EAAmBrW,EAAUmW,eAAehkB,MAChD,EAAmB,CAACkkB,EAAiB3gB,EAAG2gB,EAAiB1gB,GAAxDxD,KAAKuD,EAAC,KAAEvD,KAAKwD,EAAC,MAEjB,YAAAkM,IAAA,WACE,OAAO5Q,KAAK4Q,IAAI1P,KAAKuD,EAAGvD,KAAKwD,IAE/B,YAAA4R,MAAA,WACE,OAAO,IAAIpR,EAAQhE,KAAKuD,EAAGvD,KAAKwD,IAElC,YAAA2gB,MAAA,SAAMC,EAAcC,EAAcC,EAAcC,GAK9C,OAJIvkB,KAAKuD,EAAI6gB,IAAMpkB,KAAKuD,EAAI6gB,GACxBpkB,KAAKuD,EAAI8gB,IAAMrkB,KAAKuD,EAAI8gB,GACxBrkB,KAAKwD,EAAI8gB,IAAMtkB,KAAKwD,EAAI8gB,GACxBtkB,KAAKwD,EAAI+gB,IAAMvkB,KAAKwD,EAAI+gB,GACrBvkB,MAGF,EAAA2d,SAAP,SAAgB6G,EAAkBC,GAChC,OAAO,IAAIzgB,GAASwgB,EAAQjhB,EAAIkhB,EAAQlhB,GAAK,GAAIihB,EAAQhhB,EAAIihB,EAAQjhB,GAAK,IAErE,EAAAS,SAAP,SAAgBygB,EAA+BC,EAA+BC,EAAaC,GACzF,OAAIH,aAAuB1gB,GAAW2gB,aAAuB3gB,EACpDlF,KAAKgmB,KAAKhmB,KAAKimB,IAAIJ,EAAYphB,EAAImhB,EAAYnhB,EAAG,GAAKzE,KAAKimB,IAAIJ,EAAYnhB,EAAIkhB,EAAYlhB,EAAG,IACtE,iBAAhBkhB,GAAmD,iBAAhBC,EAC5C7lB,KAAKgmB,KAAKhmB,KAAKimB,IAAIH,EAAKF,EAAa,GAAK5lB,KAAKimB,IAAIF,EAAKF,EAAa,SADvE,GAIF,EAAAlM,KAAP,WACE,OAAO,IAAIzU,EAAQ,EAAG,IAEjB,EAAAghB,IAAP,WACE,OAAO,IAAIhhB,EAAQ,EAAG,IAEjB,EAAAihB,OAAP,SAAcC,GACZ,IAAIC,EAAS,IAAInhB,EAAQohB,OAAOC,UAAWD,OAAOC,WAC9CC,EAAS,IAAIthB,EAAQohB,OAAOG,UAAWH,OAAOG,WAQlD,OANAL,EAAQnd,QAAQ,SAACyd,GACXA,EAAOjiB,EAAI4hB,EAAO5hB,IAAG4hB,EAAO5hB,EAAIiiB,EAAOjiB,GACvCiiB,EAAOhiB,EAAI2hB,EAAO3hB,IAAG2hB,EAAO3hB,EAAIgiB,EAAOhiB,GACvCgiB,EAAOjiB,EAAI+hB,EAAO/hB,IAAG+hB,EAAO/hB,EAAIiiB,EAAOjiB,GACvCiiB,EAAOhiB,EAAI8hB,EAAO9hB,IAAG8hB,EAAO9hB,EAAIgiB,EAAOhiB,KAEtC,CAAC2hB,EAAQG,IAEX,EAAAG,QAAP,SAAeP,GACb,IAAIQ,EAAO,EACPC,EAAO,EAKX,OAJAT,EAAQnd,QAAQ,SAACyd,GACfE,GAAQF,EAAOjiB,EACfoiB,GAAQH,EAAOhiB,IAEV,IAAIQ,EAAQ0hB,EAAOR,EAAQxlB,OAAQimB,EAAOT,EAAQxlB,SAEpD,EAAAf,OAAP,SAAcylB,EAAcC,EAAcC,EAAcC,GACtD,OAAO,IAAIvgB,EACTlF,KAAK2iB,UAAY4C,EAAOD,GAAQA,EAChCtlB,KAAK2iB,UAAY8C,EAAOD,GAAQA,IAG7B,EAAAsB,KAAP,SAAYvkB,EAAgBb,EAAcqlB,GACxC,OAAO,IAAI7hB,EACT3C,EAAMkC,GAAM/C,EAAI+C,EAAIlC,EAAMkC,GAAKsiB,EAC/BxkB,EAAMmC,GAAMhD,EAAIgD,EAAInC,EAAMmC,GAAKqiB,IAInC,YAAA9lB,UAAA,WACE,MAAO,CAAEwD,EAAGvD,KAAKuD,EAAGC,EAAGxD,KAAKwD,IAEvB,EAAAtD,YAAP,SAAmBC,GACjB,OAAO,IAAI6D,EAAQ7D,EAAKoD,EAAGpD,EAAKqD,IAEpC,GA3KE,WAAYsiB,EAAgCtiB,G,MACtCsiB,aAAuBC,UACzB,EAAmB,CAACD,EAAYviB,EAAGuiB,EAAYtiB,GAA9CxD,KAAKuD,EAAC,KAAEvD,KAAKwD,EAAC,OAEf,EAAmB,CAACsiB,EAAatiB,GAAhCxD,KAAKuD,EAAC,KAAEvD,KAAKwD,EAAC,MAVR,EAAAQ,W,+ECHA,EAAAgiB,SAAW,63B,+pBCCxB,IAQA,EARA,SACA,SACA,SACA,SACA,SAEA,SAEA,KAA4B,EAAAC,OAAA,OA0C1B,YAAAC,MAAA,WACElmB,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMme,gBACpC7hB,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE3E,YAAAmY,UAAA,WACEnmB,KAAKyC,QAAQkC,YAAc,OAC3B3E,KAAKkmB,QACLlmB,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAG7E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,WACE/Q,KAAKqmB,MAAM/iB,SAAWtD,KAAKsD,SAC3BtD,KAAKqmB,MAAMrY,OAAShO,KAAKgO,OACzBhO,KAAKqmB,MAAM5iB,MAAQzD,KAAKyD,MAEpBzD,KAAKuI,QACPvI,KAAKuI,MAAMjF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKuI,MAAM7E,MAAME,OACtG5D,KAAKuI,MAAMjF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAEtDhO,KAAKwI,SACPxI,KAAKwI,OAAOlF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKmC,MAAQzD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKwI,OAAO9E,MAAME,OAC1H5D,KAAKwI,OAAOlF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,IAI7D,YAAAsY,aAAA,aAEA,YAAAvR,OAAA,SAAOzF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GACxBvP,KAAKumB,UAETvmB,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACMxV,KAAKumB,UAETvmB,KAAKS,KAAK,aAAcT,OAG1B,YAAAD,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxBiO,OAAQhO,KAAKgO,OACb0H,KAAM1V,KAAK0V,KACXhS,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChDiK,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAIkW,EAAO/U,EAAMnB,EAAKuV,KAAMvV,EAAKoI,MAAOpI,EAAKqI,OAAQrI,EAAK6N,OAAQ7N,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAEzH,GAhIE,WACErL,EACOoU,EACPnN,EACAC,EACAwF,EACAtK,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IANF,MAWE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAO3M,QAAQ,EAAO,EAAF,KAAO,EAAA9Q,SAASqc,sBAAyBle,GAAS,KAChG6E,EACoB,kBAAVA,EACN,IAAI,EAAAwJ,SAASzQ,EAAM,EAAA0Q,aAAaC,GAAI,QAAS,GAAI,GAAI,WAAM,SAAKxR,KAAK,QAAS,KAC9E,IAAI,EAAAsR,SAASzQ,EAAMiH,EAAMnG,KAAMmG,EAAMjG,SAAUiG,EAAMlC,KAAMkC,EAAM7E,MAAO,WAAM,SAAKjD,KAAK,QAAS,IAAO8H,EAAMxD,GAAI,EAAAnG,MAAMsB,YAAYqI,EAAMoE,WAE5I,KACFnE,EACqB,kBAAXA,EACN,IAAI,EAAAuJ,SAASzQ,EAAM,EAAA0Q,aAAamF,IAAK,QAAS,GAAI,IAClD,EAAApF,SAAS7R,YAAYoB,EAAMkH,GAE7B,KACFzD,EAAI4H,IACL,K,OAvBM,EAAA+I,OAwBP,EAAK1H,OAASA,GAAmB,EAAK1M,KAAKoC,MAAMie,UAAY,EAAI,EAAKje,MAAMkP,QAE5E,EAAKyT,MAAQ,IAAI,EAAA1Q,MAAM,EAAKrU,KAAMoU,EAAM,MAAM,GAAO,EAAO,CAC1D7I,SAAU,EAAKnJ,MAAMmJ,SACrBD,KAAM,EAAKlJ,MAAMkJ,KACjBiE,MAAO,SACP/L,MAAO,EAAKpB,MAAMoB,OACjB,EAAKkJ,QACR,EAAKqY,MAAM1gB,GAAG,QAAS,SAAC6gB,EAAaljB,GAAsB,SAAK7C,KAAK,QAAS,EAAM6C,KAEpF,EAAKmjB,SAAS/kB,KAAK,EAAK2kB,O,EAvCf,EAAAhQ,U,kqBCTb,IAiBA,EAjBA,SAGA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SAEA,KAA+B,EAAA4P,OAAA,OAiB7B,YAAAC,MAAA,WACElmB,KAAKyC,QAAQwV,YAAcjY,KAAK0D,MAAMuU,YACtCjY,KAAKyC,QAAQuV,WAAa,EAC1BhY,KAAKyC,QAAQikB,cAAgB1mB,KAAK0D,MAAMqe,aAAaxe,EACrDvD,KAAKyC,QAAQkkB,cAAgB3mB,KAAK0D,MAAMqe,aAAave,EACrDxD,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMme,gBACpC7hB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YACtC9O,KAAKyC,QAAQmC,UAAY5E,KAAK0D,MAAMse,YACpChiB,KAAKyC,QAAQwY,UAAUjb,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAIxD,KAAKsB,KAAKoC,MAAMG,YAAa7D,KAAKyD,MAAOzD,KAAKgO,OAAShO,KAAKsB,KAAKoC,MAAMG,YAAa,GAC9I7D,KAAKyC,QAAQoC,SACb7E,KAAKyC,QAAQsV,QAEf,YAAAoO,UAAA,WACEnmB,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMme,gBACpC7hB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YACtC9O,KAAKyC,QAAQmC,UAAY5E,KAAK0D,MAAMse,YACpChiB,KAAKyC,QAAQwY,UAAUjb,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAIxD,KAAKsB,KAAKoC,MAAMG,YAAa7D,KAAKyD,MAAOzD,KAAKgO,OAAShO,KAAKsB,KAAKoC,MAAMG,YAAa,GAC9I7D,KAAKyC,QAAQoC,SACb7E,KAAKyC,QAAQsV,QAEf,YAAAqO,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,sBACE/Q,KAAKsD,SAAWtD,KAAKsB,KAAKgC,SAC1B,IAAIsjB,EAAyB9nB,KAAK4Q,IAAI1P,KAAKsB,KAAKkF,OAAO9G,OAAQM,KAAKsB,KAAKuF,QAAQnH,QAAUM,KAAKsB,KAAKoC,MAAMiP,kBAAoB3S,KAAKsB,KAAKoC,MAAMG,YAC3IN,EAAIvD,KAAKsD,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMkP,QACtCpP,EAAIxD,KAAKsD,SAASE,EAAIojB,EAC1B5mB,KAAKymB,SAAS1e,QAAQ,SAAAkC,GACpBzG,GAAK,EAAKlC,KAAKoC,MAAMge,QACrBzX,EAAMxG,MAAQ,EAAKA,MAAkC,EAA1B,EAAKnC,KAAKoC,MAAMkP,QAC3C3I,EAAM3G,SAAW,IAAI,EAAAU,QAAQT,EAAGC,GAChCA,GAAKyG,EAAM+D,SAEbhO,KAAKgO,OAASxK,EAAIxD,KAAKsB,KAAKoC,MAAMkP,QAAU5S,KAAKsD,SAASE,GAG5D,YAAA8iB,aAAA,aAEA,YAAAvR,OAAA,SAAOzF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GAC5BvP,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,aAEA,YAAAzV,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB6R,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChD0D,MAAOzD,KAAKyD,MACZC,MAAO,CACLme,gBAAiB7hB,KAAK0D,MAAMme,gBAC5B5J,YAAajY,KAAK0D,MAAMuU,YACxBD,WAAYhY,KAAK0D,MAAMsU,WACvB+J,aAAc/hB,KAAK0D,MAAMqe,aAAahiB,YACtCiiB,YAAahiB,KAAK0D,MAAMse,YACxBlT,YAAa9O,KAAK0D,MAAMoL,aAE1B9E,OAAQhK,KAAKymB,SAASxf,IAAI,SAAAgD,GAAS,OAACA,EAAclK,gBAG/C,EAAAG,YAAP,SAAmBoB,EAAYnB,G,MACzB0mB,EAAc,IAAI/S,EAAUxS,EAAMnB,EAAKsD,MAAOtD,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,WAiB9F,OAhBA,EAAAka,EAAYJ,UAAS/kB,KAAI,QAAIvB,EAAK6J,OAAO/C,IAAI,SAAA6f,GAC3C,OAAQA,EAAgB1kB,MACtB,KAAK,EAAA4gB,OAAO3M,OAAQ,OAAO,EAAAA,OAAOnW,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAOlP,UAAW,OAAOA,EAAU5T,YAAYoB,EAAMwlB,GAC1D,KAAK,EAAA9D,OAAOjM,QAAS,OAAO,EAAAA,QAAQ7W,YAAYoB,EAAMwlB,GACtD,KAAK,EAAA9D,OAAO7M,iBAAkB,OAAO,EAAAA,iBAAiBjW,YAAYoB,EAAMwlB,GACxE,KAAK,EAAA9D,OAAOnN,MAAO,OAAO,EAAAA,MAAM3V,YAAYoB,EAAMwlB,GAClD,KAAK,EAAA9D,OAAO/L,MAAO,OAAO,EAAAA,MAAM/W,YAAYoB,EAAMwlB,GAClD,KAAK,EAAA9D,OAAOrN,MAAO,OAAO,EAAAA,MAAMzV,YAAYoB,EAAMwlB,GAClD,KAAK,EAAA9D,OAAOtM,OAAQ,OAAO,EAAAA,OAAOxW,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAO/M,OAAQ,OAAO,EAAAA,OAAO/V,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAOnM,OAAQ,OAAO,EAAAA,OAAO3W,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAOzM,OAAQ,OAAO,EAAAA,OAAOrW,YAAYoB,EAAMwlB,GACpD,QAAS,WAGND,GAEX,GArHE,WACEvlB,EACAmC,EACAC,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IAHF,EAQE,YAAMpC,EAAMA,EAAKgC,SAAU,EAAA0f,OAAOlP,WAAW,EAAO,EAAF,KAAO,EAAAvO,SAASuc,yBAA4Bpe,GAAS,KAAM,KAAM,KAAMqB,EAAI4H,IAAS,K,OACtI,EAAKlJ,WAAyB,IAAVA,EAAwBA,EAAQ,EACpD,EAAKuK,OAAmC,EAA1B,EAAK1M,KAAKoC,MAAMkP,QAC9B,EAAKmU,aAAe,EAAKtjB,MAAQ,EAAI,EAAKnC,KAAKoC,MAAMkP,Q,EAd5C,EAAAkB,a,gqBCjBb,IAOA,EAPA,SAGA,SACA,SACA,SAEA,KAA6B,EAAAmS,OAAA,OAiB3B,YAAAC,MAAA,WACElmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YACtC9O,KAAKyC,QAAQmC,UAAY,EACzB5E,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3EhO,KAAKyC,QAAQkC,YAAc,KAC3B3E,KAAKyC,QAAQqd,UAAU9f,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,GACtDxD,KAAKgnB,aAAahnB,KAAKyC,QAASzC,KAAKyD,MAAOzD,KAAKgO,QACjDhO,KAAKyC,QAAQwkB,kBAEf,YAAAd,UAAA,WACEnmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YACtC9O,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3EhO,KAAKyC,QAAQsM,UAAY,YACzB/O,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE3E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,aAEA,YAAAuV,aAAA,aAEA,YAAAvR,OAAA,SAAOzF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GAC5BvP,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACExV,KAAKS,KAAK,aAAcT,OAG1B,YAAAD,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB2D,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChDiO,OAAQhO,KAAKgO,OACbhE,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAI4W,EAAQzV,EAAMnB,EAAK6N,OAAQ,KAAM7N,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAE5F,GA9EE,WACErL,EACA0M,EACAzL,EACAmB,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IAJF,EASE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAOjM,SAAS,EAAO,EAAF,KAAO,EAAAxR,SAAS0c,uBAA0Bve,GAAS,KAAM,KAAM,KAAMqB,EAAI4H,IAAS,K,OACnI,EAAKqa,aAAezkB,EACpB,EAAKyL,OAASA,E,EAdL,EAAA+I,W,yqBCPb,IAiBA,EAjBA,SAGA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SAEA,KAAsC,EAAAkP,OAAA,OAcpC,YAAAC,MAAA,aACA,YAAAC,UAAA,aACA,YAAAC,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,sBACMmW,EAAiBlnB,KAAKyD,MACtBF,EAAIvD,KAAKsD,SAASC,EAClB4jB,EAAY,EAChBnnB,KAAKymB,SAAS1e,QAAQ,SAAAkC,GACpBkd,EAAYroB,KAAK4Q,IAAIyX,EAAWld,EAAM+D,UAExChO,KAAKgO,OAASmZ,EAEdnnB,KAAKymB,SAAS1e,QAAQ,SAAAkC,GACpB,IAAImd,EAAand,EAAMvG,MAAM2jB,KAAOpd,EAAMvG,MAAM2jB,KAAO,EAAK5jB,MAAS,EAAI,EAAKgjB,SAAS/mB,OAAU,EAAK+D,MACrFyjB,EAAbE,IAA6BA,EAAaF,GAC9Cjd,EAAMxG,MAAQ2jB,EAEVnd,EAAM+D,OAAS,EAAKA,SAAQ/D,EAAM+D,OAAS,EAAKA,QACpD/D,EAAM3G,SAAW,IAAI,EAAAU,QAAQT,EAAG,EAAKD,SAASE,GAE9C0jB,GAAkBE,EAClB7jB,GAAK6jB,KAIT,YAAAd,aAAA,aAEA,YAAAvR,OAAA,SAAOzF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GAC5BvP,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,aAEA,YAAAzV,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB6R,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChD2D,MAAO1D,KAAK0D,MACZsG,OAAQhK,KAAKymB,SAASxf,IAAI,SAAAgD,GAAS,OAACA,EAAclK,gBAG/C,EAAAG,YAAP,SAAmBoB,EAAYnB,G,MACzBmnB,EAAY,IAAInR,EAAiB7U,EAAM,GAAInB,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,WAiB3F,OAhBA,EAAA2a,EAAUb,UAAS/kB,KAAI,QAAIvB,EAAK6J,OAAO/C,IAAI,SAAA6f,GACzC,OAAQA,EAAgB1kB,MACtB,KAAK,EAAA4gB,OAAO3M,OAAQ,OAAO,EAAAA,OAAOnW,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAOlP,UAAW,OAAO,EAAAA,UAAU5T,YAAYoB,EAAMwlB,GAC1D,KAAK,EAAA9D,OAAOjM,QAAS,OAAO,EAAAA,QAAQ7W,YAAYoB,EAAMwlB,GACtD,KAAK,EAAA9D,OAAO7M,iBAAkB,OAAOA,EAAiBjW,YAAYoB,EAAMwlB,GACxE,KAAK,EAAA9D,OAAOnN,MAAO,OAAO,EAAAA,MAAM3V,YAAYoB,EAAMwlB,GAClD,KAAK,EAAA9D,OAAO/L,MAAO,OAAO,EAAAA,MAAM/W,YAAYoB,EAAMwlB,GAClD,KAAK,EAAA9D,OAAOrN,MAAO,OAAO,EAAAA,MAAMzV,YAAYoB,EAAMwlB,GAClD,KAAK,EAAA9D,OAAOtM,OAAQ,OAAO,EAAAA,OAAOxW,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAO/M,OAAQ,OAAO,EAAAA,OAAO/V,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAOnM,OAAQ,OAAO,EAAAA,OAAO3W,YAAYoB,EAAMwlB,GACpD,KAAK,EAAA9D,OAAOzM,OAAQ,OAAO,EAAAA,OAAOrW,YAAYoB,EAAMwlB,GACpD,QAAS,WAGNQ,GAEX,GAjGE,WACEhmB,EACA0I,EACAtG,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IAHF,EAQE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAO7M,kBAAkB,EAAO,EAAF,KAAO,EAAA5Q,SAAS2c,gCAAmCxe,GAAS,KAAM,KAAM,KAAMqB,EAAI4H,IAAS,K,OACjJ3C,IAAQ,IAAKyc,UAAS/kB,KAAI,QAAIsI,G,EAXzB,EAAAmM,oB,8pBCjBb,IAQA,EARA,SAGA,SACA,SACA,SACA,SAEA,KAA2B,EAAA8P,OAAA,OAoCzB,YAAAC,MAAA,WACE,IACM3iB,EADFvD,KAAKunB,cACHhkB,EAAIvD,KAAKsD,SAASC,EAClBvD,KAAKmC,OAAOsB,MAAQzD,KAAKsB,KAAKmN,GAAGsY,eACV,WAArB/mB,KAAK0D,MAAMmN,MAAoBtN,GAAKvD,KAAKsB,KAAKmN,GAAGsY,aAAe,EAAI/mB,KAAKmC,OAAOsB,MAAQ,EAC9D,UAArBzD,KAAK0D,MAAMmN,QAAmBtN,KAAQvD,KAAKsB,KAAKmN,GAAGsY,aAAe/mB,KAAKmC,OAAOsB,SAEzFzD,KAAKyC,QAAQ+kB,UACXxnB,KAAKunB,YAAa,EAAG,EAAGvnB,KAAKmC,OAAOsB,MAAOzD,KAAKmC,OAAO6L,OACvDzK,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,UAI3C,YAAAmY,UAAA,WACE,IACM5iB,EADFvD,KAAKunB,cACHhkB,EAAIvD,KAAKsD,SAASC,EAClBvD,KAAKmC,OAAOsB,MAAQzD,KAAKsB,KAAKmN,GAAGsY,eACV,WAArB/mB,KAAK0D,MAAMmN,MAAoBtN,GAAKvD,KAAKsB,KAAKmN,GAAGsY,aAAe,EAAI/mB,KAAKmC,OAAOsB,MAAQ,EAC9D,UAArBzD,KAAK0D,MAAMmN,QAAmBtN,KAAQvD,KAAKsB,KAAKmN,GAAGsY,aAAe/mB,KAAKmC,OAAOsB,SAEzFzD,KAAKyC,QAAQsM,UAAY,YACzB/O,KAAKyC,QAAQkC,YAAc,OAC3B3E,KAAKyC,QAAQwM,SAAS1L,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3DhO,KAAKyC,QAAQuM,WAAWzL,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,UAGjE,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAE5C,IAAImD,EAAIvD,KAAKsD,SAASC,EAClBvD,KAAKmC,OAAOsB,MAAQzD,KAAKsB,KAAKmN,GAAGsY,eACV,WAArB/mB,KAAK0D,MAAMmN,MAAoBtN,GAAKvD,KAAKsB,KAAKmN,GAAGsY,aAAe,EAAI/mB,KAAKmC,OAAOsB,MAAQ,EAC9D,UAArBzD,KAAK0D,MAAMmN,QAAmBtN,KAAQvD,KAAKsB,KAAKmN,GAAGsY,aAAe/mB,KAAKmC,OAAOsB,SAEzFzD,KAAK2Q,aAAa1B,SAAS1L,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAElE,YAAA+C,OAAA,WACO/Q,KAAKmC,OAAOsB,OAAUzD,KAAKmC,OAAO6L,SAEnChO,KAAKmC,OAAOsB,MAAQzD,KAAKyD,MAC3BzD,KAAKgO,OAAShO,KAAKyD,MAAQzD,KAAKynB,OAEhCznB,KAAKyD,MAAQzD,KAAKmC,OAAOsB,MACzBzD,KAAKgO,OAAShO,KAAKmC,OAAO6L,UAI9B,YAAAsY,aAAA,aAEA,YAAAvR,OAAA,SAAOzF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GAC5BvP,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC/BvP,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC9BvP,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,aAEA,YAAAzV,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB2D,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChDoC,OAAQnC,KAAK0nB,aACb1d,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAI0V,EAAMvU,EAAMnB,EAAKgC,OAAQhC,EAAKyR,SAAUzR,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAEnG,GAvHE,WACErL,EACOomB,EACP9V,EACAlO,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IAJF,MASE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAOnN,OAAO,EAAO,EAAF,KAAO,EAAAtQ,SAAS4c,qBAAwBze,GAASkO,EAAU,KAAM,KAAM7M,EAAI4H,IAAS,K,OAP5H,EAAA+a,eAQP,EAAKvlB,OAASkL,SAASC,cAAc,OAErC,EAAKnL,OAAOwlB,OAAS,WACY,oBAApB9N,gBAAiC,EAAK0N,YAAc,IAAI1N,gBAAgB,EAAK1X,OAAOsB,MAAO,EAAKtB,OAAO6L,SAEhH,EAAKuZ,YAAcla,SAASC,cAAc,UAC1C,EAAKia,YAAY9jB,MAAQ,EAAKtB,OAAOsB,MACrC,EAAK8jB,YAAYvZ,OAAS,EAAK7L,OAAO6L,QAGrB,EAAKuZ,YAAY5N,WAAW,MAClC6N,UAAU,EAAKrlB,OAAQ,EAAG,GAEvC,EAAKslB,MAAQ,EAAKtlB,OAAOsB,MAAQ,EAAKtB,OAAO6L,OAC7C,EAAK+C,SACL,EAAKzP,KAAKmN,GAAGuC,UAEf,EAAK7O,OAAOylB,QAAU,SAACxc,GAAU,SAAAyc,OAAOzc,MAAMA,IAC9C,EAAKjJ,OAAO2lB,IAAMJ,E,EAjCT,EAAA7R,S,2YCRb,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,YACA,a,8pBCXA,IASA,EATA,SACA,SAEA,SACA,SACA,SAEA,SAEA,KAA2B,EAAAoQ,OAAA,OAKzB,sBAAI,oBAAK,C,IAAT,WACE,OAAIjmB,KAAK4R,SAAiB5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UACxC5R,KAAK+nB,Q,IAEd,SAAUlY,GAE+DmY,EAAnEhoB,KAAK0D,MAAMtB,OAAS,EAAAgf,UAAUgE,QAA2B,iBAAVvV,EAA0BvQ,SAASuQ,GAC3EA,EAEP7P,KAAK4R,SAAU5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UAAYoW,GAElDhoB,KAAK+nB,OAASC,EACdhoB,KAAKqmB,MAAM3Q,KAAO1V,KAAK+nB,OAAOtoB,WAC9BO,KAAKioB,QAAQpY,MAAQ7P,KAAK+nB,OAAOtoB,a,gCAwFrC,YAAAymB,MAAA,WACElmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAM2e,OACtCriB,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE7E,YAAAmY,UAAA,WACEnmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAM2e,OACtCriB,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMme,gBACpC7hB,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3EhO,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE3E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,WACE/Q,KAAKqmB,MAAM/iB,SAAWtD,KAAKsD,SAC3BtD,KAAKqmB,MAAMrY,OAAShO,KAAKgO,OACzBhO,KAAKqmB,MAAM5iB,MAAQzD,KAAKyD,MAEpBzD,KAAKuI,QACPvI,KAAKuI,MAAMjF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKuI,MAAM7E,MAAME,OACtG5D,KAAKuI,MAAMjF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAEtDhO,KAAKwI,SACPxI,KAAKwI,OAAOlF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKmC,MAAQzD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKwI,OAAO9E,MAAME,OAC1H5D,KAAKwI,OAAOlF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,IAI7D,YAAAsY,aAAA,SAAa5U,EAAewW,GAEgDF,EAAtEhoB,KAAK0D,MAAMtB,OAAS,EAAAgf,UAAUgE,QAA8B,iBAAb8C,EAA6B5oB,SAAS4oB,GAC9EA,EAEXloB,KAAK+nB,OAASC,EACdhoB,KAAKqmB,MAAM3Q,KAAO1V,KAAK+nB,OAAOtoB,WAC9BO,KAAKioB,QAAQpY,MAAQ7P,KAAK+nB,OAAOtoB,WAEjCO,KAAKwI,QAAWxI,KAAKwI,OAAwB,QAAExI,KAAK6P,QAGtD,YAAAkF,OAAA,SAAOzF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GACxBvP,KAAKumB,UAETvmB,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACMxV,KAAKumB,UAGX,YAAAxmB,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT4H,SAAU3M,KAAK2M,SAAS5M,YACxBqC,KAAMpC,KAAKoC,KACXsB,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChD8P,MAAO7P,KAAK6P,MACZ7B,OAAQhO,KAAKgO,OACbhE,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAI8W,EAAM3V,EAAMnB,EAAK0P,MAAO1P,EAAKyR,SAAUzR,EAAKoI,MAAOpI,EAAKqI,OAAQrI,EAAK6N,OAAQ7N,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAExI,GArLE,WACErL,EACAuO,EACA+B,EACArJ,EACAC,EACAwF,EACAtK,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IAPF,MAYE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAO/L,OAAO,EAAO,EAAF,KAAO,EAAA1R,SAAS6c,qBAAwB1e,GAASkO,EAC9FrJ,EACoB,kBAAVA,EACN,IAAI,EAAAwJ,SAASzQ,EAAM,EAAA0Q,aAAaC,GAAIvO,EAAMtB,OAAS,EAAAgf,UAAUkB,KAAO,SAAW,SAAU,GAAI,IAC7F,EAAAvQ,SAAS7R,YAAYoB,EAAMiH,GAE7B,KACFC,EACqB,kBAAXA,EACN,IAAI,EAAAuJ,SAASzQ,EAAM,EAAA0Q,aAAamF,IAAKzT,EAAMtB,OAAS,EAAAgf,UAAUkB,KAAO,SAAW,SAAU,GAAI,IAC9F,EAAAvQ,SAAS7R,YAAYoB,EAAMkH,GAE7B,KACFzD,EAAI4H,IACL,K,OACD,EAAKqB,OAASA,GAAkB,EAAK1M,KAAKoC,MAAMie,UAE5C,EAAKje,MAAMtB,OAAS,EAAAgf,UAAUgE,QAA2B,iBAAVvV,IAAoBA,EAAQvQ,SAASuQ,IACxF,EAAKkY,OAASlY,EAEd,EAAKwW,MAAQ,IAAI,EAAA1Q,MAAM,EAAKrU,KAAM,EAAKuO,MAAMpQ,WAAY,MAAM,GAAO,EAAO,CAC3EoN,SAAU,EAAKnJ,MAAMmJ,SACrBD,KAAM,EAAKlJ,MAAMkJ,KACjBiE,MAAO,EAAKnN,MAAMmN,MAClB/L,MAAO,EAAKpB,MAAMoB,OACjB,EAAKkJ,QACR,EAAKqY,MAAM1gB,GAAG,QAAS,WACrB,IAIM4J,EAJFlC,SAAS6R,gBAAkB,EAAK+I,UAClC,EAAKA,QAAQvkB,MAAMkb,WAAa,UAChC,EAAKqJ,QAAQvkB,MAAMmb,cAAgB,MAE/BtP,EAAe,EAAKjM,SAASuK,UAAU,EAAKvM,KAAKZ,KAAK8B,YAAYqL,WACtE,EAAKoa,QAAQvkB,MAAM+W,IAAOlL,EAAa/L,EAAI,EAAKlC,KAAKZ,KAAK8B,YAAYuL,iBAAiB0M,IAAM,EAAK,KAClG,EAAKwN,QAAQvkB,MAAMkX,KAAQrL,EAAahM,EAAI,EAAKjC,KAAKZ,KAAK8B,YAAYuL,iBAAiB6M,KAAO,EAAK,KACpG,EAAKqN,QAAQvkB,MAAMD,OAAS,EAAKA,MAAQ,GAAK,EAAKnC,KAAKZ,KAAK8B,YAAYyL,MAAQ,KACjF,EAAKga,QAAQvkB,MAAMsK,QAAU,EAAKA,OAAS,GAAK,EAAK1M,KAAKZ,KAAK8B,YAAYyL,MAAQ,KACnF,EAAKga,QAAQvkB,MAAMkM,WAAa,EAAKlM,MAAMkJ,KAC3C,EAAKqb,QAAQvkB,MAAMmJ,SAAWvN,SAAS,EAAKoE,MAAMmJ,SAAS8C,QAAQ,KAAM,KAAO,EAAKrO,KAAKZ,KAAK8B,YAAYyL,MAAQ,KACnH,EAAKga,QAAQvkB,MAAMoB,MAAQ,EAAKpB,MAAMoB,MACtC,EAAKmjB,QAAQvkB,MAAMme,gBAAkB,EAAKne,MAAMme,gBAChD,EAAKoG,QAAQvkB,MAAMykB,UAAY,EAAKzkB,MAAMmN,MAC1C,EAAKoX,QAAQtQ,WAGjB,EAAK8O,SAAS/kB,KAAK,EAAK2kB,OAExB,EAAK4B,QAAU5a,SAASC,cAAc,SACtC,EAAK2a,QAAQtJ,UAAY,qBACzB,EAAKsJ,QAAQG,YAAa,EAC1B,EAAKH,QAAQ7lB,KAAO,EAAKsB,MAAMtB,KAC/B,EAAK6lB,QAAQpY,MAAQ,EAAKA,MAAMpQ,WAChC,EAAKwoB,QAAQnJ,OAAS,WACpB,EAAKmJ,QAAQvkB,MAAMkb,WAAa,SAChC,EAAKqJ,QAAQvkB,MAAMmb,cAAgB,QAErC,EAAKoJ,QAAQlJ,SAAW,SAACsJ,GACvB,EAAKxY,MAAQwY,EAAM9W,OAAO1B,MAC1B,EAAKwW,MAAM3Q,KAAO,EAAK7F,MAAMpQ,YAE/B4N,SAASG,KAAKC,YAAY,EAAKwa,SAE3B,EAAK1f,QACP,EAAKA,MAAM5C,GAAG,UAAW,SAACyD,EAAUjB,GAC9BA,EAAUhI,OAAM,EAAK0P,MAAQ1H,EAAUhI,QAE7C,EAAKoI,MAAM5C,GAAG,OAAQ,SAAAxF,GAChBA,IAAM,EAAK0P,MAAQ1P,MAGvB,EAAKqI,QAAQ,EAAKA,OAAO7C,GAAG,UAAW,SAACyD,EAAUjB,GAAc,OAAAA,EAAUhI,KAAO,EAAK0P,Q,EAvGjF,EAAAoH,S,8pBCTb,IAQA,EARA,SAEA,SACA,SACA,SAEA,SAEA,KAA2B,EAAAgP,OAAA,OAMzB,sBAAI,mBAAI,C,IAAR,WACE,OAAIjmB,KAAK4R,SAAiB5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UACxC5R,KAAKsoB,O,IAEd,SAAS5S,GACH1V,KAAK4R,SACP5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UAAY8D,GAEjC1V,KAAKsoB,MAAQ5S,EACb1V,KAAKuoB,YAAcvoB,KAAKsoB,MACxBtoB,KAAK+Q,W,gCAkDT,YAAAmV,MAAA,WACElmB,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMoB,MACpC9E,KAAKyC,QAAQmK,KAAO5M,KAAK0D,MAAMmJ,SAAW,IAAM7M,KAAK0D,MAAMkJ,KAC3D5M,KAAKyC,QAAQ0M,aAAe,MAC5B,IAAI3L,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,EAAIhO,KAAKiN,WAAa,EAC1D1J,EAAIvD,KAAKsD,SAASC,EACG,SAArBvD,KAAK0D,MAAMmN,MACbtN,GAAK,EACyB,WAArBvD,KAAK0D,MAAMmN,MACpBtN,GAAKvD,KAAKyD,MAAQ,EAAIzD,KAAKgN,UAAY,EACT,UAArBhN,KAAK0D,MAAMmN,QACpBtN,GAAKvD,KAAKyD,MAAQzD,KAAKgN,UAAY,GAErChN,KAAKyC,QAAQ2M,SAASpP,KAAKuoB,YAAahlB,EAAGC,IAE7C,YAAA2iB,UAAA,WACEnmB,KAAKyC,QAAQkC,YAAc,OAC3B3E,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMoB,MACpC9E,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3EhO,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE3E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,WACE/Q,KAAKyC,QAAQmK,KAAO5M,KAAK0D,MAAMmJ,SAAW,IAAM7M,KAAK0D,MAAMkJ,KAC3D,IAAIE,EAAU9M,KAAKyC,QAAQsK,YAAY/M,KAAKuoB,aAC5CvoB,KAAKyC,QAAQmK,KAAO,KACpB5M,KAAKgN,UAAYF,EAAQrJ,MAEzBzD,KAAKiN,WAAaH,EAAQI,wBAA0BJ,EAAQK,8BAC7B,IAApBnN,KAAKiN,cACVG,EAAIC,SAASC,cAAc,SAC7B5J,MAAMkJ,KAAO5M,KAAK0D,MAAMmJ,SAAW,IAAM7M,KAAK0D,MAAMkJ,KACtDQ,EAAEG,YAAc,IAChBF,SAASG,KAAKC,YAAYL,GAC1BpN,KAAKiN,WAAaG,EAAEM,aACpBL,SAASG,KAAKG,YAAYP,IAGxBpN,KAAKuI,QACPvI,KAAKuI,MAAMjF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKuI,MAAM7E,MAAME,OACtG5D,KAAKuI,MAAMjF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAEtDhO,KAAKwI,SACPxI,KAAKwI,OAAOlF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKmC,MAAQzD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKwI,OAAO9E,MAAME,OAC1H5D,KAAKwI,OAAOlF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,IAI7D,YAAAsY,aAAA,SAAa5U,EAAewW,GAC1BloB,KAAKsoB,MAAQJ,EACbloB,KAAKuoB,YAAcvoB,KAAKsoB,MACxBtoB,KAAK+Q,SAEL/Q,KAAKwI,QAAWxI,KAAKwI,OAAwB,QAAExI,KAAK0V,OAGtD,YAAAX,OAAA,SAAOzF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GACxBvP,KAAKumB,UAETvmB,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACMxV,KAAKumB,UAGX,YAAAxmB,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB2D,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChDiO,OAAQhO,KAAKgO,OACb0H,KAAM1V,KAAK0V,KACX1L,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAIwV,EAAMrU,EAAMnB,EAAKuV,KAAMvV,EAAKyR,SAAUzR,EAAKoI,MAAOpI,EAAKqI,OAAQrI,EAAKuD,MAAOvD,EAAK6N,OAAQ7N,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAEvI,GAjKE,WACErL,EACAoU,EACA9D,EACArJ,EACAC,EACA9E,EACAsK,EACAjJ,EACA4H,QAPA,IAAA+I,MAAA,SAIA,IAAAhS,MAAA,IANF,MAYE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAOrN,OAAO,EAAO,EAAF,KAAO,EAAApQ,SAASgd,qBAAwB7e,GAASkO,EAC9FrJ,EACoB,kBAAVA,EACN,IAAI,EAAAwJ,SAASzQ,EAAM,EAAA0Q,aAAaC,GAAI,SAAU,GAAI,IAClD,EAAAF,SAAS7R,YAAYoB,EAAMiH,GAE7B,KACFC,EACqB,kBAAXA,EACN,IAAI,EAAAuJ,SAASzQ,EAAM,EAAA0Q,aAAamF,IAAK,SAAU,GAAI,IACnD,EAAApF,SAAS7R,YAAYoB,EAAMkH,GAE7B,KACFzD,EAAI4H,IACL,K,OAED,EAAK2b,MAAQ,EAAK1W,SAAW,EAAKtQ,KAAKgG,MAAM,EAAKsK,UAAY8D,EAC9D,EAAK6S,YAAc,EAAKD,MACxB,EAAKvX,SAGA,EAAK/C,OADLA,GAAsB,EAAKf,WAG5B,EAAK1E,QACP,EAAKA,MAAM5C,GAAG,UAAW,SAACyD,EAAUjB,GAC9BA,EAAUhI,OAAM,EAAKuV,KAAOvN,EAAUhI,QAE5C,EAAKoI,MAAM5C,GAAG,OAAQ,SAAAxF,GAChBA,IAAM,EAAKuV,KAAOvV,MAGtB,EAAKqI,QAAQ,EAAKA,OAAO7C,GAAG,UAAW,SAACyD,EAAUjB,GAAc,OAAAA,EAAUhI,KAAO,EAAKuV,O,EA/DjF,EAAAC,S,+pBCRb,IASA,EATA,SAEA,SACA,SACA,SACA,SAEA,SAEA,KAA4B,EAAAsQ,OAAA,OAI1B,sBAAI,uBAAQ,C,IAAZ,WACE,GAAIjmB,KAAK4R,SAAU,CACjB,IAAI/B,EAAQ7P,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UAEjC,OADA/B,EAAgC,IAAxB7P,KAAKyW,QAAQ/W,OAAe,OAAUM,KAAKyW,QAAQhV,SAASoO,GAASA,EAAQ7P,KAAKyW,QAAQ,GAGpG,OAAOzW,KAAKwoB,W,IAEd,SAAaC,GACP5Y,EAAgC,IAAxB7P,KAAKyW,QAAQ/W,OAAe,OAAUM,KAAKyW,QAAQhV,SAASgnB,GAAYA,EAAWzoB,KAAKyW,QAAQ,GACxGzW,KAAK4R,SAAU5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UAAY/B,GAElD7P,KAAKwoB,UAAY3Y,EACjB7P,KAAKqmB,MAAM3Q,KAAO1V,KAAKyoB,W,gCA+C3B,YAAAvC,MAAA,WACElmB,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAM+e,WACpCziB,KAAKyC,QAAQ+B,YACbxE,KAAKyC,QAAQgC,OAAOzE,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GACrEhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAiB,IAAbvD,KAAKyD,MAAazD,KAAKsD,SAASE,EAAkB,IAAdxD,KAAKgO,QAC/EhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAiB,IAAbvD,KAAKyD,MAAazD,KAAKsD,SAASE,EAAkB,IAAdxD,KAAKgO,QAC/EhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GACrEhO,KAAKyC,QAAQgV,YACbzX,KAAKyC,QAAQsV,OAEb/X,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAM+e,WACpCziB,KAAKyC,QAAQ+B,YACbxE,KAAKyC,QAAQgC,OAAOzE,KAAKsD,SAASC,EAAIvD,KAAKyD,MAAOzD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAClFhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAiB,IAAbvD,KAAKyD,MAAazD,KAAKsD,SAASE,EAAkB,IAAdxD,KAAKgO,QAC/EhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAiB,IAAbvD,KAAKyD,MAAazD,KAAKsD,SAASE,EAAkB,IAAdxD,KAAKgO,QAC/EhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAIvD,KAAKyD,MAAOzD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAClFhO,KAAKyC,QAAQgV,YACbzX,KAAKyC,QAAQsV,QAEf,YAAAoO,UAAA,WACEnmB,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAM+e,WACpCziB,KAAKyC,QAAQkC,YAAc,OAC3B3E,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QACzEhO,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE7E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,WACE/Q,KAAKqmB,MAAM5iB,MAAqB,GAAbzD,KAAKyD,MACxBzD,KAAKqmB,MAAM/iB,SAASC,EAAIvD,KAAKsD,SAASC,EAAiB,IAAbvD,KAAKyD,MAC/CzD,KAAKqmB,MAAM/iB,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,EAAIhO,KAAKqmB,MAAMrY,OAAS,EAE5EhO,KAAKuI,QACPvI,KAAKuI,MAAMjF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKuI,MAAM7E,MAAME,OACtG5D,KAAKuI,MAAMjF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAEtDhO,KAAKwI,SACPxI,KAAKwI,OAAOlF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKmC,MAAQzD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKwI,OAAO9E,MAAME,OAC1H5D,KAAKwI,OAAOlF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,IAI7D,YAAAsY,aAAA,SAAa5U,EAAewW,GACtBrY,EAAgC,IAAxB7P,KAAKyW,QAAQ/W,OAAe,OAAUM,KAAKyW,QAAQhV,SAASymB,GAAYA,EAAWloB,KAAKyW,QAAQ,GAC5GzW,KAAKwoB,UAAY3Y,EACjB7P,KAAKqmB,MAAM3Q,KAAO1V,KAAKyoB,SAEvBzoB,KAAKwI,QAAWxI,KAAKwI,OAAwB,QAAExI,KAAKyoB,WAGtD,YAAA1T,OAAA,SAAOzF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GACxBvP,KAAKumB,UAETvmB,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC/B,IAAIvP,KAAKumB,WAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,GAEb,IAAxBvP,KAAKyW,QAAQ/W,QAAjB,CACA,IAAIgpB,EACJ,GAAInZ,EAAahM,EAAIvD,KAAKsD,SAASC,EAAiB,IAAbvD,KAAKyD,MAC1CilB,GAAa,MACR,MAAInZ,EAAahM,EAAIvD,KAAKsD,SAASC,EAAiB,IAAbvD,KAAKyD,OAE5C,OADLilB,EAAY,EAEd1oB,KAAKyoB,SAAWzoB,KAAKyW,UAAWzW,KAAKyW,QAAQxU,QAAQjC,KAAKyoB,UAAYC,GAAa1oB,KAAKyW,QAAQ/W,OAAUM,KAAKyW,QAAQ/W,QAAUM,KAAKyW,QAAQ/W,QAC9IM,KAAKqmB,MAAM3Q,KAAO1V,KAAKyoB,SAEvBzoB,KAAKS,KAAK,SAAUT,KAAMA,KAAKyoB,YAEjC,YAAAnT,OAAA,SAAOhG,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACMxV,KAAKumB,UAGX,YAAAxmB,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB2D,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChD0W,QAASzW,KAAKyW,QACdzI,OAAQhO,KAAKgO,OACbhE,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAIuW,EAAOpV,EAAMnB,EAAKsW,QAAStW,EAAKyR,SAAUzR,EAAKoI,MAAOpI,EAAKqI,OAAQrI,EAAK6N,OAAQ7N,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAE3I,GAnKE,WACErL,EACOmV,EACP7E,EACArJ,EACAC,EACAwF,EACAtK,EACAqB,EACA4H,QAPO,IAAA8J,MAAA,SAKP,IAAA/S,MAAA,IAPF,MAYE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAOtM,QAAQ,EAAO,EAAF,KAAO,EAAAnR,SAASid,sBAAyB9e,GAASkO,EAChGrJ,EACoB,kBAAVA,EACN,IAAI,EAAAwJ,SAASzQ,EAAM,EAAA0Q,aAAaC,GAAI,SAAU,GAAI,IAClD,EAAAF,SAAS7R,YAAYoB,EAAMiH,GAE7B,KACFC,EACqB,kBAAXA,EACN,IAAI,EAAAuJ,SAASzQ,EAAM,EAAA0Q,aAAamF,IAAK,SAAU,GAAI,IACnD,EAAApF,SAAS7R,YAAYoB,EAAMkH,GAE7B,KACFzD,EAAI4H,IACL,K,OAxBM,EAAA8J,UAyBP,EAAKzI,OAASA,GAAkB,EAAK1M,KAAKoC,MAAMie,UAChD,EAAK6G,UAAoC,IAAxB,EAAK/R,QAAQ/W,OAAe,OAAS,EAAK+W,QAAQ,GACnE,EAAK4P,MAAQ,IAAI,EAAA1Q,MAAM,EAAKrU,KAAM,EAAKmnB,SAAU,MAAM,GAAO,EAAO,EAAF,CAAI5X,MAAO,UAAa,EAAKnN,OAAS,EAAKsK,QAC9G,EAAKyY,SAAS/kB,KAAK,EAAK2kB,OAEpB,EAAK9d,QACP,EAAKA,MAAM5C,GAAG,UAAW,SAACyD,EAAUjB,GAC9BA,EAAUhI,OAAM,EAAKsoB,SAAWtgB,EAAUhI,QAEhD,EAAKoI,MAAM5C,GAAG,OAAQ,SAAAxF,GAChBA,IAAM,EAAKsoB,SAAWtoB,MAG1B,EAAKqI,QAAQ,EAAKA,OAAO7C,GAAG,UAAW,SAACyD,EAAUjB,GAAc,OAAAA,EAAUhI,KAAO,EAAKsoB,W,EA7DjF,EAAA/R,U,+pBCTb,IASA,EATA,SAEA,SACA,SACA,SACA,SAEA,SAEA,KAA4B,EAAAuP,OAAA,OAI1B,sBAAI,oBAAK,C,IAAT,WACE,OAAIjmB,KAAK4R,SAAiB5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UACxC5R,KAAK+nB,Q,IAEd,SAAUlY,GACRA,EAAQ,EAAAsU,MAAMtU,EAAO7P,KAAK+V,IAAK/V,KAAK0P,KAChC1P,KAAK4R,SAAU5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UAAY/B,GAElD7P,KAAK+nB,OAASlY,EACd7P,KAAKS,KAAK,SAAUT,KAAMA,KAAK6P,OAC/B7P,KAAK+Q,W,gCAgDT,YAAAmV,MAAA,WACElmB,KAAKyC,QAAQmC,UAAY5E,KAAK0D,MAAMkf,WACpC5iB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoB,MACtC9E,KAAKyC,QAAQkmB,QAAU,OAEvB,IAAItnB,EAAQvC,KAAK4Q,IAAI1P,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASC,EAAIvD,KAAK4oB,UAAY,GACrEvnB,IAAUrB,KAAKsD,SAASC,IAC1BvD,KAAKyC,QAAQ+B,YACbxE,KAAKyC,QAAQgC,OAAOzE,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GACrEhO,KAAKyC,QAAQ+U,OAAOnW,EAAOrB,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAC3DhO,KAAKyC,QAAQoC,WAEfxD,EAAQvC,KAAKiX,IAAI/V,KAAKsD,SAASC,EAAI,EAAIvD,KAAK0D,MAAMmf,YAAc7iB,KAAK4oB,UAAY,EAAG5oB,KAAKsD,SAASC,EAAIvD,KAAKyD,UAC5FzD,KAAKsD,SAASC,EAAIvD,KAAKyD,QACpCzD,KAAKyC,QAAQ+B,YACbxE,KAAKyC,QAAQgC,OAAOpD,EAAOrB,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAC3DhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAIvD,KAAKyD,MAAOzD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAClFhO,KAAKyC,QAAQoC,UAGf7E,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMif,WACpC3iB,KAAKyC,QAAQ+B,YACbxE,KAAKyC,QAAQmV,IAAI5X,KAAKsD,SAASC,EAAIvD,KAAK0D,MAAMmf,YAAc7iB,KAAK4oB,UAAW5oB,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,EAAGhO,KAAK0D,MAAMmf,YAAa,EAAG,EAAI/jB,KAAK+Y,IACnJ7X,KAAKyC,QAAQsV,QAEf,YAAAoO,UAAA,WACEnmB,KAAKyC,QAAQkC,YAAc,OAC3B3E,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMoB,MACpC9E,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3EhO,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE3E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,WACE/Q,KAAK4oB,UAAY,EAAAC,YAAY,EAAAhpB,UAAUG,KAAK6P,MAAO7P,KAAK+V,IAAK/V,KAAK0P,KAAM,EAAG1P,KAAKyD,MAAQ,EAAIzD,KAAK0D,MAAMmf,aAEnG7iB,KAAKuI,QACPvI,KAAKuI,MAAMjF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKuI,MAAM7E,MAAME,OACtG5D,KAAKuI,MAAMjF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAEtDhO,KAAKwI,SACPxI,KAAKwI,OAAOlF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKmC,MAAQzD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKwI,OAAO9E,MAAME,OAC1H5D,KAAKwI,OAAOlF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,IAI7D,YAAAsY,aAAA,SAAa5U,EAAewW,GAC1BloB,KAAK+nB,OAASG,EACdloB,KAAK+Q,SACL/Q,KAAKS,KAAK,SAAUT,KAAMA,KAAK6P,OAE/B7P,KAAKwI,QAAWxI,KAAKwI,OAAwB,QAAExI,KAAK6P,QAGtD,YAAAkF,OAAA,SAAOzF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GACxBvP,KAAKumB,UAETvmB,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC1BvP,KAAKumB,WAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,GAEpC/L,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,EAAIhO,KAAK0D,MAAMkf,WAAa,EACpE5iB,KAAK4oB,UAAYrZ,EAAa4U,MAAMnkB,KAAKsD,SAASC,EAAIvD,KAAK0D,MAAMmf,YAAa7iB,KAAKsD,SAASC,EAAIvD,KAAKyD,MAAQzD,KAAK0D,MAAMmf,YAAarf,EAAGA,GAAGmL,SAAS3O,KAAKsD,SAASC,EAAIvD,KAAK0D,MAAMmf,YAAa,GAAGtf,EACjMvD,KAAK6P,MAAQiZ,WAAW,EAAAD,YAAY,EAAAhpB,UAAUG,KAAK4oB,UAAW,EAAG5oB,KAAKyD,MAAQ,EAAIzD,KAAK0D,MAAMmf,aAAc7iB,KAAK+V,IAAK/V,KAAK0P,KAAK5P,QAAQE,KAAKgW,cAE9I,YAAAtC,QAAA,SAAQpE,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACMxV,KAAKumB,UAGX,YAAAxmB,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB2D,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChDgW,IAAK/V,KAAK+V,IACVrG,IAAK1P,KAAK0P,IACVG,MAAO7P,KAAK6P,MACZmG,UAAWhW,KAAKgW,UAChBhI,OAAQhO,KAAKgO,OACbhE,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAI8V,EAAO3U,EAAMnB,EAAK4V,IAAK5V,EAAKuP,IAAKvP,EAAK0P,MAAO1P,EAAK6V,UAAW7V,EAAKyR,SAAUzR,EAAKoI,MAAOpI,EAAKqI,OAAQrI,EAAK6N,OAAQ7N,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAE7K,GAnKE,WACErL,EACOyU,EAAoBrG,EAC3BG,EACOmG,EACPpE,EACArJ,EACAC,EACAwF,EACAtK,EACAqB,EACA4H,QAPO,IAAAqJ,MAAA,QAKP,IAAAtS,MAAA,IATF,MAcE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAO/M,QAAQ,EAAM,EAAF,KAAO,EAAA1Q,SAASmd,mBAAmB1U,IAAYtK,GAASkO,EACrGrJ,EACoB,kBAAVA,EACN,IAAI,EAAAwJ,SAASzQ,EAAM,EAAA0Q,aAAaC,GAAI,SAAU,GAAI,IAClD,EAAAF,SAAS7R,YAAYoB,EAAMiH,GAE7B,KACFC,EACqB,kBAAXA,EACN,IAAI,EAAAuJ,SAASzQ,EAAM,EAAA0Q,aAAamF,IAAK,SAAU,GAAI,IACnD,EAAApF,SAAS7R,YAAYoB,EAAMkH,GAE7B,KACFzD,EAAI4H,IACL,K,OA1BM,EAAAoJ,MAAoB,EAAArG,MAEpB,EAAAsG,YA0BP,EAAKhI,OAASA,GAAkB,EAAK1M,KAAKoC,MAAMie,UAChD,EAAK9R,MAAQiZ,WAAWjZ,EAAM/P,QAAQ,EAAKkW,YAEvC,EAAKzN,QACP,EAAKA,MAAM5C,GAAG,UAAW,SAACyD,EAAUjB,GAC9BA,EAAUhI,OAAM,EAAK0P,MAAQ1H,EAAUhI,QAE7C,EAAKoI,MAAM5C,GAAG,OAAQ,SAAAxF,GAChBA,IAAM,EAAK0P,MAAQ1P,MAGvB,EAAKqI,QAAQ,EAAKA,OAAO7C,GAAG,UAAW,SAACyD,EAAUjB,GAAc,OAAAA,EAAUhI,KAAO,EAAK0P,Q,EA3DjF,EAAAoG,U,6pBCTb,IAWA,EAXA,SAEA,SACA,SACA,SACA,SACA,SACA,SAEA,SAEA,KAA4B,EAAAgQ,OAAA,OAM1B,sBAAI,mBAAI,C,IAAR,WACE,OAAIjmB,KAAK4R,SAAiB5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UACxC5R,KAAK+oB,O,IAEd,SAASC,GACHhpB,KAAK4R,SAAU5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UAAYoX,GAElDhpB,KAAK+oB,MAAQC,EACbhpB,KAAKqmB,MAAM3Q,KAAO1V,KAAK+oB,MAAM1iB,KAAK4iB,UAAU,EAAGjpB,KAAK+oB,MAAM1iB,KAAK5G,WAAWypB,YAAY,MACtFlpB,KAAKS,KAAK,SAAUT,KAAMA,KAAK+oB,S,gCA4DnC,YAAA7C,MAAA,WACElmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YACtC9O,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE7E,YAAAmY,UAAA,WACEnmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoL,YACtC9O,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMoB,MACpC9E,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3EhO,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE3E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,WACE/Q,KAAKqmB,MAAM5iB,MAAQzD,KAAKyD,MACxBzD,KAAKqmB,MAAMrY,OAAShO,KAAKgO,OACzBhO,KAAKqmB,MAAM/iB,SAAWtD,KAAKsD,SAE3BtD,KAAKgmB,SAASviB,MAAqB,GAAbzD,KAAKyD,MAC3BzD,KAAKgmB,SAAS1iB,SAASC,EAAIvD,KAAKsD,SAASC,EAAI,EAC7CvD,KAAKgmB,SAAS1iB,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,EAAIhO,KAAKgmB,SAAShY,OAAS,EAElFhO,KAAKuI,QACPvI,KAAKuI,MAAMjF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKuI,MAAM7E,MAAME,OACtG5D,KAAKuI,MAAMjF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAEtDhO,KAAKwI,SACPxI,KAAKwI,OAAOlF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKmC,MAAQzD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKwI,OAAO9E,MAAME,OAC1H5D,KAAKwI,OAAOlF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,IAI7D,YAAAsY,aAAA,SAAa5U,EAAewW,GAC1BloB,KAAK+oB,MAAQb,EACbloB,KAAKqmB,MAAM3Q,KAAO1V,KAAK+oB,MAAM1iB,KAAK4iB,UAAU,EAAGjpB,KAAK+oB,MAAM1iB,KAAK5G,WAAWypB,YAAY,MACtFlpB,KAAKS,KAAK,SAAUT,KAAMA,KAAK+oB,OAE/B/oB,KAAKwI,QAAWxI,KAAKwI,OAAwB,QAAExI,KAAK+oB,QAGtD,YAAAhU,OAAA,SAAOzF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GACxBvP,KAAKumB,UAETvmB,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA+F,OAAA,SAAOhG,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACMxV,KAAKumB,UAGX,YAAAxmB,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB2D,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChD6W,OAAQ5W,KAAK4W,OACb5I,OAAQhO,KAAKgO,OACbhE,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAI0W,EAAOvV,EAAMnB,EAAKyW,OAAQzW,EAAKyR,SAAUzR,EAAKoI,MAAOpI,EAAKqI,OAAQrI,EAAK6N,OAAQ7N,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAE1I,GAzJE,WACErL,EACOsV,EACPhF,EACArJ,EACAC,EACAwF,EACAtK,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IAPF,MAYE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAOnM,QAAQ,EAAO,EAAF,KAAO,EAAAtR,SAASud,sBAAyBpf,GAASkO,EAChGrJ,EACoB,kBAAVA,EACN,IAAI,EAAAwJ,SAASzQ,EAAM,EAAA0Q,aAAaC,GAAI,OAAQ,GAAI,IAChD,EAAAF,SAAS7R,YAAYoB,EAAMiH,GAE7B,KACFC,EACqB,kBAAXA,EACN,IAAI,EAAAuJ,SAASzQ,EAAM,EAAA0Q,aAAamF,IAAK,OAAQ,GAAI,IACjD,EAAApF,SAAS7R,YAAYoB,EAAMkH,GAE7B,KACFzD,EAAI4H,IACL,K,OAxBM,EAAAiK,SA0BP,EAAK5I,OAASA,GAAkB,EAAK1M,KAAKoC,MAAMie,UAEhD,EAAKwH,UAAY9b,SAASC,cAAc,SACxC,EAAK6b,UAAU/mB,KAAO,OACtB,IAAa,EAAK+mB,UAAUvS,OAASA,GACrC,EAAKuS,UAAUpK,SAAW,WACU,EAA9B,EAAKoK,UAAUC,MAAM1pB,SACvB,EAAKspB,KAAO,EAAKG,UAAUC,MAAM,KAIrC,EAAK/C,MAAQ,IAAI,EAAA1Q,MAAM,EAAKrU,KAAM,SAAU,MAAM,GAAO,EAAO,EAAF,CAAIuP,MAAO,UAAa,EAAKnN,OAAS,EAAKsK,QACzG,EAAKqY,MAAM1gB,GAAG,QAAS,WAAM,SAAKwjB,UAAUE,UAE5C,EAAKrD,SAAW,IAAI,EAAAnQ,MAAM,EAAKvU,KAAM,EAAA0kB,UACrC,EAAKS,SAAS/kB,KAAK,EAAK2kB,MAAO,EAAKL,UAEhC,EAAKzd,QACP,EAAKA,MAAM5C,GAAG,UAAW,SAACyD,EAAUjB,GAC9BA,EAAUhI,OAAM,EAAK6oB,KAAO7gB,EAAUhI,QAE5C,EAAKoI,MAAM5C,GAAG,OAAQ,SAAAxF,GAChBA,IAAM,EAAK6oB,KAAO7oB,MAGtB,EAAKqI,QAAQ,EAAKA,OAAO7C,GAAG,UAAW,SAACyD,EAAUjB,GAAc,OAAAA,EAAUhI,KAAO,EAAK6oB,O,EAxEjF,EAAAnS,U,+pBCXb,IAQA,EARA,SAEA,SACA,SACA,SAEA,SAEA,KAA4B,EAAAoP,OAAA,OAG1B,sBAAI,sBAAO,C,IAAX,WACE,OAAIjmB,KAAK4R,SAAiB5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UACxC5R,KAAKspB,U,IAEd,SAAYC,GACNvpB,KAAK4R,SAAU5R,KAAKsB,KAAKgG,MAAMtH,KAAK4R,UAAY2X,GAElDvpB,KAAKspB,SAAWC,EAChBvpB,KAAKS,KAAK,SAAUT,KAAMA,KAAKupB,W,gCA6CnC,YAAArD,MAAA,WACElmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMme,gBACtC7hB,KAAKyC,QAAQmC,UAA0B,IAAd5E,KAAKgO,OAC9BhO,KAAKyC,QAAQkmB,QAAU,QACvB3oB,KAAKyC,QAAQ+B,YACbxE,KAAKyC,QAAQgC,OAAOzE,KAAKsD,SAASC,EAAIvD,KAAKyC,QAAQmC,UAAY,EAAG5E,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAClGhO,KAAKyC,QAAQ+U,OAAOxX,KAAKsD,SAASC,EAAIvD,KAAKyD,MAAQzD,KAAKyC,QAAQmC,UAAY,EAAG5E,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAC/GhO,KAAKyC,QAAQoC,SAEb7E,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMoB,MACpC9E,KAAKyC,QAAQ+B,YACbxE,KAAKyC,QAAQmV,IAAI5X,KAAKupB,QAAUvpB,KAAKsD,SAASC,EAAIvD,KAAKyD,MAAQzD,KAAKgO,OAAS,EAAIhO,KAAKsD,SAASC,EAAIvD,KAAKgO,OAAS,EAAGhO,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,EAAGhO,KAAKgO,OAAS,EAAG,EAAG,EAAIlP,KAAK+Y,IACpL7X,KAAKyC,QAAQsV,QAEf,YAAAoO,UAAA,WACEnmB,KAAKyC,QAAQkC,YAAc3E,KAAK0D,MAAMoB,MACtC9E,KAAKyC,QAAQsM,UAAY/O,KAAK0D,MAAMme,gBACpC7hB,KAAKyC,QAAQuM,WAAWhP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,QAC3EhO,KAAKyC,QAAQwM,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAE3E,YAAAoY,SAAA,WACEpmB,KAAK2Q,aAAa5B,UAAY/O,KAAK2M,SAASvM,SAC5CJ,KAAK2Q,aAAa1B,SAASjP,KAAKsD,SAASC,EAAGvD,KAAKsD,SAASE,EAAGxD,KAAKyD,MAAOzD,KAAKgO,SAEhF,YAAA+C,OAAA,WACM/Q,KAAKuI,QACPvI,KAAKuI,MAAMjF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKuI,MAAM7E,MAAME,OACtG5D,KAAKuI,MAAMjF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,GAEtDhO,KAAKwI,SACPxI,KAAKwI,OAAOlF,SAASC,EAAIvD,KAAKsB,KAAKgC,SAASC,EAAIvD,KAAKsB,KAAKmC,MAAQzD,KAAKsB,KAAKoC,MAAMC,oBAAsB3D,KAAKwI,OAAO9E,MAAME,OAC1H5D,KAAKwI,OAAOlF,SAASE,EAAIxD,KAAKsD,SAASE,EAAIxD,KAAKgO,OAAS,IAI7D,YAAAsY,aAAA,SAAa5U,EAAewW,GAC1BloB,KAAKspB,SAAWpB,EAChBloB,KAAKS,KAAK,SAAUT,KAAMA,KAAKupB,SAE/BvpB,KAAKwI,QAAWxI,KAAKwI,OAAwB,QAAExI,KAAKupB,UAGtD,YAAAxU,OAAA,SAAOzF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAqF,OAAA,SAAOtF,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAA4F,KAAA,SAAK7F,EAAyBC,GACxBvP,KAAKumB,UAETvmB,KAAKS,KAAK,KAAMT,KAAMsP,EAAgBC,IAExC,YAAAF,QAAA,SAAQC,EAAyBC,GAC3BvP,KAAKumB,WAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,GAEzCvP,KAAKupB,SAAWvpB,KAAKupB,UAEvB,YAAAjU,OAAA,SAAOhG,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAmE,QAAA,SAAQpE,EAAyBC,GAC3BvP,KAAKumB,UAETvmB,KAAKS,KAAK,QAAST,KAAMsP,EAAgBC,IAE3C,YAAA1N,OAAA,SAAOyN,EAAyBC,GAC1BvP,KAAKumB,UAETvmB,KAAKS,KAAK,OAAQT,KAAMsP,EAAgBC,IAE1C,YAAAiG,cAAA,WACMxV,KAAKumB,UAGX,YAAAxmB,UAAA,WACE,MAAO,CACLgF,GAAI/E,KAAK+E,GACT3C,KAAMpC,KAAKoC,KACXuK,SAAU3M,KAAK2M,SAAS5M,YACxB2D,MAAO1D,KAAK0D,MACZkO,SAAU5R,KAAK4R,SACfrJ,MAAOvI,KAAKuI,MAAQvI,KAAKuI,MAAMxI,YAAc,KAC7CyI,OAAQxI,KAAKwI,OAASxI,KAAKwI,OAAOzI,YAAc,KAChDwpB,QAASvpB,KAAKupB,QACdvb,OAAQhO,KAAKgO,OACbhE,OAAQ,KAGL,EAAA9J,YAAP,SAAmBoB,EAAYnB,GAC7B,OAAO,IAAIoW,EAAOjV,EAAMnB,EAAKyR,SAAUzR,EAAKoI,MAAOpI,EAAKqI,OAAQrI,EAAK6N,OAAQ7N,EAAKuD,MAAOvD,EAAK4E,GAAI,EAAAnG,MAAMsB,YAAYC,EAAKwM,YAE7H,GA7IE,WACErL,EACAsQ,EACArJ,EACAC,EACAwF,EACAtK,EACAqB,EACA4H,QAFA,IAAAjJ,MAAA,IANF,MAWE,YAAMpC,EAAM,EAAA0C,QAAQyU,OAAQ,EAAAuK,OAAOzM,QAAQ,EAAO,EAAF,KAAO,EAAAhR,SAASwd,sBAAyBrf,GAASkO,EAChGrJ,EACoB,kBAAVA,EACN,IAAI,EAAAwJ,SAASzQ,EAAM,EAAA0Q,aAAaC,GAAI,UAAW,GAAI,IACnD,EAAAF,SAAS7R,YAAYoB,EAAMiH,GAE7B,KACFC,EACqB,kBAAXA,EACN,IAAI,EAAAuJ,SAASzQ,EAAM,EAAA0Q,aAAamF,IAAK,UAAW,GAAI,IACpD,EAAApF,SAAS7R,YAAYoB,EAAMkH,GAE7B,KACFzD,EAAI4H,IACL,K,OAvCH,EAAA2c,UAAoB,EAyClB,EAAKA,WAAW,EAAK1X,UAAW,EAAKtQ,KAAKgG,MAAM,EAAKsK,UACrD,EAAK5D,OAASA,GAAkB,EAAK1M,KAAKoC,MAAMie,UAE5C,EAAKpZ,QACP,EAAKA,MAAM5C,GAAG,UAAW,SAACyD,EAAUjB,GAC9BA,EAAUhI,OAAM,EAAKopB,QAAUphB,EAAUhI,QAE/C,EAAKoI,MAAM5C,GAAG,OAAQ,SAAAxF,QACA,IAATA,IAAsB,EAAKopB,QAAUppB,MAGhD,EAAKqI,QAAQ,EAAKA,OAAO7C,GAAG,UAAW,SAACyD,EAAUjB,GAAc,OAAAA,EAAUhI,KAAO,EAAKopB,U,EArDjF,EAAAhT,U,2bCRb,IASA,EATA,SACA,SAIA,SACA,SAGA,KAAqC,EAAA9Q,MAAA,OAWnC,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOzF,KAAKwpB,W,IAEd,SAAajD,GACXvmB,KAAKwpB,UAAYjD,EACjBvmB,KAAKymB,SAAS1e,QAAQ,SAAAkC,GAAS,OAAAA,EAAMsc,SAAWA,K,gCAkClD,YAAAkD,OAAA,SAAOzf,G,MACD0f,MAAMC,QAAQ3f,IAChB,EAAAhK,KAAKymB,UAAS/kB,KAAI,QAAIsI,GAEtBhK,KAAKymB,SAAS/kB,KAAKsI,GAErBhK,KAAKgR,UAEP,YAAAA,OAAA,WACEhR,KAAK+Q,SACL/Q,KAAKymB,SAAS1e,QAAQ,SAAAkC,GAAS,OAAAA,EAAM+G,YAEvC,YAAAxE,kBAAA,WACE,IAEIoB,EAFA5N,KAAKsB,KAAK4B,YAAYC,YAAc,EAAAC,UAAU4P,YAE9CpF,EAAU5N,KAAKsD,SAASuK,UAAU7N,KAAKsB,KAAKZ,KAAK8B,YAAYqL,WACjE7N,KAAKkD,YAAc,EAAA4K,WACjB,EAAG,EACH9N,KAAKsB,KAAKZ,KAAK8B,YAAYuL,iBAAiBtK,MAAOzD,KAAKsB,KAAKZ,KAAK8B,YAAYuL,iBAAiBC,OAC/FJ,EAAQrK,EAAGqK,EAAQpK,EACnBoK,EAAQrK,EAAIvD,KAAKyD,MAAQzD,KAAKsB,KAAKZ,KAAK8B,YAAYyL,MACpDL,EAAQpK,EAAIxD,KAAKgO,OAAShO,KAAKsB,KAAKZ,KAAK8B,YAAYyL,OAGvDjO,KAAKymB,SAAS1e,QAAQ,SAAAkC,GAAS,OAAAA,EAAMuC,wBAEvC,YAAAE,YAAA,SAAYC,GAGV,IAAKA,EAEH,IADAA,EAAW,EAAA/N,MAAMD,SACVqB,KAAKsB,KAAKuS,aAAalH,EAAStM,aAAeL,KAAKsB,KAAKmS,mBAAmB9G,EAAStM,aAAasM,EAAW,EAAA/N,MAAMD,SAE5HqB,KAAK2M,SAAWA,EAChB3M,KAAKsB,KAAKuS,aAAa7T,KAAK2M,SAAStM,YAAcL,MAErD,YAAAuC,OAAA,WACMvC,KAAKkD,cAAgB,EAAAoL,SAASM,UAE9B5O,KAAKsB,KAAK4B,YAAY+P,MAAQ,EAAAC,IAAIE,MACpCpT,KAAKyC,QAAQC,OACb1C,KAAKmmB,YACLnmB,KAAKyC,QAAQG,WACJ5C,KAAKsB,KAAK4B,YAAY+P,MAAQ,EAAAC,IAAIC,MAC3CnT,KAAKyC,QAAQC,OACb1C,KAAKkmB,QACLlmB,KAAKyC,QAAQG,UAEb5C,KAAK2Q,aAAajO,OAClB1C,KAAKomB,WACLpmB,KAAK2Q,aAAa/N,WAEd5C,KAAKoC,OAAS,EAAA4gB,OAAOlP,YACvB9T,KAAKyC,QAAQC,OACb1C,KAAKmmB,YACLnmB,KAAKyC,QAAQG,WAIe,EAA5B5C,KAAKsB,KAAK4B,YAAY+P,MACpBjT,KAAKuI,OAAOvI,KAAKuI,MAAMhG,SACvBvC,KAAKwI,QAAQxI,KAAKwI,OAAOjG,UAG/BvC,KAAKymB,SAAS1e,QAAQ,SAAAkC,GAAS,OAAAA,EAAM1H,aAkBzC,GAjHE,WACSjB,EACPgC,EACOlB,EACPmT,EACO7R,EACAkO,EACArJ,EAA+BC,EAC/BzD,EACA4H,QAFA,IAAApE,MAAA,WAA+B,IAAAC,MAAA,WAC/B,IAAAzD,MAAa,EAAAO,cARtB,MAYE,cAAO,K,OAXA,EAAAhE,OAEA,EAAAc,OAEA,EAAAsB,QACA,EAAAkO,WACA,EAAArJ,QAA+B,EAAAC,SAC/B,EAAAzD,KACA,EAAA4H,WA1BT,EAAAlJ,MAAgB,EAChB,EAAAuK,OAAiB,EA6Bf,EAAKjJ,GAAK,EAAAO,aACV,EAAK7C,QAAU,EAAKnB,KAAKmB,QACzB,EAAKkO,aAAe,EAAKrP,KAAKqP,aAC9B,EAAKjE,YAAYC,GACjB,EAAKrJ,SAAWA,EAChB,EAAKmjB,SAAW,GAChB,EAAKlR,UAAYA,EACjB,EAAKgR,UAAW,EACZ,EAAK3U,UAAU,EAAKtQ,KAAKqQ,gBAAgB,EAAKC,SAAU,EAAK0U,aAAa5F,KAAK,IAE/EnY,IACF,EAAKjH,KAAKgI,SAAS5H,KAAK,EAAK6G,OAC7B,EAAKA,MAAM5C,GAAG,UAAW,WAAM,SAAK4gB,UAAW,IAC/C,EAAKhe,MAAM5C,GAAG,aAAc,WAAM,SAAK4gB,UAAW,KAEhD/d,GAAQ,EAAKlH,KAAK4H,UAAUxH,KAAK,EAAK8G,Q,EA/CxB,EAAAyd,U,wGCTtB,OAUE,YAAAvf,IAAA,SAAIvG,GACF,IAAIypB,EAAU,IAAIC,EAAe1pB,GACjCH,KAAK8pB,kBAAkB9pB,KAAK+pB,qBAAqB5pB,IAASypB,EAExC,OAAd5pB,KAAK9B,KAAe8B,KAAK9B,KAAO0rB,EAC/B5pB,KAAKgqB,QAAQhqB,KAAK9B,KAAM0rB,IAEvB,YAAAI,QAAR,SAAgB9rB,EAAyB0rB,GACnC5pB,KAAKiqB,WAAWL,EAAQzpB,KAAMjC,EAAKiC,MAAQ,EAC3B,OAAdjC,EAAK0c,MACP1c,EAAK0c,KAAOgP,GACJM,OAAShsB,EACZ8B,KAAKgqB,QAAQ9rB,EAAK0c,KAAMgP,GAEZ,OAAf1rB,EAAKisB,OACPjsB,EAAKisB,MAAQP,GACLM,OAAShsB,EACZ8B,KAAKgqB,QAAQ9rB,EAAKisB,MAAOP,IAIpC,YAAA1Y,OAAA,SAAOkZ,GACL,IAAIC,EAAWrqB,KAAK8pB,kBAAkB9pB,KAAK+pB,qBAAqBK,IAChE,QAAKC,WACErqB,KAAK8pB,kBAAkB9pB,KAAK+pB,qBAAqBK,IAEpDC,EAASH,OACPG,EAASH,OAAOtP,OAASyP,EACL,OAAlBA,EAASzP,MAAoC,OAAnByP,EAASF,QACrCE,EAASH,OAAOtP,KAAO,MAIH,OAAlByP,EAASzP,MACXyP,EAASF,MAAMD,OAASG,EAASH,OACjCG,EAASH,OAAOtP,KAAOyP,EAASF,OACzB,GACqB,OAAnBE,EAASF,OAClBE,EAASzP,KAAKsP,OAASG,EAASH,OAChCG,EAASH,OAAOtP,KAAOyP,EAASzP,MACzB,QAGT5a,KAAKsqB,eAAeD,GAEE,OAAlBA,EAASzP,MAAoC,OAAnByP,EAASF,QACrCE,EAASH,OAAOC,MAAQ,MAIJ,OAAlBE,EAASzP,MACXyP,EAASF,MAAMD,OAASG,EAASH,OACjCG,EAASH,OAAOC,MAAQE,EAASF,OAC1B,GACqB,OAAnBE,EAASF,OAClBE,EAASzP,KAAKsP,OAASG,EAASH,OAChCG,EAASH,OAAOC,MAAQE,EAASzP,MAC1B,QAGT5a,KAAKsqB,eAAeD,GAGA,OAAlBA,EAASzP,MAAoC,OAAnByP,EAASF,QACrCnqB,KAAK9B,KAAO,MAIQ,OAAlBmsB,EAASzP,MACXyP,EAASF,MAAMD,OAASG,EAASH,OACjClqB,KAAK9B,KAAOmsB,EAASF,OACd,GACqB,OAAnBE,EAASF,OAClBE,EAASzP,KAAKsP,OAASG,EAASH,OAChClqB,KAAK9B,KAAOmsB,EAASzP,MACd,QAGT5a,KAAKsqB,eAAeD,KAIhB,YAAAC,eAAR,SAAuBhpB,GACrB,IAAIyU,EAAM/V,KAAKuqB,YAAYjpB,EAAK6oB,OAChC7oB,EAAKnB,KAAO4V,EAAI5V,KACZ4V,EAAImU,OAAOtP,OAAS7E,EACtBA,EAAImU,OAAOtP,KAAO,KAElB7E,EAAImU,OAAOC,MAAQ,MAIvB,YAAAI,YAAA,SAAYjpB,GACV,OAAkB,OAAdA,EAAKsZ,KAAsBtZ,EACnBtB,KAAKuqB,YAAYjpB,EAAKsZ,OAGpC,YAAA7S,QAAA,SAAQyiB,GACNxqB,KAAKwqB,OAASA,EACdxqB,KAAKyqB,SAASzqB,KAAK9B,OAGb,YAAAusB,SAAR,SAAiBnpB,GACF,OAATA,IACFtB,KAAKyqB,SAASnpB,EAAKsZ,MACnB5a,KAAKwqB,OAAOlpB,EAAKnB,MACjBH,KAAKyqB,SAASnpB,EAAK6oB,SAGf,YAAAO,gBAAR,SAAwBppB,GACT,OAATA,IACFtB,KAAKyqB,SAASnpB,EAAK6oB,OACnBnqB,KAAKwqB,OAAOlpB,EAAKnB,MACjBH,KAAKyqB,SAASnpB,EAAKsZ,QAGzB,GAzHE,WAAmBqP,EAA2CF,GAA3C,KAAAE,aAA2C,KAAAF,uBAC5D/pB,KAAK9B,KAAO,KACZ8B,KAAK8pB,kBAAoB,GAPhB,EAAApgB,mBAgIb,MAKE,SAAmBvJ,GAAA,KAAAA,OACjBH,KAAK4a,KAAO,KACZ5a,KAAKmqB,MAAQ,KACbnqB,KAAKkqB,OAAS,MARL,EAAAL,kB,2YChIb,YACA,YACA,a,YCFA,IAAYc,E,6EAAAA,IAAA,EAAAA,WAAA,EAAAA,SAAQ,KAClB,cAAiB,cAAe,cAAe,gBAAiB,sBAGlE,OAGS,EAAArf,IAAP,W,IAAW,sDACLtL,KAAK4qB,YAAcD,EAASE,OAChCxf,QAAQC,IAAIwf,MAAM9qB,KAAMuQ,IAEnB,EAAAwa,KAAP,W,IAAY,sDACN/qB,KAAK4qB,YAAcD,EAASK,MAChC3f,QAAQ0f,KAAKD,MAAM9qB,KAAMuQ,IAEpB,EAAA0a,KAAP,W,IAAY,sDACNjrB,KAAK4qB,YAAcD,EAASO,MAChC7f,QAAQ4f,KAAKH,MAAM9qB,KAAMuQ,IAEpB,EAAAnF,MAAP,W,IAAa,sDACPpL,KAAK4qB,YAAcD,EAASQ,OAChC9f,QAAQD,MAAM0f,MAAM9qB,KAAMuQ,IAhBrB,EAAAqa,UAAsBD,EAASS,SAkBxC,GAnBA,cAAa,EAAAvD,U,8ICJb,aAEa,EAAAviB,WAAa,WACf,SAAL+lB,IACF,OAA+B,OAArB,EAAIvsB,KAAK2iB,UAAuB,GAAGhiB,SAAS,IAAIwpB,UAAU,GAEtE,OAAQoC,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,KAEpC,EAAAxrB,UAAY,SAACgQ,EAAekG,EAAarG,GACpD,OAAQG,EAAQkG,IAAQrG,EAAMqG,IAEnB,EAAA8S,YAAc,SAACyC,EAAoBvV,EAAarG,GAC3D,OAAQA,EAAMqG,GAAOuV,EAAavV,GAEvB,EAAA/W,UAAY,SAAC+W,EAAarG,GACrC,OAAO5Q,KAAK2iB,SAAW/R,EAAMqG,GAElB,EAAAjI,WAAa,SAACyd,EAAiBC,EAAiBC,EAAeC,EAAeC,EAAiBC,EAAiBC,EAAeC,GAE1I,QAD6BL,EAAVE,GAAmBE,EAAQN,GAAqBG,EAAVE,GAAmBE,EAAQN,GAE5EG,EAAUJ,GAAWK,EAAUJ,GAAmBC,EAARI,GAAyBH,EAARI,EACrD,EAAAxd,SAASgF,UADmE,EAAAhF,SAASC,OAErF,EAAAD,SAASM,SAEZ,EAAAuV,MAAQ,SAACtU,EAAekG,EAAarG,GAChD,OAAOG,GAASkG,EAAMA,EAAerG,EAARG,EAAcH,EAAMG,KCxB/Ckc,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAU7tB,QAG3C,IAAIC,EAAS0tB,EAAyBE,GAAY,CAGjD7tB,QAAS,IAOV,OAHA8tB,EAAoBD,GAAUxrB,KAAKpC,EAAOD,QAASC,EAAQA,EAAOD,QAAS4tB,GAGpE3tB,EAAOD,QCjBR4tB,CAAoB,M","file":"flow-connect.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import { getRandom, normalize } from \"../utils/utils\";\r\nimport { Serializable, SerializedColor } from \"./interfaces\";\r\n\r\nexport class Color implements Serializable {\r\n  hexValue: string;\r\n  rgbaValue: Uint8ClampedArray | number[];\r\n  rgbaString: string;\r\n  rgbaCSSString: string;\r\n\r\n  constructor(rgba: Uint8ClampedArray | number[]) {\r\n    this.rgbaValue = rgba;\r\n    this.hexValue = Color.rgbaToHex(this.rgbaValue);\r\n    this.rgbaString = Color.rgbaToString(this.rgbaValue);\r\n    this.rgbaCSSString = Color.rgbaToCSSString(this.rgbaValue);\r\n  }\r\n\r\n  static Random(): Color {\r\n    return new Color(new Uint8ClampedArray(\r\n      [Math.floor(getRandom(0, 255)), Math.floor(getRandom(0, 255)), Math.floor(getRandom(0, 255)), 255]\r\n    ));\r\n  }\r\n  static rgbaToHex(rgba: number[] | Uint8ClampedArray): string {\r\n    return \"#\" + Color._componentToHex(rgba[0]) + Color._componentToHex(rgba[1]) + Color._componentToHex(rgba[2]) + Color._componentToHex(rgba[3]);\r\n  }\r\n  static hexToRGBA(hex: string): Uint8ClampedArray {\r\n    return new Uint8ClampedArray([parseInt(hex.slice(1, 3), 16), parseInt(hex.slice(3, 5), 16), parseInt(hex.slice(5, 7), 16), parseInt(hex.slice(7, 9), 16)]);\r\n  }\r\n  static _componentToHex(c: number) {\r\n    let hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n  }\r\n  static rgbaToString(rgba: Uint8ClampedArray | number[]): string {\r\n    return `${rgba[0]}:${rgba[1]}:${rgba[2]}:${rgba[3]}`;\r\n  }\r\n  static rgbaToCSSString(rgba: Uint8ClampedArray | number[]): string {\r\n    return `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${normalize(rgba[3], 0, 255).toFixed(3)})`;\r\n  }\r\n\r\n  serialize(): SerializedColor {\r\n    return {\r\n      rgba: [this.rgbaValue[0], this.rgbaValue[1], this.rgbaValue[2], this.rgbaValue[3]]\r\n    }\r\n  }\r\n  static deSerialize(data: SerializedColor) {\r\n    return new Color(data.rgba);\r\n  }\r\n}\r\n","import { Vector2 } from \"../math/vector\";\r\nimport { Constant, FlowState, GraphState, NodeState } from \"../math/constants\";\r\nimport { getNewGUID } from \"../utils/utils\";\r\nimport { Flow } from \"./flow\";\r\nimport { Terminal } from './terminal';\r\nimport { ConnectorStyle, Serializable, SerializedConnector } from \"./interfaces\";\r\nimport { Node } from \"./node\";\r\n\r\nexport class Connector implements Serializable {\r\n  start: Terminal;\r\n  end: Terminal;\r\n  startNode: Node;\r\n  endNode: Node;\r\n  _data: any;\r\n  get data(): any { return this._data; }\r\n  set data(data: any) {\r\n    this._data = data;\r\n    this.end && this.end.call('data', data);\r\n    if (this.flow.state === FlowState.Running && this.flow.executionGraph.state !== GraphState.FullRun) {\r\n      this.flow.executionGraph.setDirtyNode(this.endNode);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public flow: Flow,\r\n    start: Terminal,\r\n    end: Terminal,\r\n    public floatingTip: Vector2,\r\n    public style: ConnectorStyle = {},\r\n    public id: string = getNewGUID(),\r\n    isDeserialization: boolean = false\r\n  ) {\r\n\r\n    this.style = { ...Constant.DefaultConnectorStyle(), ...style };\r\n    this.start = start;\r\n    this.end = end;\r\n    if (this.start) this.startNode = this.start.node;\r\n    if (this.end) this.endNode = this.end.node;\r\n    if (start && end) {\r\n      this.floatingTip = null;\r\n      this.start.connectors.push(this);\r\n      this.end.connectors.push(this);\r\n\r\n      if (!isDeserialization) this.flow.executionGraph.connect(this.startNode, this.endNode);\r\n      this.start.call('connect', this.start, this);\r\n      this.end.call('connect', this.end, this);\r\n    };\r\n  }\r\n\r\n  completeConnection(destination: Terminal) {\r\n    if (!this.start) {\r\n      this.start = destination;\r\n      this.startNode = this.start.node;\r\n    } else {\r\n      this.end = destination;\r\n      this.endNode = this.end.node;\r\n    }\r\n\r\n    if (!this.start.connectors.includes(this)) this.start.connectors.push(this);\r\n    this.end.connectors[0] = this;\r\n    this.floatingTip = null;\r\n\r\n    this.startNode.currHitTerminal && this.startNode.currHitTerminal.onExit(null, null);\r\n    this.startNode.currHitTerminal = null;\r\n    this.endNode.currHitTerminal && this.endNode.currHitTerminal.onExit(null, null);\r\n    this.endNode.currHitTerminal = null;\r\n\r\n    this.flow.executionGraph.connect(this.startNode, this.endNode);\r\n    this.start.call('connect', this.start, this);\r\n    this.end.call('connect', this.end, this);\r\n  }\r\n  removeConnection() {\r\n    if (this.start) {\r\n      this.start.connectors.includes(this) && this.start.connectors.splice(this.start.connectors.indexOf(this), 1);\r\n      if (this.startNode.currHitTerminal) {\r\n        this.startNode.currHitTerminal.onExit(null, null);\r\n        this.startNode.currHitTerminal = null;\r\n      }\r\n    }\r\n    if (this.end) {\r\n      this.end.connectors.includes(this) && this.end.connectors.splice(this.end.connectors.indexOf(this), 1);\r\n      if (this.endNode.currHitTerminal) {\r\n        this.endNode.currHitTerminal.onExit(null, null);\r\n        this.endNode.currHitTerminal = null;\r\n      }\r\n    }\r\n  }\r\n  canConnect(destination: Terminal): boolean {\r\n    let source = !this.start ? this.end : this.start;\r\n\r\n    if (!destination) return false;\r\n    if (source === destination) return false;\r\n    if (source.node === destination.node) return false;\r\n    if (source.type === destination.type) return false;\r\n    if (!this.flow.rules[source.dataType].includes(destination.dataType)) return false;\r\n    if (!this.flow.executionGraph.canConnect(source.node, destination.node)) return false;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    this.flow.flowConnect.context.save();\r\n    this._render();\r\n    this.flow.flowConnect.context.restore();\r\n\r\n    this.flow.flowConnect.offContext.save();\r\n    this._offRender();\r\n    this.flow.flowConnect.offContext.restore();\r\n  }\r\n  _render() {\r\n    let ax, ay, dx, dy;\r\n    if (this.start) {\r\n      if (this.startNode.renderState.nodeState === NodeState.MAXIMIZED)\r\n        [ax, ay] = [this.start.position.x, this.start.position.y];\r\n      else\r\n        [ax, ay] = [this.startNode.position.x + this.startNode.width + this.startNode.style.terminalStripMargin + this.start.style.radius, this.startNode.position.y + this.startNode.style.titleHeight / 2];\r\n    } else\r\n      [ax, ay] = [this.floatingTip.x, this.floatingTip.y];\r\n\r\n    if (this.end) {\r\n      if (this.endNode.renderState.nodeState === NodeState.MAXIMIZED)\r\n        [dx, dy] = [this.end.position.x, this.end.position.y];\r\n      else\r\n        [dx, dy] = [this.endNode.position.x - this.endNode.style.terminalStripMargin - this.end.style.radius, this.endNode.position.y + this.endNode.style.titleHeight / 2];\r\n    } else\r\n      [dx, dy] = [this.floatingTip.x, this.floatingTip.y];\r\n\r\n    let offset = Vector2.Distance(ax, ay, dx, dy);\r\n    offset *= .2;\r\n\r\n    let [bx, by] = [ax + offset, ay];\r\n    let [cx, cy] = [dx - offset, dy];\r\n    let [midx, midy] = [(bx + cx) / 2, (by + cy) / 2];\r\n\r\n    this.flow.flowConnect.context.beginPath();\r\n    this.flow.flowConnect.context.moveTo(ax, ay);\r\n    this.flow.flowConnect.context.quadraticCurveTo(bx, by, midx, midy);\r\n    this.flow.flowConnect.context.moveTo(midx, midy);\r\n    this.flow.flowConnect.context.quadraticCurveTo(cx, cy, dx, dy);\r\n    this.flow.flowConnect.context.strokeStyle = 'grey';\r\n    this.flow.flowConnect.context.lineWidth = this.style.width + 2;\r\n    this.flow.flowConnect.context.stroke();\r\n\r\n    this.flow.flowConnect.context.beginPath();\r\n    this.flow.flowConnect.context.moveTo(ax, ay);\r\n    this.flow.flowConnect.context.quadraticCurveTo(bx, by, midx, midy);\r\n    this.flow.flowConnect.context.moveTo(midx, midy);\r\n    this.flow.flowConnect.context.quadraticCurveTo(cx, cy, dx, dy);\r\n    this.flow.flowConnect.context.strokeStyle = this.style.color;\r\n    this.flow.flowConnect.context.lineWidth = this.style.width;\r\n    this.flow.flowConnect.context.stroke();\r\n  }\r\n  _offRender() { }\r\n\r\n  serialize(): SerializedConnector {\r\n    return {\r\n      id: this.id,\r\n      startId: this.start.id,\r\n      endId: this.end.id,\r\n      startNodeId: this.startNode.id,\r\n      endNodeId: this.endNode.id,\r\n      style: this.style\r\n    }\r\n  }\r\n  static deSerialize(flow: Flow, start: Terminal, end: Terminal, data: SerializedConnector): Connector {\r\n    return new Connector(flow, start, end, null, data.style, data.id, true);\r\n  }\r\n}\r\n","import { FlowConnect } from \"../flow-connect\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Node } from \"./node\";\r\nimport { Hooks } from './hooks';\r\nimport { Group } from './group';\r\nimport { Connector } from './connector';\r\nimport { BinarySearchTree } from \"../utils/binary-search-tree\";\r\nimport { NodeStyle, Serializable, SerializedFlow, TerminalStyle } from './interfaces';\r\nimport { SubFlowNode } from \"./subflow-node\";\r\nimport { TunnelNode } from \"./tunnel-node\";\r\nimport { getNewGUID } from \"../utils/utils\";\r\nimport { FlowState } from \"../math/constants\";\r\nimport { Graph } from \"./graph\";\r\n\r\nexport class Flow extends Hooks implements Serializable {\r\n  sortedNodes: BinarySearchTree<Node>;\r\n  nodes: { [id: string]: Node };\r\n  groups: Group[];\r\n  connectors: { [id: string]: Connector };\r\n  inputs: TunnelNode[];\r\n  outputs: TunnelNode[];\r\n  hitColorToNode: { [color: string]: Node };\r\n  hitColorToGroup: { [color: string]: Group };\r\n  listeners: { [eventKey: string]: number } = {};\r\n  state: FlowState = FlowState.Stopped;\r\n  executionGraph: Graph;\r\n\r\n  constructor(\r\n    public flowConnect: FlowConnect,\r\n    public name: string,\r\n    public rules: { [type: string]: string[] },\r\n    public terminalTypeColors: { [key: string]: string },\r\n    public id: string = getNewGUID()\r\n  ) {\r\n\r\n    super();\r\n    this.nodes = {};\r\n    this.groups = [];\r\n    this.connectors = {};\r\n    this.hitColorToNode = {};\r\n    this.hitColorToGroup = {};\r\n    this.sortedNodes = new BinarySearchTree((a: Node, b: Node) => (a.zIndex - b.zIndex), (node: Node) => node.id);\r\n    this.inputs = [];\r\n    this.outputs = [];\r\n    this.executionGraph = new Graph();\r\n\r\n    this.registerListeners();\r\n  }\r\n\r\n  registerListeners() {\r\n    let id = this.flowConnect.on('transform', () => this.call('transform', this));\r\n    this.listeners['transform'] = id;\r\n  }\r\n  deregisterListeners() {\r\n    this.flowConnect.off('transform', this.listeners['transform']);\r\n    delete this.listeners['transform'];\r\n  }\r\n  existsInFlow(flow: Flow): boolean {\r\n    for (let node of Object.values(this.nodes)) {\r\n      if ((node as SubFlowNode).subFlow === flow) return true;\r\n      else if ((node as SubFlowNode).subFlow) {\r\n        return (node as SubFlowNode).subFlow.existsInFlow(flow);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addInput(name: string, dataType: string, position: Vector2): TunnelNode {\r\n    let flowInput = new TunnelNode(this, 'Input', position, 100, [], [{ name: name, dataType: dataType }], {}, {}, {});\r\n\r\n    this.inputs.push(flowInput);\r\n    this.nodes[flowInput.id] = flowInput;\r\n    this.sortedNodes.add(flowInput);\r\n    this.executionGraph.add(flowInput);\r\n\r\n    this.call('add-input', this, flowInput);\r\n    return flowInput;\r\n  }\r\n  addOutput(name: string, dataType: string, position: Vector2): TunnelNode {\r\n    let flowOutput = new TunnelNode(this, 'Output', position, 100, [{ name: name, dataType: dataType }], [], {}, {}, {});\r\n\r\n    this.outputs.push(flowOutput);\r\n    this.nodes[flowOutput.id] = flowOutput;\r\n    this.sortedNodes.add(flowOutput);\r\n    this.executionGraph.add(flowOutput);\r\n\r\n    this.call('add-output', this, flowOutput);\r\n    return flowOutput;\r\n  }\r\n  addSubFlow(flow: Flow, position: Vector2): SubFlowNode {\r\n    let subFlowNode = new SubFlowNode(\r\n      this,\r\n      flow.name,\r\n      position,\r\n      150,\r\n      {}, {}, {},\r\n      flow.inputs.map(inputNode => { return { name: inputNode.outputs[0].name, dataType: inputNode.outputs[0].dataType } }),\r\n      flow.outputs.map(outputNode => { return { name: outputNode.inputs[0].name, dataType: outputNode.inputs[0].dataType } }),\r\n      flow\r\n    );\r\n    this.nodes[subFlowNode.id] = subFlowNode;\r\n    this.sortedNodes.add(subFlowNode);\r\n    this.executionGraph.add(subFlowNode);\r\n    return subFlowNode;\r\n  }\r\n\r\n  createNode(name: string, position: Vector2, width: number, inputs?: any[], outputs?: any[], style: NodeStyle = {}, terminalStyle: TerminalStyle = {}, props?: { [key: string]: any }): Node {\r\n    let inTerminals: any[] = [], outTerminals: any[] = [];\r\n    if (typeof inputs !== 'undefined') inTerminals = inputs;\r\n    if (typeof outputs !== 'undefined') outTerminals = outputs;\r\n    let node = new Node(\r\n      this,\r\n      name,\r\n      position,\r\n      width,\r\n      inTerminals,\r\n      outTerminals,\r\n      style,\r\n      terminalStyle,\r\n      props\r\n    );\r\n\r\n    this.nodes[node.id] = node;\r\n    this.sortedNodes.add(node);\r\n    this.executionGraph.add(node);\r\n\r\n    return node;\r\n  }\r\n  removeNode(nodeOrID: Node | string) {\r\n    /*\r\n    if (nodeOrID instanceof Node) nodeOrID = nodeOrID.id;\r\n \r\n    let queue = [];\r\n    let currentNode;\r\n    queue.push(this.renderTree);\r\n \r\n    while ((currentNode = queue.shift())) {\r\n      if (currentNode.id == nodeOrID) {\r\n        currentNode.transform.parent.childs.splice(currentNode.transform.parent.childs.indexOf(currentNode.transform), 1);\r\n      } else {\r\n        currentNode.transform.childs.forEach((child) => {\r\n          queue.push(child.node);\r\n        });\r\n      }\r\n    }\r\n    */\r\n  }\r\n  removeConnector(id: string) {\r\n    if (this.connectors[id] === this.flowConnect.floatingConnector) this.flowConnect.floatingConnector = null;\r\n    delete this.connectors[id];\r\n  }\r\n  removeAllFocus() {\r\n    Object.values(this.nodes).forEach(node => node.focused = false);\r\n  }\r\n  render() {\r\n    this.groups.forEach(group => group.render());\r\n    Object.values(this.connectors).forEach(connector => connector.render());\r\n    this.sortedNodes.forEach(node => node.render());\r\n  }\r\n\r\n  start() {\r\n    if (this.state === FlowState.Running) return;\r\n\r\n    this.state = FlowState.Running;\r\n    this.call('start', this);\r\n    this.executionGraph.start();\r\n  }\r\n  stop() {\r\n    // what if GraphState is Running ?\r\n    this.state = FlowState.Stopped;\r\n    this.call('stop', this);\r\n    Object.values(this.nodes).forEach(node => {\r\n      if (node instanceof SubFlowNode) {\r\n        node.subFlow.stop();\r\n        // maybe stop in reverse execution sequence... ?\r\n      }\r\n    })\r\n  }\r\n\r\n  serialize(): SerializedFlow {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      rules: this.rules,\r\n      terminalTypeColors: this.terminalTypeColors,\r\n      nodes: Object.values(this.nodes).map(node => node.serialize()),\r\n      groups: this.groups.map(group => group.serialize()),\r\n      connectors: Object.values(this.connectors).map(connector => connector.serialize()),\r\n      inputs: this.inputs.map(input => input.serialize()),\r\n      outputs: this.outputs.map(output => output.serialize()),\r\n      executionGraph: this.executionGraph.serialize()\r\n    }\r\n  }\r\n  static deSerialize(flowConnect: FlowConnect, data: SerializedFlow): Flow {\r\n    let flow = new Flow(flowConnect, data.name, data.rules, data.terminalTypeColors, data.id);\r\n\r\n    data.nodes.forEach(serializedNode => {\r\n      let node;\r\n      if (serializedNode.subFlow) node = SubFlowNode.deSerialize(flow, serializedNode);\r\n      else node = Node.deSerialize(flow, serializedNode);\r\n      flow.nodes[node.id] = node;\r\n      flow.sortedNodes.add(node);\r\n    });\r\n\r\n    data.groups.forEach(serializedGroup => {\r\n      let group = Group.deSerialize(flow, serializedGroup);\r\n      flow.groups.push(group);\r\n      group.nodes.forEach(node => node.group = group);\r\n    });\r\n\r\n    data.inputs.forEach(serializedInput => {\r\n      let input = TunnelNode.deSerialize(flow, serializedInput);\r\n      flow.inputs.push(input);\r\n      flow.nodes[input.id] = input;\r\n      flow.sortedNodes.add(input);\r\n    });\r\n\r\n    data.outputs.forEach(serializedOutput => {\r\n      let output = TunnelNode.deSerialize(flow, serializedOutput);\r\n      flow.outputs.push(output);\r\n      flow.nodes[output.id] = output;\r\n      flow.sortedNodes.add(output);\r\n    });\r\n\r\n    data.connectors.forEach(serializedConnector => {\r\n      let startNode = flow.nodes[serializedConnector.startNodeId];\r\n      let startTerminal = startNode.outputs.concat(startNode.outputsUI).find(terminal => terminal.id === serializedConnector.startId);\r\n      let endNode = flow.nodes[serializedConnector.endNodeId];\r\n      let endTerminal = endNode.inputs.concat(endNode.inputsUI).find(terminal => terminal.id === serializedConnector.endId);\r\n      let connector = Connector.deSerialize(flow, startTerminal, endTerminal, serializedConnector);\r\n      flow.connectors[serializedConnector.id] = connector;\r\n    });\r\n\r\n    flow.executionGraph = Graph.deSerialize(flow, data.executionGraph);\r\n\r\n    return flow;\r\n  }\r\n}\r\n","import { GraphState } from \"../math/constants\";\r\nimport { getNewGUID } from \"../utils/utils\";\r\nimport { Flow } from \"./flow\";\r\nimport { Serializable, SerializedGraph, SerializedGraphNode } from \"./interfaces\";\r\nimport { Node } from \"./node\";\r\n\r\nexport class GraphNode implements Serializable {\r\n  id: string;\r\n  childs: GraphNode[] = [];\r\n  order: number;\r\n\r\n  constructor(public flowNode: Node, order?: number, id?: string) {\r\n    this.order = order ? order : 0;\r\n    this.id = id ? id : getNewGUID();\r\n  }\r\n\r\n  serialize(): SerializedGraphNode {\r\n    return {\r\n      id: this.id,\r\n      nodeId: this.flowNode.id,\r\n      order: this.order,\r\n      childs: this.childs.map(child => child.id)\r\n    };\r\n  }\r\n  static deSerialize(node: Node, data: SerializedGraphNode): GraphNode {\r\n    return new GraphNode(node, data.order, data.id);\r\n  }\r\n}\r\n\r\nexport class Graph implements Serializable {\r\n  state: GraphState = GraphState.Stopped;\r\n  nodes: GraphNode[][];\r\n  nodeToGraphNode: { [key: string]: GraphNode };\r\n  dirtyNodes: { [key: string]: GraphNode };\r\n\r\n  constructor() {\r\n    this.nodes = [];\r\n    this.nodeToGraphNode = {};\r\n    this.dirtyNodes = {};\r\n  }\r\n\r\n  add(data: Node) {\r\n    if (!this.nodes[0]) this.nodes.push([]);\r\n    let graphNode = new GraphNode(data);\r\n    this.nodes[0].push(graphNode);\r\n    this.nodeToGraphNode[data.id] = graphNode;\r\n  }\r\n  connect(sourceNode: Node, destinationNode: Node) {\r\n    let startGraphNode = this.nodeToGraphNode[sourceNode.id];\r\n    let endGraphNode = this.nodeToGraphNode[destinationNode.id];\r\n\r\n    if (!startGraphNode.childs.includes(endGraphNode)) {\r\n      startGraphNode.childs.push(endGraphNode);\r\n\r\n      if (endGraphNode.order <= startGraphNode.order) {\r\n        this.updateOrder(endGraphNode, startGraphNode.order + 1);\r\n        let queue: GraphNode[] = [];\r\n        queue.push(endGraphNode);\r\n        while (queue.length !== 0) {\r\n          let currNode = queue.shift();\r\n          currNode.childs.forEach(child => {\r\n            if (child.order <= currNode.order) {\r\n              this.updateOrder(child, currNode.order + 1);\r\n              if (!queue.includes(child)) queue.push(child);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updateOrder(graphNode: GraphNode, order: number) {\r\n    this.nodes[graphNode.order].splice(this.nodes[graphNode.order].indexOf(graphNode), 1);\r\n    if (!this.nodes[order]) this.nodes[order] = [];\r\n    graphNode.order = order;\r\n    this.nodes[order].push(graphNode);\r\n  }\r\n  canConnect(sourceNode: Node, destinationNode: Node) {\r\n    if (this.nodeToGraphNode[destinationNode.id].childs.includes(this.nodeToGraphNode[sourceNode.id])) return false;\r\n    return true;\r\n  }\r\n\r\n  start() {\r\n    if (this.state !== GraphState.Stopped) return;\r\n\r\n    this.state = GraphState.FullRun;\r\n\r\n    this.nodes.forEach(groupedNodes => {\r\n      groupedNodes.forEach(graphNode => graphNode.flowNode.run());\r\n    });\r\n\r\n    this.state = GraphState.Idle;\r\n  }\r\n  stop() {\r\n    this.state = GraphState.Stopped;\r\n  }\r\n  async partialRun() {\r\n    let result = await new Promise<boolean>((resolve, reject) => {\r\n      try {\r\n        this.processDirtyNodes();\r\n        resolve(true);\r\n      } catch (error) {\r\n        console.log(error);\r\n        reject(false);\r\n      }\r\n    });\r\n\r\n    if (result && Object.keys(this.dirtyNodes).length > 0)\r\n      await this.partialRun();\r\n  }\r\n  setDirtyNode(node: Node | GraphNode) {\r\n    let graphNode = node instanceof Node ? this.nodeToGraphNode[node.id] : node;\r\n    if (!this.dirtyNodes[graphNode.id]) {\r\n      this.dirtyNodes[graphNode.id] = graphNode;\r\n\r\n      if (this.state === GraphState.Idle) {\r\n        this.state = GraphState.Running;\r\n\r\n        this.partialRun().then(() => (this.state = GraphState.Idle));\r\n      }\r\n    }\r\n  }\r\n  clearDirtyNode(node: Node | GraphNode) {\r\n    let graphNode = node instanceof Node ? this.nodeToGraphNode[node.id] : node;\r\n    if (this.dirtyNodes[graphNode.id]) delete this.dirtyNodes[graphNode.id];\r\n  }\r\n  processDirtyNodes() {\r\n    let dirtyNodes = Object.values(this.dirtyNodes).sort((a, b) => (a.order - b.order));\r\n    console.log([...dirtyNodes]);\r\n\r\n    let queue: GraphNode[] = dirtyNodes;\r\n    queue.forEach(graphNode => {\r\n      graphNode.flowNode.run();\r\n      this.clearDirtyNode(graphNode);\r\n    });\r\n  }\r\n\r\n  serialize(): SerializedGraph {\r\n    let nodeToGraphNode: { [key: string]: string } = {};\r\n    Object.keys(this.nodeToGraphNode).forEach(nodeId => nodeToGraphNode[nodeId] = this.nodeToGraphNode[nodeId].id);\r\n\r\n    return {\r\n      nodes: this.nodes.map(groupedNodes => groupedNodes.map(graphNode => graphNode.serialize())),\r\n      nodeToGraphNode: nodeToGraphNode\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedGraph): Graph {\r\n    let graph = new Graph();\r\n\r\n    let serializedGraphNodes: { [key: string]: SerializedGraphNode } = {};\r\n    let deSerializedGraphNodes: { [key: string]: GraphNode } = {};\r\n\r\n    data.nodes.forEach((serializedGroupedNodes, index) => {\r\n      graph.nodes[index] = serializedGroupedNodes.map(serializedGraphNode => {\r\n        let graphNode = GraphNode.deSerialize(flow.nodes[serializedGraphNode.nodeId], serializedGraphNode);\r\n        deSerializedGraphNodes[graphNode.id] = graphNode;\r\n        serializedGraphNodes[graphNode.id] = serializedGraphNode;\r\n        return graphNode;\r\n      });\r\n    });\r\n\r\n    Object.keys(deSerializedGraphNodes).forEach(key => {\r\n      deSerializedGraphNodes[key].childs = serializedGraphNodes[key].childs.map(childId => deSerializedGraphNodes[childId]);\r\n    });\r\n    Object.keys(data.nodeToGraphNode).forEach(nodeId => {\r\n      graph.nodeToGraphNode[nodeId] = deSerializedGraphNodes[data.nodeToGraphNode[nodeId]];\r\n    })\r\n\r\n    return graph;\r\n  }\r\n}\r\n","import { Vector2 } from \"../math/vector\";\r\nimport { Constant, ViewPort } from '../math/constants';\r\nimport { getNewGUID, intersects } from \"../utils/utils\";\r\nimport { Color } from \"./color\";\r\nimport { Flow } from './flow';\r\nimport { Hooks } from './hooks';\r\nimport { Node } from './node';\r\nimport { GroupStyle, Serializable, SerializedGroup } from \"./interfaces\";\r\n\r\nexport class Group extends Hooks implements Serializable {\r\n  nodes: Node[] = [];\r\n  nodeDeltas: Vector2[] = [];\r\n  textWidth: number;\r\n  textHeight: number;\r\n  _name: string;\r\n  get name(): string { return this._name; }\r\n  set name(name: string) {\r\n    if (!name || name.trim() === '') this._name = 'No Name';\r\n    else this._name = name;\r\n    this.computeTextMetrics();\r\n  }\r\n  renderState: ViewPort = ViewPort.INSIDE;\r\n  _position: Vector2;\r\n  get position(): Vector2 { return this._position; }\r\n  set position(position: Vector2) {\r\n    this._position = position;\r\n    this.updateRenderState();\r\n    this.recomputeNodePositions();\r\n  }\r\n\r\n  constructor(\r\n    public flow: Flow,\r\n    position: Vector2,\r\n    public width: number = 0, public height: number = 0,\r\n    name?: string,\r\n    public style: GroupStyle = {},\r\n    public id: string = getNewGUID(),\r\n    public hitColor?: Color\r\n  ) {\r\n\r\n    super();\r\n    this.style = { ...Constant.DefaultGroupStyle(), ...style };\r\n    this.id = getNewGUID();\r\n    this._position = position;\r\n    if (!this.style.color || !this.style.borderColor) {\r\n      let colors = Constant.DefaultGroupColors.Random();\r\n      this.style.borderColor = colors[0];\r\n      this.style.color = colors[1];\r\n    }\r\n    this.name = name;\r\n    this.setHitColor(hitColor);\r\n    this.computeTextMetrics();\r\n\r\n    this.flow.on('transform', () => this.updateRenderState());\r\n  }\r\n\r\n  setHitColor(hitColor: Color) {\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.flow.hitColorToGroup[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.flow.hitColorToGroup[this.hitColor.rgbaString] = this;\r\n  }\r\n  computeTextMetrics() {\r\n    this.flow.flowConnect.context.font = this.style.fontSize + ' ' + this.style.font;\r\n    let metrics = this.flow.flowConnect.context.measureText(this.name);\r\n    this.textWidth = metrics.width;\r\n    metrics = this.flow.flowConnect.context.measureText('M');\r\n    this.flow.flowConnect.context.font = null;\r\n    this.textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n\r\n    if (typeof this.textHeight === 'undefined') {\r\n      let d = document.createElement(\"span\");\r\n      d.textContent = \"M\";\r\n      d.style.font = this.style.fontSize + ' ' + this.style.font;\r\n      document.body.appendChild(d);\r\n      this.textHeight = d.offsetHeight;\r\n      document.body.removeChild(d);\r\n    }\r\n  }\r\n  updateRenderState() {\r\n    let realPos = this.position.transform(this.flow.flowConnect.transform);\r\n    this.renderState = intersects(\r\n      0, 0,\r\n      this.flow.flowConnect.canvasDimensions.width, this.flow.flowConnect.canvasDimensions.height,\r\n      realPos.x, realPos.y,\r\n      realPos.x + this.width * this.flow.flowConnect.scale,\r\n      realPos.y + this.height * this.flow.flowConnect.scale\r\n    );\r\n  }\r\n  setContainedNodes() {\r\n    let groupRealPos = this.position.transform(this.flow.flowConnect.transform);\r\n\r\n    this.nodes = Object.keys(this.flow.nodes)\r\n      .map(key => this.flow.nodes[key])\r\n      .filter(node => !node.group && node.renderState.viewport === ViewPort.INSIDE)\r\n      .filter(node => {\r\n        let nodeRealPos = node.position.transform(this.flow.flowConnect.transform);\r\n\r\n        return intersects(groupRealPos.x, groupRealPos.y,\r\n          groupRealPos.x + this.width * this.flow.flowConnect.scale,\r\n          groupRealPos.y + this.height * this.flow.flowConnect.scale,\r\n          nodeRealPos.x, nodeRealPos.y,\r\n          nodeRealPos.x + node.width * this.flow.flowConnect.scale,\r\n          nodeRealPos.y + node.ui.height * this.flow.flowConnect.scale\r\n        ) === ViewPort.INSIDE;\r\n      });\r\n\r\n    this.nodes.forEach((node, index) => {\r\n      node.group = this;\r\n      this.nodeDeltas[index] = node.position.subtract(this.position);\r\n    });\r\n  }\r\n  recomputeNodePositions() {\r\n    this.nodes.forEach((node, index) => {\r\n      node.position = this.position.add(this.nodeDeltas[index]);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.renderState === ViewPort.OUTSIDE) return;\r\n\r\n    this.flow.flowConnect.context.save();\r\n    this._render();\r\n    this.flow.flowConnect.context.restore();\r\n\r\n    this.flow.flowConnect.offGroupContext.save();\r\n    this._offRender();\r\n    this.flow.flowConnect.offGroupContext.restore();\r\n  }\r\n  _render() {\r\n    this.flow.flowConnect.context.strokeStyle = this.style.borderColor;\r\n    this.flow.flowConnect.context.lineWidth = 2;\r\n    this.flow.flowConnect.context.fillStyle = this.style.color;\r\n    this.flow.flowConnect.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.flow.flowConnect.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n\r\n    this.flow.flowConnect.context.fillStyle = this.style.titleColor;\r\n    this.flow.flowConnect.context.textBaseline = 'bottom';\r\n    this.flow.flowConnect.context.font = this.style.fontSize + ' ' + this.style.font;\r\n    this.flow.flowConnect.context.fillText(this.name, this.position.x, this.position.y - 10);\r\n  }\r\n  _offRender() {\r\n    this.flow.flowConnect.offGroupContext.fillStyle = this.hitColor.rgbaCSSString;\r\n    this.flow.flowConnect.offGroupContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.flow.flowConnect.offGroupContext.fillRect(this.position.x, this.position.y - this.textHeight - 10, this.textWidth, this.textHeight + 10);\r\n  }\r\n\r\n  onClick(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    let thisRealPosition = this.position.transform(this.flow.flowConnect.transform);\r\n    if (screenPosition.y < thisRealPosition.y) {\r\n      this.flow.flowConnect.showGenericInput(thisRealPosition.subtract(0, (10 + this.textHeight) * this.flow.flowConnect.scale), this.name, {\r\n        width: Math.max(this.textWidth, 50) * this.flow.flowConnect.scale + 'px',\r\n        height: this.textHeight * this.flow.flowConnect.scale + 'px',\r\n        fontSize: parseInt(this.style.fontSize.replace('px', '')) * this.flow.flowConnect.scale + 'px',\r\n        fontFamily: this.style.font\r\n      }, {\r\n        type: 'text'\r\n      }, (value) => {\r\n        this.name = value;\r\n      });\r\n    }\r\n  }\r\n\r\n  serialize(): SerializedGroup {\r\n    return {\r\n      id: this.id,\r\n      hitColor: this.hitColor.serialize(),\r\n      position: this.position.serialize(),\r\n      name: this.name,\r\n      width: this.width,\r\n      height: this.height,\r\n      style: this.style,\r\n      nodes: this.nodes.map(node => node.id),\r\n      nodeDeltas: this.nodeDeltas.map(nodeDelata => nodeDelata.serialize())\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedGroup): Group {\r\n    let group = new Group(flow, Vector2.deSerialize(data.position), data.width, data.height, data.name, data.style, data.id, Color.deSerialize(data.hitColor));\r\n    data.nodes.forEach(nodeId => {\r\n      group.nodes.push(flow.nodes[nodeId]);\r\n    });\r\n    data.nodeDeltas.forEach(serializedVector => {\r\n      group.nodeDeltas.push(Vector2.deSerialize(serializedVector));\r\n    });\r\n\r\n    return group;\r\n  }\r\n}\r\n","export class Hooks {\r\n  registeredEvents: { [key: string]: { [id: number]: (...args: any) => void } };\r\n  lastId: number;\r\n\r\n  constructor() {\r\n    this.registeredEvents = {};\r\n    this.lastId = 0;\r\n  }\r\n\r\n  on(eventKey: string, callback: (...args: any) => void): number {\r\n    if (!this.registeredEvents[eventKey]) this.registeredEvents[eventKey] = {};\r\n\r\n    let id = this.lastId;\r\n    this.registeredEvents[eventKey][id] = callback;\r\n    this.lastId += 1;\r\n    return id;\r\n  }\r\n  call(eventKey: string, ...args: any) {\r\n    if (this.registeredEvents[eventKey]) {\r\n      if (args) Object.values(this.registeredEvents[eventKey]).forEach(callback => callback(...args));\r\n      else Object.values(this.registeredEvents[eventKey]).forEach(callback => callback());\r\n    }\r\n  }\r\n  off(eventKey: string, id: number) {\r\n    delete this.registeredEvents[eventKey][id];\r\n  }\r\n}\r\n","export * from './color';\r\nexport * from './connector';\r\nexport * from './flow';\r\nexport * from './node';\r\nexport * from './terminal';\r\nexport * from './group';\r\nexport * from './interfaces';\r\nexport * from './hooks';\r\nexport * from './subflow-node';\r\nexport * from './tunnel-node';","import { Vector2 } from \"../math/vector\";\r\nimport { ViewPort, NodeState, LOD, TerminalType, Align, Constant, FlowState } from '../math/constants';\r\nimport { Container, Label, Slider, UINode, Button, Image, HorizontalLayout, Toggle, Select, Source, Display, Input } from \"../ui/index\";\r\nimport { getNewGUID, intersects } from \"../utils/utils\";\r\nimport { Color } from \"./color\";\r\nimport { Flow } from './flow';\r\nimport { Group } from './group';\r\nimport { Terminal } from './terminal';\r\nimport { Hooks } from './hooks';\r\nimport { ButtonStyle, DisplayStyle, Events, HorizontalLayoutStyle, ImageStyle, InputStyle, LabelStyle, NodeStyle, RenderState, SelectStyle, Serializable, SerializedContainer, SerializedNode, SerializedTerminal, SliderStyle, SourceStyle, TerminalStyle, ToggleStyle } from \"./interfaces\";\r\n\r\nexport class NodeButton {\r\n  hitColor: Color;\r\n  deltaX: number = 0;\r\n\r\n  constructor(\r\n    public node: Node,\r\n    public callback: () => void,\r\n    public _render: (nodeButton: NodeButton, position: Vector2) => void,\r\n    public align: Align\r\n  ) {\r\n    this.setHitColor();\r\n  }\r\n\r\n  setHitColor() {\r\n    let color = Color.Random();\r\n    while (this.node.hitColorToNodeButton[color.rgbaString]) color = Color.Random();\r\n    this.hitColor = color;\r\n    this.node.hitColorToNodeButton[this.hitColor.rgbaString] = this;\r\n  }\r\n  render() {\r\n    this.node.context.save();\r\n    this._render(this, this.node.position.add(this.deltaX, this.node.style.titleHeight / 2 - this.node.style.nodeButtonSize / 2));\r\n    this.node.context.restore();\r\n\r\n    this.node.offUIContext.save();\r\n    this._offUIRender();\r\n    this.node.offUIContext.restore();\r\n  }\r\n  _offUIRender() {\r\n    this.node.offUIContext.fillStyle = this.hitColor.rgbaCSSString;\r\n    this.node.offUIContext.fillRect(\r\n      this.node.position.x + this.deltaX,\r\n      this.node.position.y + this.node.style.titleHeight / 2 - this.node.style.nodeButtonSize / 2,\r\n      this.node.style.nodeButtonSize,\r\n      this.node.style.nodeButtonSize\r\n    );\r\n  }\r\n}\r\n\r\nexport class Node extends Hooks implements Events, Serializable {\r\n  //#region Properties\r\n  _width: number;\r\n  context: CanvasRenderingContext2D;\r\n  offContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  offUIContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  hitColorToUI: { [key: string]: UINode };\r\n  hitColorToTerminal: { [key: string]: Terminal };\r\n  hitColorToNodeButton: { [key: string]: NodeButton };\r\n  private _zIndex: number;\r\n  focused: boolean = false;\r\n  inputs: Terminal[] = [];\r\n  outputs: Terminal[] = [];\r\n  inputsUI: Terminal[] = [];\r\n  outputsUI: Terminal[] = [];\r\n  ui: Container;\r\n  nodeButtons: NodeButton[] = [];\r\n  private _position: Vector2;\r\n  props: { [key: string]: any };\r\n  propObservers: { [key: string]: Array<(oldVal: any, newVal: any) => void> } = {};\r\n  renderState: RenderState = { viewport: ViewPort.INSIDE, nodeState: NodeState.MAXIMIZED, lod: LOD.LOD2 };\r\n  group: Group = null;\r\n\r\n  currHitTerminal: Terminal;\r\n  prevHitTerminal: Terminal;\r\n  currHitUINode: UINode;\r\n  prevHitUINode: UINode;\r\n  //#endregion\r\n\r\n  //#region Accessors\r\n  get position(): Vector2 {\r\n    return this._position;\r\n  }\r\n  set position(position: Vector2) {\r\n    this._position = position;\r\n    this.reflow();\r\n    this.ui.update();\r\n    this.updateRenderState();\r\n  }\r\n  get zIndex(): number {\r\n    return this._zIndex;\r\n  }\r\n  set zIndex(zIndex: number) {\r\n    this._zIndex = zIndex;\r\n    if (this.flow.sortedNodes.remove(this)) {\r\n      this.flow.sortedNodes.add(this);\r\n    }\r\n  }\r\n  get width(): number {\r\n    return this._width;\r\n  }\r\n  set width(width: number) {\r\n    this._width = width;\r\n    this.ui.width = width;\r\n    this.ui.update();\r\n  }\r\n  //#endregion\r\n\r\n  constructor(\r\n    public flow: Flow,\r\n    public name: string,\r\n    position: Vector2,\r\n    width: number,\r\n    inputs: SerializedTerminal[], outputs: SerializedTerminal[],\r\n    public style: NodeStyle = {},\r\n    public terminalStyle: TerminalStyle = {},\r\n    props: Object = {},\r\n    public id: string = getNewGUID(),\r\n    public hitColor?: Color,\r\n    ui?: Container | SerializedContainer\r\n  ) {\r\n\r\n    super();\r\n    this._width = width;\r\n    this.style = { ...Constant.DefaultNodeStyle(), ...style }\r\n    this._position = position;\r\n    this.setupProps(props);\r\n    this.hitColorToUI = {};\r\n    this.hitColorToTerminal = {};\r\n    this.hitColorToNodeButton = {};\r\n    this.zIndex = 0;\r\n    this.context = flow.flowConnect.context;\r\n    this.offContext = flow.flowConnect.offContext;\r\n    this.offUIContext = flow.flowConnect.offUIContext;\r\n    this.setHitColor(hitColor);\r\n    this.inputs.push(...inputs.map(input => new Terminal(this, TerminalType.IN, input.dataType, input.name, input.style ? input.style : { ...terminalStyle }, null, input.id ? input.id : null, input.hitColor ? Color.deSerialize(input.hitColor) : null)));\r\n    this.outputs.push(...outputs.map(output => new Terminal(this, TerminalType.OUT, output.dataType, output.name, output.style ? output.style : { ...terminalStyle }, null, output.id ? output.id : null, output.hitColor ? Color.deSerialize(output.hitColor) : null)));\r\n    this.ui = ui ? (ui instanceof Container ? ui : Container.deSerialize(this, ui)) : new Container(this, width);\r\n\r\n    this.addNodeButton(() => this.toggleNodeState(), (nodeButton: NodeButton, position: Vector2) => {\r\n      this.context.fillStyle = this.style.maximizeButtonColor;\r\n      this.context.fillRect(position.x, position.y, this.style.nodeButtonSize, this.style.nodeButtonSize);\r\n    }, Align.Left);\r\n\r\n    this.reflow();\r\n    this.ui.update();\r\n\r\n    this.flow.on('transform', () => this.updateRenderState());\r\n  }\r\n\r\n  //#region Methods\r\n  setupProps(props: { [key: string]: any }) {\r\n    let propsTarget: { [key: string]: any } = {};\r\n    this.props = new Proxy(propsTarget, {\r\n      set: (target, prop: string, value) => {\r\n        if (typeof target[prop] === 'undefined') {\r\n          this.propObservers[prop] = [];\r\n        }\r\n        let oldValue = target[prop];\r\n        target[prop] = value;\r\n        this.propObservers[prop].forEach(callback => callback(oldValue, value));\r\n\r\n        if (this.registeredEvents['propchange']) {\r\n          this.call('propchange', this, prop, oldValue, value);\r\n        }\r\n        return true;\r\n      }\r\n    });\r\n\r\n    Object.keys(props).forEach(key => {\r\n      this.props[key] = props[key];\r\n    });\r\n  }\r\n  addPropObserver(propName: string, callback: (oldVal: any, newVal: any) => void) {\r\n    if (typeof this.props[propName] !== 'undefined') {\r\n      this.propObservers[propName].push(callback);\r\n    }\r\n  }\r\n  removePropObserver(propName: string, callback: (oldVal: any, newVal: any) => void) {\r\n    if (this.propObservers[propName]) {\r\n      this.propObservers[propName].splice(this.propObservers[propName].indexOf(callback), 1);\r\n    }\r\n  }\r\n  setHitColor(hitColor: Color) {\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.flow.hitColorToNode[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.flow.hitColorToNode[this.hitColor.rgbaString] = this;\r\n  }\r\n  addTerminal(terminal: Terminal | SerializedTerminal) {\r\n    if (!(terminal instanceof Terminal)) {\r\n      terminal = Terminal.deSerialize(this, terminal);\r\n    }\r\n    if (terminal.type === TerminalType.IN) this.inputs.push(terminal);\r\n    else this.outputs.push(terminal);\r\n    this.reflow();\r\n    this.ui.reflow();\r\n  }\r\n  addNodeButton(callback: () => void, render: (nodeButton: NodeButton, position: Vector2) => void, align: Align): NodeButton {\r\n    let newNodeButton = new NodeButton(this, callback, render, align);\r\n\r\n    let noOfButtons = this.nodeButtons.filter(nodeButton => nodeButton.align === newNodeButton.align).length;\r\n    let deltaX;\r\n    if (align === Align.Left) deltaX = noOfButtons * (this.style.nodeButtonSize + this.style.nodeButtonSpacing);\r\n    else deltaX = this.width - noOfButtons * (this.style.nodeButtonSize + this.style.nodeButtonSpacing) - this.style.nodeButtonSize;\r\n    newNodeButton.deltaX = deltaX;\r\n    this.nodeButtons.push(newNodeButton);\r\n\r\n    return newNodeButton;\r\n  }\r\n  dispose(): void {\r\n    this.flow.removeNode(this.id);\r\n  }\r\n  reflow(): void {\r\n    let y = this.position.y + this.style.terminalRowHeight / 2 + this.style.padding / 2 + this.style.titleHeight;\r\n    if (this.inputs.length > this.outputs.length) {\r\n      this.recalculateInputTerminals(y);\r\n      y = this.position.y + (this.inputs.length * this.style.terminalRowHeight) / 2 - (this.outputs.length * this.style.terminalRowHeight) / 2 + this.style.terminalRowHeight / 2 + this.style.padding / 2 + this.style.titleHeight;\r\n      this.recalculateOutputTerminals(y);\r\n    } else {\r\n      this.recalculateOutputTerminals(y);\r\n      y = this.position.y + (this.outputs.length * this.style.terminalRowHeight) / 2 - (this.inputs.length * this.style.terminalRowHeight) / 2 + this.style.terminalRowHeight / 2 + this.style.padding / 2 + this.style.titleHeight;\r\n      this.recalculateInputTerminals(y);\r\n    }\r\n  }\r\n  toggleNodeState() {\r\n    this.renderState.nodeState = this.renderState.nodeState === NodeState.MAXIMIZED ? NodeState.MINIMIZED : NodeState.MAXIMIZED;\r\n  }\r\n  updateRenderState() {\r\n    let realPos = this.position.transform(this.flow.flowConnect.transform);\r\n    this.renderState.viewport = intersects(\r\n      0, 0,\r\n      this.flow.flowConnect.canvasDimensions.width, this.flow.flowConnect.canvasDimensions.height,\r\n      realPos.x, realPos.y,\r\n      realPos.x + this.width * this.flow.flowConnect.scale,\r\n      realPos.y + (this.renderState.nodeState === NodeState.MAXIMIZED ? this.ui.height : this.style.titleHeight) * this.flow.flowConnect.scale\r\n    );\r\n\r\n    if (this.flow.flowConnect.scale > 0.6) this.renderState.lod = LOD.LOD2;\r\n    else if (this.flow.flowConnect.scale <= 0.6 && this.flow.flowConnect.scale > .3) this.renderState.lod = LOD.LOD1;\r\n    else this.renderState.lod = LOD.LOD0;\r\n\r\n    if (this.renderState.viewport === ViewPort.INTERSECT) {\r\n      this.ui.updateRenderState();\r\n    }\r\n  }\r\n  recalculateInputTerminals(y: number) {\r\n    this.inputs.forEach(terminal => {\r\n      terminal.position.x = this.position.x - this.style.terminalStripMargin - terminal.style.radius;\r\n      terminal.position.y = y;\r\n      y += this.style.terminalRowHeight;\r\n    });\r\n  }\r\n  recalculateOutputTerminals(y: number) {\r\n    this.outputs.forEach(terminal => {\r\n      terminal.position.x = this.position.x + this.ui.width + this.style.terminalStripMargin + terminal.style.radius;\r\n      terminal.position.y = y;\r\n      y += this.style.terminalRowHeight;\r\n    });\r\n  }\r\n  getHitTerminal(hitColor: string, screenPosition: Vector2, realPosition: Vector2) {\r\n    let hitTerminal = null;\r\n\r\n    realPosition = realPosition.transform(this.flow.flowConnect.transform);\r\n    let thisRealPosition = this.position.transform(this.flow.flowConnect.transform);\r\n    if (\r\n      (this.inputs.length + this.inputsUI.length > 0 && realPosition.x < thisRealPosition.x) ||\r\n      (this.outputs.length + this.outputsUI.length > 0 && realPosition.x > thisRealPosition.x + this.ui.width * this.flow.flowConnect.scale)\r\n    ) {\r\n      hitTerminal = this.hitColorToTerminal[hitColor];\r\n    }\r\n\r\n    if (this.currHitTerminal && this.currHitTerminal !== hitTerminal) {\r\n      this.currHitTerminal.onExit(screenPosition, realPosition);\r\n      hitTerminal && hitTerminal.onEnter(screenPosition, realPosition);\r\n    }\r\n\r\n    return hitTerminal;\r\n  }\r\n  getHitUINode(hitColor: string): UINode {\r\n    let uiNode = this.hitColorToUI[hitColor];\r\n    if (uiNode instanceof Container) return null;\r\n    return uiNode;\r\n  }\r\n  getHitNodeButton(hitColor: string): NodeButton {\r\n    return this.hitColorToNodeButton[hitColor];\r\n  }\r\n  getInput(terminal: string | number): any {\r\n    if (typeof terminal === 'string') {\r\n      let inputTerminal = this.inputs.find(currTerm => (currTerm.name === terminal));\r\n      if (inputTerminal) return (inputTerminal as any)['getData']();\r\n    } else {\r\n      if (this.inputs[terminal]) return (this.inputs[terminal] as any)['getData']();\r\n    }\r\n    return null;\r\n  }\r\n  setOutput(terminal: string | number, data: any) {\r\n    if (typeof terminal === 'string') {\r\n      let outputTerminal = this.outputs.find(currTerm => (currTerm.name === terminal));\r\n      if (outputTerminal) return (outputTerminal as any)['setData'](data);\r\n    } else {\r\n      if (this.outputs[terminal]) (this.outputs[terminal] as any)['setData'](data);\r\n    }\r\n  }\r\n  run() {\r\n    if (this.flow.state === FlowState.Stopped) return;\r\n\r\n    this.call('process', this, this.inputs.map(terminal => terminal.connectors.length > 0 ? terminal.connectors[0].data : null));\r\n  }\r\n\r\n  render(): void {\r\n    if (this.renderState.viewport === ViewPort.OUTSIDE) return;\r\n    if (this.renderState.nodeState === NodeState.MAXIMIZED) this.ui.render();\r\n\r\n    this.context.save();\r\n    this._render();\r\n    this.context.restore();\r\n\r\n    this.nodeButtons.forEach(nodeButton => nodeButton.render())\r\n\r\n    this.offContext.save();\r\n    this._offRender();\r\n    this.offContext.restore();\r\n  }\r\n  _render() {\r\n    if (this.renderState.nodeState === NodeState.MAXIMIZED) {\r\n      if (this.renderState.lod > 0) {\r\n        this.inputs.forEach(terminal => terminal.render());\r\n        this.outputs.forEach(terminal => terminal.render());\r\n      }\r\n    } else {\r\n      this.context.fillStyle = 'green';\r\n      if ((this.inputs.length + this.inputsUI.length) > 0) {\r\n        let radius = this.inputs.length > 0 ? this.inputs[0].style.radius : this.inputsUI[0].style.radius;\r\n        this.context.fillRect(this.position.x - this.style.terminalStripMargin - radius * 2, this.position.y + this.style.titleHeight / 2 - radius, radius * 2, radius * 2);\r\n      }\r\n      if ((this.outputs.length + this.outputsUI.length) > 0) {\r\n        let radius = this.outputs.length > 0 ? this.outputs[0].style.radius : this.outputsUI[0].style.radius;\r\n        this.context.fillRect(this.position.x + this.width + this.style.terminalStripMargin, this.position.y + this.style.titleHeight / 2 - radius, radius * 2, radius * 2);\r\n      }\r\n    }\r\n\r\n    this.context.fillStyle = this.style.titleColor;\r\n    this.context.font = this.style.titleFontSize + ' ' + this.style.titleFont;\r\n    this.context.textBaseline = 'middle';\r\n    this.context.fillText(this.name, this.position.x + this.ui.width / 2 - this.context.measureText(this.name).width / 2, this.position.y + this.style.titleHeight / 2);\r\n\r\n    if (this.renderState.nodeState === NodeState.MAXIMIZED) {\r\n      this.context.fillStyle = this.style.color;\r\n      this.context.font = this.style.fontSize + ' ' + this.style.font;\r\n      this.context.textBaseline = 'middle';\r\n      this.inputs.forEach(terminal => {\r\n        this.context.fillText(terminal.name, terminal.position.x + terminal.style.radius + this.style.terminalStripMargin + this.style.padding, terminal.position.y);\r\n      });\r\n      this.outputs.forEach(terminal => {\r\n        this.context.fillText(terminal.name, terminal.position.x - terminal.style.radius - this.style.terminalStripMargin - this.style.padding - this.context.measureText(terminal.name).width, terminal.position.y);\r\n      });\r\n    }\r\n\r\n    if (this.focused) {\r\n      this.context.strokeStyle = '#000';\r\n      this.context.lineWidth = 2;\r\n      let inputTerminalsWidth = this.inputs.length === 0 ? (this.inputsUI.length === 0 ? 0 : this.inputsUI[0].style.radius * 2) : this.inputs[0].style.radius * 2;\r\n      inputTerminalsWidth += this.style.terminalStripMargin * 2;\r\n      let outputTerminalsWidth = this.outputs.length === 0 ? (this.outputsUI.length === 0 ? 0 : this.outputsUI[0].style.radius * 2) : this.outputs[0].style.radius * 2;\r\n      outputTerminalsWidth += this.style.terminalStripMargin * 2;\r\n      this.context.strokeRoundRect(\r\n        this.position.x - inputTerminalsWidth,\r\n        this.position.y,\r\n        this.width + inputTerminalsWidth + outputTerminalsWidth,\r\n        this.renderState.nodeState === NodeState.MAXIMIZED ? (this.ui.height + this.style.padding) : this.style.titleHeight,\r\n        4\r\n      );\r\n    }\r\n  }\r\n  _offRender() {\r\n    this.offContext.fillStyle = this.hitColor.rgbaCSSString;\r\n    let x = this.position.x;\r\n    let y = this.position.y;\r\n    let inputTerminalsStripWidth = 0, outputTerminalsStripWidth = 0;\r\n    if ((this.inputs.length + this.inputsUI.length) !== 0) {\r\n      let radius = this.inputs.length > 0 ? this.inputs[0].style.radius : this.inputsUI[0].style.radius;\r\n      x -= this.style.terminalStripMargin + radius * 2;\r\n      inputTerminalsStripWidth = radius * 2 + this.style.terminalStripMargin;\r\n    }\r\n    if ((this.outputs.length + this.outputsUI.length) !== 0) {\r\n      let radius = this.outputs.length > 0 ? this.outputs[0].style.radius : this.outputsUI[0].style.radius;\r\n      outputTerminalsStripWidth = radius * 2 + this.style.terminalStripMargin;\r\n    }\r\n    this.offContext.fillRect(x, y,\r\n      this.ui.width + inputTerminalsStripWidth + outputTerminalsStripWidth,\r\n      this.renderState.nodeState === NodeState.MAXIMIZED ? this.ui.height : this.style.titleHeight\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region Events\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    this.currHitUINode = this.getHitUINode(hitColor);\r\n    this.currHitUINode && this.currHitUINode.onDown(screenPosition, realPosition);\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n    if (hitTerminal) {\r\n      this.currHitTerminal = hitTerminal;\r\n      this.currHitTerminal.onDown(screenPosition, realPosition);\r\n    }\r\n  }\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n\r\n    if (hitTerminal !== this.prevHitTerminal) {\r\n      this.prevHitTerminal && this.prevHitTerminal.onExit(screenPosition, realPosition);\r\n      hitTerminal && hitTerminal.onEnter(screenPosition, realPosition);\r\n    } else {\r\n      hitTerminal && (!this.currHitTerminal) && hitTerminal.onOver(screenPosition, realPosition);\r\n    }\r\n    this.prevHitTerminal = hitTerminal;\r\n\r\n    let hitUINode = this.getHitUINode(hitColor);\r\n    if (hitUINode !== this.prevHitUINode) {\r\n      this.prevHitUINode && this.prevHitUINode.onExit(screenPosition, realPosition);\r\n      hitUINode && hitUINode.onEnter(screenPosition, realPosition);\r\n    } else {\r\n      hitUINode && (!this.currHitUINode) && hitUINode.onOver(screenPosition, realPosition);\r\n    }\r\n    this.prevHitUINode = hitUINode;\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n    hitTerminal && hitTerminal.onExit(screenPosition, realPosition);\r\n    this.prevHitTerminal && this.prevHitTerminal.onExit(screenPosition, realPosition);\r\n    this.prevHitTerminal = null;\r\n    this.currHitTerminal && this.currHitTerminal.onExit(screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n\r\n    this.currHitUINode = null;\r\n    let hitUINode = this.getHitUINode(hitColor);\r\n    hitUINode && hitUINode.onUp(screenPosition.clone(), realPosition.clone());\r\n\r\n    let hitTerminal = this.getHitTerminal(hitColor, screenPosition, realPosition);\r\n    hitTerminal && hitTerminal.onUp(screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    let hitColor = Color.rgbaToString(this.flow.flowConnect.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data);\r\n    if (realPosition.y < this.position.y + this.style.titleHeight * this.flow.flowConnect.scale) {\r\n      let hitNodeButton = this.getHitNodeButton(hitColor);\r\n      hitNodeButton && hitNodeButton.callback();\r\n    } else {\r\n      this.currHitTerminal && this.currHitTerminal.onClick(screenPosition, realPosition);\r\n\r\n      let hitUINode = this.getHitUINode(hitColor);\r\n      hitUINode && hitUINode.onClick(screenPosition.clone(), realPosition.clone());\r\n    }\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n\r\n    this.currHitUINode && this.currHitUINode.draggable && this.currHitUINode.onDrag(screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    this.call('rightclick', this);\r\n  }\r\n  //#endregion\r\n\r\n  //#region UICreators\r\n  createLabel(text: string, propName?: string, input?: boolean, output?: boolean, style?: LabelStyle): Label {\r\n    return new Label(this, text, propName, input, output, style);\r\n  }\r\n  createImage(source: string, propName?: string, style?: ImageStyle): Image {\r\n    return new Image(this, source, propName, style);\r\n  }\r\n  createSlider(min: number, max: number, value: number, precision?: number, propName?: string, input?: boolean, output?: boolean, height?: number, style?: SliderStyle) {\r\n    return new Slider(this, min, max, value, precision, propName, input, output, height, style);\r\n  }\r\n  createHozLayout(childs?: UINode[], style?: HorizontalLayoutStyle) {\r\n    return new HorizontalLayout(this, childs, style);\r\n  }\r\n  createButton(text: string, input?: boolean, output?: boolean, height?: number, style?: ButtonStyle) {\r\n    return new Button(this, text, input, output, height, style);\r\n  }\r\n  createToggle(propName?: string, input?: boolean, output?: boolean, height?: number, style?: ToggleStyle) {\r\n    return new Toggle(this, propName, input, output, height, style);\r\n  }\r\n  createSelect(options: string[], propName?: string, input?: boolean, output?: boolean, height?: number, style?: SelectStyle) {\r\n    return new Select(this, options, propName, input, output, height, style);\r\n  }\r\n  createSource(accept?: string, propName?: string, input?: boolean, output?: boolean, height?: number, style?: SourceStyle) {\r\n    return new Source(this, accept, propName, input, output, height, style);\r\n  }\r\n  createDisplay(height: number, render: (context: CanvasRenderingContext2D, width: number, height: number) => void, style?: DisplayStyle) {\r\n    return new Display(this, height, render, style);\r\n  }\r\n  createInput(value: string | number, propName?: string, input?: boolean, output?: boolean, height?: number, style?: InputStyle) {\r\n    return new Input(this, value, propName, input, output, height, style);\r\n  }\r\n  //#endregion\r\n\r\n  serialize(): SerializedNode {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      position: this.position.serialize(),\r\n      width: this.width,\r\n      props: this.props,\r\n      inputs: this.inputs.map(terminal => terminal.serialize()),\r\n      outputs: this.outputs.map(terminal => terminal.serialize()),\r\n      style: this.style,\r\n      terminalStyle: this.terminalStyle,\r\n      hitColor: this.hitColor.serialize(),\r\n      zIndex: this.zIndex,\r\n      focused: this.focused,\r\n      renderState: this.renderState,\r\n      ui: this.ui.serialize()\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedNode): Node {\r\n    return new Node(flow, data.name, Vector2.deSerialize(data.position), data.width, data.inputs, data.outputs, data.style, data.terminalStyle, data.props, data.id, Color.deSerialize(data.hitColor), data.ui);\r\n  }\r\n}\r\n","import { Align, FlowState, TerminalType } from '../math/constants';\r\nimport { Vector2 } from '../math/vector';\r\nimport { Color } from './color';\r\nimport { Flow } from './flow';\r\nimport { NodeStyle, SerializedNode, TerminalStyle } from './interfaces';\r\nimport { Node, NodeButton } from './node';\r\nimport { Terminal } from './terminal';\r\nimport { TunnelNode } from './tunnel-node';\r\n\r\nexport class SubFlowNode extends Node {\r\n\r\n  constructor(\r\n    flow: Flow,\r\n    name: string,\r\n    position: Vector2,\r\n    width: number,\r\n    style: NodeStyle = {}, terminalStyle: TerminalStyle = {},\r\n    props: Object = {},\r\n    inputs: any[], outputs: any[],\r\n    public subFlow: Flow,\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(flow, name, position, width, inputs ? inputs : [], outputs ? outputs : [], style, terminalStyle, props, id, hitColor);\r\n\r\n    this.subFlow.on('add-input', (subFlow, tunnel: TunnelNode) => {\r\n      let proxyTerminal = new Terminal(this, TerminalType.IN, tunnel.outputs[0].dataType, tunnel.outputs[0].name);\r\n      tunnel.proxyTerminal = proxyTerminal;\r\n      this.addTerminal(proxyTerminal);\r\n    });\r\n    this.subFlow.on('add-output', (subFlow, tunnel: TunnelNode) => {\r\n      let proxyTerminal = new Terminal(this, TerminalType.OUT, tunnel.inputs[0].dataType, tunnel.inputs[0].name);\r\n      tunnel.proxyTerminal = proxyTerminal;\r\n      this.addTerminal(proxyTerminal);\r\n    });\r\n\r\n    this.subFlow.inputs.forEach((inputNode, index) => inputNode.proxyTerminal = this.inputs[index]);\r\n    this.subFlow.outputs.forEach((outputNode, index) => outputNode.proxyTerminal = this.outputs[index]);\r\n\r\n    this.addNodeButton(() => {\r\n      this.flow.flowConnect.render(this.subFlow);\r\n    }, (nodeButton: NodeButton, position: Vector2) => {\r\n      this.context.strokeStyle = this.style.expandButtonColor;\r\n\r\n      this.context.beginPath();\r\n      this.context.moveTo(position.x, position.y + this.style.nodeButtonSize / 2);\r\n      this.context.lineTo(position.x, position.y + this.style.nodeButtonSize);\r\n      this.context.lineTo(position.x + this.style.nodeButtonSize, position.y);\r\n      this.context.lineTo(position.x + this.style.nodeButtonSize, position.y + this.style.nodeButtonSize / 2);\r\n      this.context.moveTo(position.x + this.style.nodeButtonSize, position.y);\r\n      this.context.lineTo(position.x + this.style.nodeButtonSize / 2, position.y);\r\n      this.context.moveTo(position.x, position.y + this.style.nodeButtonSize);\r\n      this.context.lineTo(position.x + this.style.nodeButtonSize / 2, position.y + this.style.nodeButtonSize);\r\n      this.context.closePath();\r\n\r\n      this.context.stroke();\r\n    }, Align.Right);\r\n  }\r\n\r\n  run() {\r\n    if (this.flow.state === FlowState.Stopped) return;\r\n\r\n    this.call('process', this);\r\n    this.subFlow.start();\r\n  }\r\n  serialize(): SerializedNode {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      position: this.position.serialize(),\r\n      width: this.width,\r\n      props: this.props,\r\n      inputs: this.inputs.map(terminal => terminal.serialize()),\r\n      outputs: this.outputs.map(terminal => terminal.serialize()),\r\n      style: this.style,\r\n      terminalStyle: this.terminalStyle,\r\n      hitColor: this.hitColor.serialize(),\r\n      zIndex: this.zIndex,\r\n      focused: this.focused,\r\n      renderState: this.renderState,\r\n      ui: this.ui.serialize(),\r\n      subFlow: this.subFlow.serialize()\r\n    };\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedNode): SubFlowNode {\r\n    let subFlow = Flow.deSerialize(flow.flowConnect, data.subFlow);\r\n    return new SubFlowNode(flow, data.name, Vector2.deSerialize(data.position), data.width, data.style, data.terminalStyle, data.props, data.inputs, data.outputs, subFlow, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Vector2 } from \"../math/vector\";\r\nimport { Constant, TerminalType } from '../math/constants';\r\nimport { getNewGUID } from \"../utils/utils\";\r\nimport { Color } from \"./color\";\r\nimport { Connector } from './connector';\r\nimport { Hooks } from './hooks';\r\nimport { Node } from './node';\r\nimport { Events, Serializable, SerializedTerminal, TerminalStyle } from \"./interfaces\";\r\n\r\nexport class Terminal extends Hooks implements Events, Serializable {\r\n  connectors: Connector[];\r\n  position: Vector2;\r\n  focus: boolean;\r\n\r\n  constructor(\r\n    public node: Node,\r\n    public type: TerminalType,\r\n    public dataType: string,\r\n    public name: string,\r\n    public style: TerminalStyle = {},\r\n    public eventCallback?: (...args: any) => void,\r\n    public id?: string,\r\n    public hitColor?: Color) {\r\n\r\n    super();\r\n    this.style = { ...Constant.DefaultTerminalStyle(), ...style };\r\n    this.id = id ? id : getNewGUID();\r\n    this.setHitColor(hitColor);\r\n    this.connectors = [];\r\n    this.position = Vector2.Zero();\r\n    this.focus = false;\r\n\r\n    if (this.type === TerminalType.IN) (this as any)['getData'] = () => {\r\n      if (this.connectors.length > 0) return this.connectors[0].data;\r\n      return null;\r\n    };\r\n    else (this as any)['setData'] = (data: any) => {\r\n      this.connectors.forEach(connector => connector.data = data);\r\n    };\r\n  }\r\n\r\n  setHitColor(hitColor: Color) {\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.node.hitColorToTerminal[hitColor.rgbaString] || this.node.hitColorToUI[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.node.hitColorToTerminal[this.hitColor.rgbaString] = this;\r\n  }\r\n  render() {\r\n    this.node.context.save();\r\n\r\n    if (this.focus) {\r\n      this.node.context.beginPath();\r\n      this.node.context.arc(this.position.x, this.position.y, this.style.radius * 3, 0, 2 * Math.PI);\r\n      this.node.context.fillStyle = this.style.focusColor;\r\n      this.node.context.fill();\r\n    }\r\n\r\n    if (this.dataType === 'event') {\r\n      this.node.context.beginPath();\r\n      this.node.context.moveTo(this.position.x, this.position.y - this.style.radius * 1.3);\r\n      this.node.context.lineTo(this.position.x + this.style.radius * 1.3, this.position.y);\r\n      this.node.context.lineTo(this.position.x, this.position.y + this.style.radius * 1.3);\r\n      this.node.context.lineTo(this.position.x - this.style.radius * 1.3, this.position.y);\r\n      this.node.context.lineTo(this.position.x, this.position.y - this.style.radius * 1.3);\r\n      this.node.context.closePath();\r\n    } else {\r\n      this.node.context.beginPath();\r\n      this.node.context.arc(this.position.x, this.position.y, this.style.radius, 0, 2 * Math.PI);\r\n    }\r\n    this.node.context.fillStyle = this.focus ? '#00ff00' : (this.node.flow.terminalTypeColors[this.dataType] || '#888');\r\n    this.node.context.strokeStyle = this.style.borderColor;\r\n    this.node.context.shadowBlur = this.style.shadowBlur;\r\n    this.node.context.shadowColor = this.style.shadowColor;\r\n    this.node.context.fill();\r\n    this.node.context.stroke();\r\n\r\n    this.node.context.restore();\r\n\r\n    this.offUIRender();\r\n  }\r\n  offUIRender() {\r\n    this.node.offUIContext.save();\r\n\r\n    this.node.offUIContext.beginPath();\r\n    this.node.offUIContext.arc(this.position.x, this.position.y, this.style.radius + this.node.style.terminalStripMargin, 0, 2 * Math.PI);\r\n    this.node.offUIContext.fillStyle = this.hitColor.rgbaCSSString;\r\n    this.node.offUIContext.fill();\r\n\r\n    this.node.offUIContext.restore();\r\n  }\r\n\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n\r\n    this.focus = true;\r\n    this.node.flow.flowConnect.cursor = 'pointer';\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n\r\n    this.focus = false;\r\n    this.node.flow.flowConnect.cursor = 'unset';\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n\r\n    if (this.connectors.length > 0) {\r\n      if (this.type === TerminalType.IN) {\r\n        this.connectors[0].endNode.currHitTerminal = null;\r\n        this.connectors[0].end = null;\r\n        this.connectors[0].floatingTip = realPosition;\r\n        this.node.flow.flowConnect.floatingConnector = this.connectors[0];\r\n        this.connectors[0].start.call('disconnect', this.connectors[0].start, this.connectors[0]);\r\n        this.call('disconnect', this, this.connectors[0]);\r\n        this.connectors.pop();\r\n      } else {\r\n        if (this.node.flow.flowConnect.floatingConnector) return;\r\n        let connector = new Connector(this.node.flow, this, null, realPosition, {});\r\n        this.node.flow.connectors[connector.id] = connector;\r\n        this.node.flow.flowConnect.floatingConnector = connector;\r\n      }\r\n    } else {\r\n      if (this.node.flow.flowConnect.floatingConnector) return;\r\n      let connector = new Connector(this.node.flow, this.type === TerminalType.IN ? null : this, this.type === TerminalType.IN ? this : null, realPosition, {});\r\n      this.node.flow.connectors[connector.id] = connector;\r\n      this.node.flow.flowConnect.floatingConnector = connector;\r\n    }\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    this.call('rightclick', this);\r\n  }\r\n\r\n  onEvent(data: any): void {\r\n    if (this.type === TerminalType.IN && this.eventCallback) this.eventCallback(data);\r\n  }\r\n  emit(data: any) {\r\n    if (this.type === TerminalType.OUT && this.connectors.length !== 0) {\r\n      this.connectors.forEach(connector => {\r\n        connector.end && connector.end.onEvent(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  serialize(): SerializedTerminal {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      dataType: this.dataType,\r\n      name: this.name,\r\n      style: this.style,\r\n      hitColor: this.hitColor.serialize()\r\n    };\r\n  }\r\n  static deSerialize(node: Node, data: SerializedTerminal): Terminal {\r\n    return new Terminal(node, data.type, data.dataType, data.name, data.style, null, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { FlowState } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Color } from \"./color\";\r\nimport { Flow } from \"./flow\";\r\nimport { NodeStyle, SerializedTunnelNode, TerminalStyle } from \"./interfaces\";\r\nimport { Node } from \"./node\";\r\nimport { Terminal } from \"./terminal\";\r\n\r\nexport class TunnelNode extends Node {\r\n  _proxyTerminal: Terminal;\r\n  get proxyTerminal(): Terminal { return this._proxyTerminal; }\r\n  set proxyTerminal(terminal: Terminal) {\r\n    this._proxyTerminal = terminal;\r\n    this._proxyTerminal.on('data', data => {\r\n      (this.outputs[0] as any)['setData'](data);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    flow: Flow,\r\n    nodeName: string,\r\n    position: Vector2,\r\n    width: number,\r\n    inputs: any[], outputs: any[],\r\n    style: NodeStyle, terminalStyle: TerminalStyle,\r\n    props: Object,\r\n    id?: string,\r\n    hitColor?: Color,\r\n  ) {\r\n\r\n    super(flow, nodeName, position, width, inputs, outputs, style, terminalStyle, props, id, hitColor);\r\n\r\n    if (this.inputs.length > 0) {\r\n      this.inputs[0].on('data', data => {\r\n        (this.proxyTerminal as any)['setData'](data);\r\n      });\r\n    } else {\r\n      this.outputs[0].on('connect', (terminal, connector) => {\r\n        if (this.proxyTerminal.connectors.length > 0) {\r\n          connector.data = this.proxyTerminal.connectors[0].data;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  serialize(): SerializedTunnelNode {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      position: this.position.serialize(),\r\n      width: this.width,\r\n      props: this.props,\r\n      inputs: this.inputs.map(terminal => terminal.serialize()),\r\n      outputs: this.outputs.map(terminal => terminal.serialize()),\r\n      style: this.style,\r\n      terminalStyle: this.terminalStyle,\r\n      hitColor: this.hitColor.serialize(),\r\n      zIndex: this.zIndex,\r\n      focused: this.focused,\r\n      renderState: this.renderState,\r\n      ui: this.ui.serialize(),\r\n      proxyTerminalId: this.proxyTerminal.id\r\n    }\r\n  }\r\n  static deSerialize(flow: Flow, data: SerializedTunnelNode): TunnelNode {\r\n    return new TunnelNode(flow, data.name, Vector2.deSerialize(data.position), data.width, data.inputs, data.outputs, data.style, data.terminalStyle, data.props, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Connector, Flow, Group, Node, Color, Hooks } from \"./core/index\";\r\nimport { Vector2 } from \"./math/vector\";\r\nimport { Constant, TerminalType, ViewPort } from './math/constants';\r\nimport { Dimension, FlowOptions, Pointer, SerializedFlow } from \"./core/interfaces\";\r\nimport { intersects } from \"./utils/utils\";\r\n\r\nexport class FlowConnect extends Hooks {\r\n  canvasDimensions: Dimension = { top: 0, left: 0, width: 0, height: 0 };\r\n  canvasElement: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  offCanvasElement: OffscreenCanvas | HTMLCanvasElement;\r\n  offContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  offUICanvasElement: OffscreenCanvas | HTMLCanvasElement;\r\n  offUIContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  offGroupCanvasElement: OffscreenCanvas | HTMLCanvasElement;\r\n  offGroupContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  get cursor(): string { return this.canvasElement.style.cursor; }\r\n  set cursor(cursor: string) { this.canvasElement.style.cursor = cursor; }\r\n  frameId: number;\r\n\r\n  rootFlow: Flow;\r\n  currFlow: Flow;\r\n\r\n  floatingConnector: Connector;\r\n  currHitNode: Node;\r\n  prevHitNode: Node;\r\n  currHitGroup: Group;\r\n  currGroup: Group;\r\n  groupStartPoint: Vector2;\r\n  pointers: Pointer[] = [];\r\n  keymap: { [key: string]: boolean } = {};\r\n  touchControls: { [control: string]: boolean } = { 'CreateGroup': false };\r\n  minScale: number = 0.1;\r\n  maxScale: number = 5;\r\n  wheelScaleDelta: number = 1.05;\r\n  pinchScaleDelta: number = 1.02;\r\n  genericInput: HTMLInputElement = document.createElement('input');\r\n  get scale(): number { return this.transform.a; }\r\n  transform: DOMMatrix = new DOMMatrix();\r\n  inverseTransform: DOMMatrix = new DOMMatrix();\r\n  identity: DOMMatrix = new DOMMatrix();\r\n\r\n  constructor(mount?: HTMLCanvasElement | HTMLDivElement, width?: number, height?: number) {\r\n    super();\r\n    this.prepareCanvas(mount, width, height);\r\n    this.setupHitCanvas();\r\n    this.calculateCanvasDimension();\r\n    this.registerChangeListeners();\r\n    this.attachStyles();\r\n    this.polyfill();\r\n\r\n    this.registerEvents();\r\n    this.setGenericInput();\r\n  }\r\n\r\n  registerChangeListeners() {\r\n    let throttle = false;\r\n    document.addEventListener('scroll', () => {\r\n      if (!throttle) {\r\n        window.requestAnimationFrame(() => {\r\n          this.calculateCanvasDimension();\r\n          throttle = false;\r\n        });\r\n        throttle = true;\r\n      }\r\n    });\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      this.calculateCanvasDimension();\r\n    })\r\n    resizeObserver.observe(this.canvasElement);\r\n  }\r\n  prepareCanvas(mount?: HTMLCanvasElement | HTMLDivElement, width?: number, height?: number) {\r\n    if (!mount) {\r\n      this.canvasElement = document.createElement('canvas');\r\n      this.canvasElement.width = document.body.clientWidth;\r\n      this.canvasElement.height = document.body.clientHeight;\r\n      document.body.appendChild(this.canvasElement);\r\n    } else if (mount instanceof HTMLDivElement) {\r\n      this.canvasElement = document.createElement('canvas');\r\n      if (width && height) {\r\n        this.canvasElement.width = width;\r\n        this.canvasElement.height = height;\r\n      } else {\r\n        this.canvasElement.width = mount.clientWidth;\r\n        this.canvasElement.height = mount.clientHeight;\r\n      }\r\n      mount.appendChild(this.canvasElement);\r\n    } else {\r\n      this.canvasElement = mount;\r\n      if (width && height) {\r\n        this.canvasElement.width = width;\r\n        this.canvasElement.height = height;\r\n      }\r\n    }\r\n    this.context = this.canvasElement.getContext('2d');\r\n  }\r\n  setupHitCanvas() {\r\n    if (typeof OffscreenCanvas !== 'undefined' && typeof OffscreenCanvasRenderingContext2D !== 'undefined') {\r\n      this.offCanvasElement = new OffscreenCanvas(this.canvasDimensions.width, this.canvasDimensions.height);\r\n      this.offUICanvasElement = new OffscreenCanvas(this.canvasDimensions.width, this.canvasDimensions.height);\r\n      this.offGroupCanvasElement = new OffscreenCanvas(this.canvasDimensions.width, this.canvasDimensions.height);\r\n    } else {\r\n      this.offCanvasElement = document.createElement('canvas');\r\n      this.offUICanvasElement = document.createElement('canvas');\r\n      this.offGroupCanvasElement = document.createElement('canvas');\r\n    }\r\n    this.offContext = this.offCanvasElement.getContext('2d');\r\n    this.offUIContext = this.offUICanvasElement.getContext('2d');\r\n    this.offGroupContext = this.offGroupCanvasElement.getContext('2d');\r\n  }\r\n  attachStyles() {\r\n    this.canvasElement.style.touchAction = 'none';\r\n\r\n    let inputStyle = document.createElement('style');\r\n    inputStyle.innerHTML = 'input.flow-connect-input { position: fixed; visibility: hidden; pointer-events: none; z-index: 100; border: none; border-radius: 0; box-sizing: border-box;} input.flow-connect-input:focus { outline: none; }';\r\n    document.getElementsByTagName('head')[0].appendChild(inputStyle);\r\n  }\r\n  calculateCanvasDimension() {\r\n    let boundingRect = this.canvasElement.getBoundingClientRect();\r\n    this.canvasDimensions = {\r\n      top: Math.round(boundingRect.top - window.scrollY),\r\n      left: Math.round(boundingRect.left - window.scrollX),\r\n      width: Math.round(boundingRect.width),\r\n      height: Math.round(boundingRect.height)\r\n    }\r\n    this.offCanvasElement.width = this.canvasDimensions.width;\r\n    this.offCanvasElement.height = this.canvasDimensions.height;\r\n    this.offUICanvasElement.width = this.canvasDimensions.width;\r\n    this.offUICanvasElement.height = this.canvasDimensions.height;\r\n    this.offGroupCanvasElement.width = this.canvasDimensions.width;\r\n    this.offGroupCanvasElement.height = this.canvasDimensions.height;\r\n  }\r\n  polyfill() {\r\n    CanvasRenderingContext2D.prototype.roundRect = function (x: number, y: number, width: number, height: number, radius: number) {\r\n      this.beginPath();\r\n      this.moveTo(x + radius, y);\r\n      this.lineTo(x + width - radius, y);\r\n      this.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      this.lineTo(x + width, y + height - radius);\r\n      this.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n      this.lineTo(x + radius, y + height);\r\n      this.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      this.lineTo(x, y + radius);\r\n      this.quadraticCurveTo(x, y, x + radius, y);\r\n      this.closePath();\r\n    }\r\n    CanvasRenderingContext2D.prototype.strokeRoundRect = function (x: number, y: number, width: number, height: number, radius: number) {\r\n      if (typeof radius === 'undefined') radius = 5;\r\n      this.roundRect(x, y, width, height, radius);\r\n      this.stroke();\r\n    }\r\n    CanvasRenderingContext2D.prototype.fillRoundRect = function (x: number, y: number, width: number, height: number, radius: number) {\r\n      if (typeof radius === 'undefined') radius = 5;\r\n      this.roundRect(x, y, width, height, radius);\r\n      this.fill();\r\n    }\r\n  }\r\n  createFlow(options: FlowOptions = { name: 'New Flow', rules: {}, terminalTypeColors: {} }): Flow {\r\n    Object.keys(Constant.DefaultRules).forEach(key => options.rules[key] = Constant.DefaultRules[key]);\r\n    return new Flow(this, options.name, options.rules, options.terminalTypeColors);\r\n  }\r\n\r\n  registerEvents(): void {\r\n    let dragDelta: Vector2;\r\n    let prevPanPosition: Vector2 = Vector2.Zero();\r\n    let prevPinchDistance: number = -1;\r\n\r\n    window.onkeydown = (ev: KeyboardEvent) => {\r\n      !this.keymap[ev.key] && (this.keymap[ev.key] = true);\r\n    }\r\n    window.onkeyup = (ev: KeyboardEvent) => {\r\n      this.keymap[ev.key] = false;\r\n    }\r\n\r\n    this.canvasElement.onpointerdown = (ev: PointerEvent) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.addPointer(ev.pointerId, this.getRelativePosition(ev));\r\n      if (this.pointers.length === 1) {\r\n        prevPanPosition = this.pointers[0].screenPosition;\r\n        this.currHitNode = this.getHitNode(this.pointers[0].screenPosition);\r\n        if (this.currHitNode) {\r\n          this.currHitNode.zIndex = Infinity;\r\n          if (this.keymap['Control']) {\r\n            this.currHitNode.focused = !this.currHitNode.focused;\r\n          } else {\r\n            this.currFlow.removeAllFocus();\r\n            this.currHitNode.focused = true;\r\n          }\r\n          this.currHitNode.onDown(this.pointers[0].screenPosition.clone(), this.pointers[0].realPosition.clone());\r\n          dragDelta = this.currHitNode.position.subtract(this.pointers[0].realPosition);\r\n        } else {\r\n          if (!this.keymap['Control']) {\r\n            this.currFlow.removeAllFocus();\r\n\r\n            this.currHitGroup = this.getHitGroup(this.pointers[0].screenPosition);\r\n            this.currHitGroup && (dragDelta = this.currHitGroup.position.subtract(this.pointers[0].realPosition));\r\n          }\r\n          else if (this.keymap['Control'] || this.touchControls['CreateGroup']) {\r\n            this.groupStartPoint = this.pointers[0].realPosition.clone();\r\n            this.currGroup = new Group(this.currFlow, this.groupStartPoint.clone(), 0, 0, 'New Group');\r\n          }\r\n        }\r\n      } else {\r\n        this.currHitNode = null;\r\n        this.currHitGroup = null;\r\n        this.currFlow.removeAllFocus();\r\n        if (this.floatingConnector) {\r\n          this.fallbackConnection();\r\n        }\r\n      }\r\n    }\r\n    this.canvasElement.onpointerup = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.removePointer(this.pointers, ev);\r\n\r\n      if (this.pointers.length < 2) prevPinchDistance = -1;\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let realPosition = screenPosition.transform(this.inverseTransform);\r\n\r\n      if (this.currHitNode) this.handleGrouping(screenPosition);\r\n\r\n      this.currHitNode = null;\r\n      this.currHitGroup = null;\r\n\r\n      let hitNode = this.getHitNode(screenPosition);\r\n      hitNode && hitNode.onUp(screenPosition.clone(), realPosition.clone());\r\n\r\n      if (this.currGroup) {\r\n        let newGroup = this.currGroup;\r\n        this.currGroup = null;\r\n        if (newGroup.width > 10 && newGroup.height > 10) {\r\n          this.currFlow.groups.push(newGroup);\r\n          newGroup.setContainedNodes();\r\n        }\r\n      }\r\n      if (this.floatingConnector) this.handleConnection(hitNode, screenPosition, realPosition);\r\n    }\r\n    this.canvasElement.onpointerout = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.removePointer(this.pointers, ev);\r\n      if (this.pointers.length === 0) {\r\n        if (this.currHitNode) {\r\n          let screenPosition = this.getRelativePosition(ev);\r\n          this.handleGrouping(screenPosition);\r\n        }\r\n        this.currHitNode = null;\r\n        this.currHitGroup = null;\r\n      }\r\n\r\n      if (this.currGroup) {\r\n        let newGroup = this.currGroup;\r\n        this.currGroup = null;\r\n        if (newGroup.width > 10 && newGroup.height > 10) {\r\n          this.currFlow.groups.push(newGroup);\r\n          newGroup.setContainedNodes();\r\n        }\r\n      }\r\n\r\n      if (this.floatingConnector) this.fallbackConnection();\r\n\r\n      if (this.prevHitNode) {\r\n        let screenPosition = this.getRelativePosition(ev);\r\n        let realPosition = screenPosition.transform(this.inverseTransform);\r\n        this.prevHitNode.onExit(screenPosition, realPosition);\r\n        this.prevHitNode = null;\r\n      }\r\n    }\r\n    this.canvasElement.onpointermove = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let realPosition = screenPosition.transform(this.inverseTransform);\r\n\r\n      this.updatePointer(ev.pointerId, screenPosition, realPosition);\r\n\r\n      if (this.pointers.length === 2) {\r\n        let currPinchDistance = Vector2.Distance(this.pointers[0].screenPosition, this.pointers[1].screenPosition);\r\n        if (prevPinchDistance > 0) {\r\n          if (currPinchDistance !== prevPinchDistance) {\r\n            this.handleZoom(currPinchDistance > prevPinchDistance, Vector2.Midpoint(this.pointers[0].screenPosition, this.pointers[1].screenPosition), this.pinchScaleDelta);\r\n          }\r\n        }\r\n        prevPinchDistance = currPinchDistance;\r\n      }\r\n\r\n      if (this.currGroup) {\r\n        if (realPosition.x < this.groupStartPoint.x) this.currGroup._position.x = realPosition.x;\r\n        this.currGroup.width = Math.abs(this.groupStartPoint.x - realPosition.x);\r\n\r\n        if (realPosition.y < this.groupStartPoint.y) this.currGroup._position.y = realPosition.y;\r\n        this.currGroup.height = Math.abs(this.groupStartPoint.y - realPosition.y);\r\n      }\r\n\r\n      if (this.currHitNode) {\r\n        this.currHitNode.onDrag(screenPosition.clone(), realPosition.clone());\r\n        if ((!this.currHitNode.currHitUINode || !this.currHitNode.currHitUINode.draggable) && !this.currHitNode.currHitTerminal && !this.floatingConnector) {\r\n          this.currHitNode.position = realPosition.add(dragDelta);\r\n\r\n          let hitGroup = this.getHitGroup(screenPosition);\r\n          if (hitGroup && hitGroup === this.currHitNode.group) {\r\n            let groupRealPos = hitGroup.position.transform(this.transform);\r\n            let nodeRealPos = this.currHitNode.position.transform(this.transform);\r\n\r\n            let intersection = intersects(groupRealPos.x, groupRealPos.y,\r\n              groupRealPos.x + hitGroup.width * this.scale,\r\n              groupRealPos.y + hitGroup.height * this.scale,\r\n              nodeRealPos.x, nodeRealPos.y,\r\n              nodeRealPos.x + this.currHitNode.width * this.scale,\r\n              nodeRealPos.y + this.currHitNode.ui.height * this.scale\r\n            );\r\n\r\n            if (intersection === ViewPort.INSIDE) {\r\n              let nodeIndex = hitGroup.nodes.findIndex(node => node.id === this.currHitNode.id);\r\n              hitGroup.nodeDeltas[nodeIndex] = this.currHitNode.position.subtract(hitGroup.position);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (this.currHitGroup) {\r\n          this.currHitGroup.position = realPosition.add(dragDelta);\r\n        } else if (this.pointers.length === 1 && !this.keymap['Control'] && !this.touchControls['CreateGroup']) {\r\n          let delta = screenPosition.subtract(prevPanPosition).multiplyInPlace(1 / this.scale);\r\n          prevPanPosition = screenPosition;\r\n          this.updateTransform(null, null, delta);\r\n        }\r\n      }\r\n      if (this.floatingConnector) this.floatingConnector.floatingTip = realPosition;\r\n\r\n      if (ev.pointerType === 'mouse' && !this.currHitNode) {\r\n        let hitNode = this.getHitNode(screenPosition);\r\n        if (hitNode !== this.prevHitNode) {\r\n          this.prevHitNode && this.prevHitNode.onExit(screenPosition, realPosition);\r\n          hitNode && hitNode.onEnter(screenPosition, realPosition);\r\n        } else {\r\n          hitNode && (!this.currHitNode) && hitNode.onOver(screenPosition, realPosition);\r\n        }\r\n        this.prevHitNode = hitNode;\r\n      }\r\n    }\r\n    this.canvasElement.onclick = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let realPosition = screenPosition.transform(this.inverseTransform);\r\n      let hitNode = this.getHitNode(screenPosition);\r\n      hitNode && hitNode.onClick(screenPosition.clone(), realPosition.clone());\r\n\r\n      if (!hitNode) {\r\n        let hitGroup = this.getHitGroup(screenPosition);\r\n        hitGroup && hitGroup.onClick(screenPosition.clone(), realPosition.clone());\r\n      }\r\n    };\r\n    this.canvasElement.oncontextmenu = (ev) => {\r\n      if (!this.currFlow) return;\r\n\r\n      ev.preventDefault();\r\n\r\n      let screenPosition = this.getRelativePosition(ev);\r\n      let hitNode = this.getHitNode(screenPosition);\r\n      hitNode && hitNode.onContextMenu();\r\n      if (!this.keymap['Control']) this.currFlow.removeAllFocus();\r\n      hitNode && (hitNode.focused = true);\r\n    }\r\n    this.canvasElement.onwheel = (ev: WheelEvent) => {\r\n      if (!this.currFlow) return;\r\n\r\n      this.handleZoom(ev.deltaY < 0, this.getRelativePosition(ev), this.wheelScaleDelta);\r\n    }\r\n  }\r\n  setGenericInput() {\r\n    this.genericInput.className = 'flow-connect-input';\r\n    this.genericInput.style.visibility = 'hidden';\r\n    this.genericInput.style.pointerEvents = 'none';\r\n    this.genericInput.style.padding = '0';\r\n\r\n    this.genericInput.onblur = () => {\r\n      this.genericInput.style.visibility = 'hidden';\r\n      this.genericInput.style.pointerEvents = 'none';\r\n\r\n      this.genericInput.onchange = null;\r\n    }\r\n\r\n    document.body.appendChild(this.genericInput);\r\n  }\r\n  showGenericInput(position: Vector2 | DOMPoint, value: string, styles: { [key: string]: any }, attributes: { [key: string]: any }, callback: (value: string) => void) {\r\n    if (document.activeElement === this.genericInput) return;\r\n\r\n    Object.keys(styles).forEach(key => (this.genericInput.style as any)[key] = styles[key]);\r\n    Object.keys(attributes).forEach(key => (this.genericInput as any)[key] = attributes[key]);\r\n\r\n    this.genericInput.style.left = (position.x + this.canvasDimensions.left) + 'px';\r\n    this.genericInput.style.top = (position.y + this.canvasDimensions.top - 3) + 'px';\r\n    this.genericInput.style.visibility = 'visible';\r\n    this.genericInput.style.pointerEvents = 'all';\r\n    this.genericInput.value = value;\r\n    this.genericInput.onchange = () => callback(this.genericInput.value);\r\n    this.genericInput.focus();\r\n  }\r\n  updatePointer(id: number, screenPosition: Vector2, realPosition: Vector2) {\r\n    let pointer = this.pointers.find(pointer => pointer.id === id);\r\n    if (pointer) {\r\n      pointer.screenPosition = screenPosition;\r\n      pointer.realPosition = realPosition;\r\n    }\r\n  }\r\n  handleZoom(zoomIn: boolean, origin: Vector2, scaleDelta: number) {\r\n    if ((this.transform.a >= this.maxScale && zoomIn) || (this.transform.a <= this.minScale && !zoomIn)) return;\r\n    this.updateTransform(zoomIn ? scaleDelta : (1 / scaleDelta), origin, null);\r\n  }\r\n  handleGrouping(screenPosition: Vector2) {\r\n    let hitGroup = this.getHitGroup(screenPosition);\r\n\r\n    let intersection;\r\n    if (hitGroup) {\r\n      let groupRealPos = hitGroup.position.transform(this.transform);\r\n      let nodeRealPos = this.currHitNode.position.transform(this.transform);\r\n\r\n      intersection = intersects(groupRealPos.x, groupRealPos.y,\r\n        groupRealPos.x + hitGroup.width * this.scale,\r\n        groupRealPos.y + hitGroup.height * this.scale,\r\n        nodeRealPos.x, nodeRealPos.y,\r\n        nodeRealPos.x + this.currHitNode.width * this.scale,\r\n        nodeRealPos.y + this.currHitNode.ui.height * this.scale\r\n      );\r\n    }\r\n\r\n    if (this.currHitNode.group) {\r\n      if (this.currHitNode.group !== hitGroup) {\r\n        let nodeIndex = this.currHitNode.group.nodes.findIndex(node => node.id === this.currHitNode.id);\r\n        this.currHitNode.group.nodes.splice(nodeIndex, 1);\r\n        this.currHitNode.group.nodeDeltas.splice(nodeIndex, 1);\r\n        this.currHitNode.group = null;\r\n      } else {\r\n        if (intersection !== ViewPort.INSIDE) {\r\n          let nodeIndex = this.currHitNode.group.nodes.findIndex(node => node.id === this.currHitNode.id);\r\n          this.currHitNode.group.nodes.splice(nodeIndex, 1);\r\n          this.currHitNode.group.nodeDeltas.splice(nodeIndex, 1);\r\n          this.currHitNode.group = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (hitGroup) {\r\n      if (intersection === ViewPort.INSIDE) {\r\n        this.currHitNode.group = hitGroup;\r\n        hitGroup.nodes.push(this.currHitNode);\r\n        hitGroup.nodeDeltas.push(this.currHitNode.position.subtract(hitGroup.position));\r\n      }\r\n    }\r\n  }\r\n  handleConnection(hitNode: Node, screenPosition: Vector2, realPosition: Vector2) {\r\n    if (!hitNode) {\r\n      this.fallbackConnection();\r\n      return;\r\n    }\r\n    let hitTerminal = hitNode.getHitTerminal(\r\n      Color.rgbaToString(this.offUIContext.getImageData(screenPosition.x, screenPosition.y, 1, 1).data),\r\n      screenPosition.clone(),\r\n      realPosition.clone()\r\n    );\r\n    if (hitTerminal) hitNode.currHitTerminal = hitTerminal;\r\n    if (!hitTerminal) {\r\n      this.fallbackConnection();\r\n      return;\r\n    }\r\n\r\n    let destination = hitNode.currHitTerminal;\r\n    if (!this.floatingConnector.canConnect(destination)) {\r\n      this.fallbackConnection();\r\n      hitNode.currHitTerminal = null;\r\n      return;\r\n    } else {\r\n      if (destination.type === TerminalType.OUT) {\r\n        this.floatingConnector.completeConnection(destination);\r\n        hitNode.currHitTerminal = null;\r\n      } else {\r\n        if (destination.connectors.length > 0) {\r\n          if (destination.connectors[0].start === this.floatingConnector.start) {\r\n            this.fallbackConnection();\r\n            hitNode.currHitTerminal = null;\r\n            return;\r\n          }\r\n          let index = destination.connectors[0].start.connectors.indexOf(destination.connectors[0]);\r\n          let [oldConnector] = destination.connectors[0].start.connectors.splice(index, 1);\r\n          delete this.currFlow.connectors[oldConnector.id];\r\n          oldConnector.start.call('disconnect', oldConnector.start, oldConnector);\r\n          oldConnector.end.call('disconnect', oldConnector.end, oldConnector);\r\n\r\n          this.floatingConnector.completeConnection(destination);\r\n          hitNode.currHitTerminal = null;\r\n        } else {\r\n          this.floatingConnector.completeConnection(destination);\r\n          hitNode.currHitTerminal = null;\r\n        }\r\n      }\r\n      this.floatingConnector = null;\r\n    }\r\n  }\r\n  getRelativePosition(ev: PointerEvent | WheelEvent | MouseEvent) {\r\n    return new Vector2(ev.clientX - this.canvasDimensions.left, ev.clientY - this.canvasDimensions.top);\r\n  }\r\n  updateTransform(scale: number, scaleOrigin: Vector2, translate: Vector2) {\r\n    if (scale) {\r\n      let realSpaceOrigin = scaleOrigin.transform(this.inverseTransform);\r\n      this.transform\r\n        .translateSelf(realSpaceOrigin.x, realSpaceOrigin.y)\r\n        .scaleSelf(scale, scale)\r\n        .translateSelf(-realSpaceOrigin.x, -realSpaceOrigin.y);\r\n    }\r\n    if (translate) {\r\n      this.transform.translateSelf(translate.x, translate.y);\r\n    }\r\n\r\n    this.inverseTransform = this.transform.inverse();\r\n\r\n    this.context.setTransform(this.transform);\r\n    this.offContext.setTransform(this.transform);\r\n    this.offUIContext.setTransform(this.transform);\r\n    this.offGroupContext.setTransform(this.transform);\r\n\r\n    this.call('transform', this);\r\n  }\r\n  fallbackConnection() {\r\n    this.floatingConnector.removeConnection();\r\n    this.currFlow.removeConnector(this.floatingConnector.id);\r\n  }\r\n  addPointer(pointerId: number, position: Vector2) {\r\n    this.pointers.push({\r\n      id: pointerId,\r\n      screenPosition: position,\r\n      realPosition: position.transform(this.inverseTransform)\r\n    });\r\n  }\r\n  removePointer(pointers: Pointer[], ev: PointerEvent) {\r\n    pointers.splice(pointers.findIndex(pointer => pointer.id === ev.pointerId), 1);\r\n  }\r\n  getHitNode(position: Vector2): Node {\r\n    let rgbaString = Color.rgbaToString(this.offContext.getImageData(position.x, position.y, 1, 1).data);\r\n    return this.currFlow.hitColorToNode[rgbaString];\r\n  }\r\n  getHitGroup(position: Vector2): Group {\r\n    let rgbaString = Color.rgbaToString(this.offGroupContext.getImageData(position.x, position.y, 1, 1).data);\r\n    return this.currFlow.hitColorToGroup[rgbaString];\r\n  }\r\n  clear() {\r\n    this.context.save();\r\n    this.context.setTransform(this.identity);\r\n    this.context.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this.context.restore();\r\n\r\n    this.offContext.save();\r\n    this.offContext.setTransform(this.identity);\r\n    this.offContext.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this.offContext.restore();\r\n\r\n    this.offUIContext.save();\r\n    this.offUIContext.setTransform(this.identity);\r\n    this.offUIContext.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this.offUIContext.restore();\r\n\r\n    this.offGroupContext.save();\r\n    this.offGroupContext.setTransform(this.identity);\r\n    this.offGroupContext.clearRect(0, 0, this.canvasDimensions.width, this.canvasDimensions.height);\r\n    this.offGroupContext.restore();\r\n  }\r\n\r\n  top() {\r\n    this.render(this.rootFlow);\r\n  }\r\n  render(flow: Flow) {\r\n    if (flow === this.currFlow) return;\r\n    if (this.currFlow) {\r\n      window.cancelAnimationFrame(this.frameId);\r\n      this.currFlow.deregisterListeners();\r\n    }\r\n    if (!this.rootFlow || !this.rootFlow.existsInFlow(flow)) {\r\n      this.rootFlow = flow;\r\n    }\r\n    this.currFlow = flow;\r\n    this._render();\r\n  }\r\n  _render() {\r\n    this.clear();\r\n\r\n    this.currGroup && this.currGroup.render();\r\n    this.currFlow.render();\r\n    this.call('update', this);\r\n\r\n    this.frameId = window.requestAnimationFrame(this._render.bind(this));\r\n  }\r\n\r\n  fromJson(json: string): Flow {\r\n    let data: SerializedFlow;\r\n    let flow: Flow = null;\r\n\r\n    try {\r\n      data = JSON.parse(json);\r\n      flow = Flow.deSerialize(this, data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return flow;\r\n  }\r\n  toJson(flow: Flow): string {\r\n    let serializedFlow: SerializedFlow = flow.serialize();\r\n    try {\r\n      return JSON.stringify(serializedFlow, null);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport * from './core/index';\r\nexport * from './math/index';\r\nexport * from './ui/index';\r\nexport * from './utils/index';\r\n","import { Vector2 } from \"./vector\";\r\n\r\nexport class Constant {\r\n  static TAU = (Math.PI / 180);\r\n  static DefaultRules: { [type: string]: string[] } = { 'string': ['string'], 'number': ['number'], 'boolean': ['boolean'], 'file': ['file'], 'event': ['event'] };\r\n  static DefaultGroupColors = {\r\n    colors: [\r\n      ['rgba(239, 134, 119, 1)', 'rgba(239, 134, 119, .5)'],\r\n      ['rgba(160, 231, 125, 1)', 'rgba(160, 231, 125, .5)'],\r\n      ['rgba(130, 182, 217, 1)', 'rgba(130, 182, 217, .5)']\r\n    ],\r\n    RED: () => Constant.DefaultGroupColors.colors[0],\r\n    GREEN: () => Constant.DefaultGroupColors.colors[1],\r\n    BLUE: () => Constant.DefaultGroupColors.colors[2],\r\n    Random: () => Constant.DefaultGroupColors.colors[Math.floor(Math.random() * (Constant.DefaultGroupColors.colors.length - 1))]\r\n  };\r\n\r\n  static DefaultNodeStyle = () => {\r\n    return {\r\n      font: 'arial',\r\n      fontSize: '.75rem',\r\n      titleFont: 'arial',\r\n      titleFontSize: '.85rem',\r\n      color: '#000',\r\n      titleColor: '#000',\r\n      maximizeButtonColor: 'darkgrey',\r\n      nodeButtonSize: 10,\r\n      nodeButtonSpacing: 5,\r\n      expandButtonColor: '#000',\r\n      padding: 10,\r\n      spacing: 10,\r\n      rowHeight: 20,\r\n      titleHeight: 29,\r\n      terminalRowHeight: 24,\r\n      terminalStripMargin: 8\r\n    };\r\n  };\r\n  static DefaultConnectorStyle = () => {\r\n    return {\r\n      width: 5,\r\n      color: '#7fff00aa'\r\n    };\r\n  };\r\n  static DefaultGroupStyle = () => {\r\n    return {\r\n      titleColor: '#000',\r\n      fontSize: '16px',\r\n      font: 'arial'\r\n    };\r\n  };\r\n  static DefaultTerminalStyle = () => {\r\n    return {\r\n      radius: 4,\r\n      borderColor: '#222',\r\n      shadowBlur: 0,\r\n      shadowColor: '#ccc',\r\n      focusColor: '#bbbbbb80'\r\n    };\r\n  };\r\n  static DefaultButtonStyle = () => {\r\n    return {\r\n      backgroundColor: '#666',\r\n      padding: 5,\r\n      color: '#fff',\r\n      font: 'arial',\r\n      fontSize: '11px'\r\n    };\r\n  };\r\n  static DefaultContainerStyle = () => {\r\n    return {\r\n      backgroundColor: '#dddddd',\r\n      shadowColor: '#666',\r\n      shadowBlur: 3,\r\n      shadowOffset: new Vector2(3, 3),\r\n      borderWidth: 1,\r\n      borderColor: '#444'\r\n    };\r\n  };\r\n  static DefaultDisplayStyle = () => {\r\n    return {\r\n      borderColor: '#000'\r\n    };\r\n  };\r\n  static DefaultHorizontalLayoutStyle = () => {\r\n    return {};\r\n  };\r\n  static DefaultImageStyle = () => {\r\n    return {\r\n      align: 'left'\r\n    };\r\n  };\r\n  static DefaultInputStyle = () => {\r\n    return {\r\n      backgroundColor: '#eee',\r\n      color: '#000',\r\n      fontSize: '11px',\r\n      font: 'arial',\r\n      border: '1px solid black',\r\n      align: 'left',\r\n      type: InputType.Text\r\n    };\r\n  };\r\n  static DefaultLabelStyle = () => {\r\n    return {\r\n      color: '#000',\r\n      fontSize: '11px',\r\n      font: 'arial',\r\n      align: 'left'\r\n    };\r\n  };\r\n  static DefaultSelectStyle = () => {\r\n    return {\r\n      arrowColor: '#000'\r\n    };\r\n  };\r\n  static DefaultSliderStyle = (height: number) => {\r\n    return {\r\n      color: '#444',\r\n      thumbColor: '#000',\r\n      railHeight: 3,\r\n      thumbRadius: height / 2\r\n    }\r\n  }\r\n  static DefaultSourceStyle = () => {\r\n    return {\r\n      borderColor: '#000'\r\n    };\r\n  };\r\n  static DefaultToggleStyle = () => {\r\n    return {\r\n      backgroundColor: '#999',\r\n      color: '#000'\r\n    };\r\n  };\r\n}\r\n\r\nexport enum ViewPort {\r\n  INSIDE,\r\n  OUTSIDE,\r\n  INTERSECT\r\n}\r\nexport enum NodeState {\r\n  MAXIMIZED,\r\n  MINIMIZED\r\n}\r\nexport enum LOD {\r\n  LOD0,\r\n  LOD1,\r\n  LOD2\r\n}\r\nexport enum TerminalType {\r\n  IN = 1,\r\n  OUT = 2\r\n}\r\nexport enum InputType {\r\n  Text = \"text\",\r\n  Number = \"number\"\r\n}\r\nexport enum Align {\r\n  Left,\r\n  Right\r\n}\r\nexport enum UIType {\r\n  Button,\r\n  Container,\r\n  Display,\r\n  HorizontalLayout,\r\n  Image,\r\n  Input,\r\n  Label,\r\n  Select,\r\n  Slider,\r\n  Source,\r\n  Toggle\r\n}\r\nexport enum FlowState {\r\n  Running,\r\n  Stopped\r\n}\r\nexport enum GraphState {\r\n  Running,\r\n  FullRun,\r\n  Idle,\r\n  Stopped\r\n}","export * from './constants';\r\nexport * from './vector';","import { Serializable, SerializedVector2 } from '../core/interfaces';\r\nimport { Constant } from './constants';\r\n\r\nexport class Vector2 implements Serializable {\r\n  x: number;\r\n  y: number;\r\n  tmpX: number;\r\n  tmpY: number;\r\n\r\n  constructor(xOrDOMPoint: number | DOMPoint, y?: number) {\r\n    if (xOrDOMPoint instanceof DOMPoint)\r\n      [this.x, this.y] = [xOrDOMPoint.x, xOrDOMPoint.y];\r\n    else\r\n      [this.x, this.y] = [xOrDOMPoint, y];\r\n  }\r\n\r\n  toString() {\r\n    return '[' + this.x.toFixed(3) + ', ' + this.y.toFixed(3) + ']';\r\n  }\r\n  add(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      return new Vector2(this.x + arg1.x, this.y + arg1.y);\r\n    } else if (typeof arg2 === 'undefined') {\r\n      return new Vector2(this.x + arg1, this.y + arg1);\r\n    } else {\r\n      return new Vector2(this.x + arg1, this.y + arg2);\r\n    }\r\n  }\r\n  addInPlace(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      this.x += arg1.x;\r\n      this.y += arg1.y;\r\n    } else if (typeof arg2 === 'undefined') {\r\n      this.x += arg1;\r\n      this.y += arg1;\r\n    } else {\r\n      this.x += arg1;\r\n      this.y += arg2;\r\n    }\r\n    return this;\r\n  }\r\n  multiply(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      return new Vector2(this.x * arg1.x, this.y * arg1.y);\r\n    } else if (typeof arg2 === 'undefined') {\r\n      return new Vector2(this.x * arg1, this.y * arg1);\r\n    } else {\r\n      return new Vector2(this.x * arg1, this.y * arg2);\r\n    }\r\n  }\r\n  multiplyInPlace(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      this.x *= arg1.x;\r\n      this.y *= arg1.y;\r\n    } else if (typeof arg2 === 'undefined') {\r\n      this.x *= arg1;\r\n      this.y *= arg1;\r\n    } else {\r\n      this.x *= arg1;\r\n      this.y *= arg2;\r\n    }\r\n    return this;\r\n  }\r\n  subtract(arg1: number | Vector2, arg2?: number): Vector2 {\r\n    if (arg1 instanceof Vector2) {\r\n      return new Vector2(this.x - arg1.x, this.y - arg1.y);\r\n    } else if (typeof arg2 === 'undefined') {\r\n      return new Vector2(this.x - arg1, this.y - arg1);\r\n    } else {\r\n      return new Vector2(this.x - arg1, this.y - arg2);\r\n    }\r\n  }\r\n  subtractInPlace(arg1: number | Vector2, arg2?: number): void {\r\n    if (arg1 instanceof Vector2) {\r\n      this.x -= arg1.x;\r\n      this.y -= arg1.y;\r\n    } else if (typeof arg2 === 'undefined') {\r\n      this.x -= arg1;\r\n      this.y -= arg1;\r\n    } else {\r\n      this.x -= arg1;\r\n      this.y -= arg2;\r\n    }\r\n  }\r\n  rotate(pivot: Vector2, degrees: number): Vector2 {\r\n    degrees = degrees * Constant.TAU;\r\n    let cosT = Math.cos(degrees);\r\n    let sinT = Math.sin(degrees);\r\n    return new Vector2(\r\n      (cosT * (this.x - pivot.x)) - (sinT * (this.y - pivot.y)) + pivot.x,\r\n      (sinT * (this.x - pivot.x)) + (cosT * (this.y - pivot.y)) + pivot.y\r\n    );\r\n  }\r\n  rotateInPlace(pivot: Vector2, degrees: number): Vector2 {\r\n    degrees = degrees * Constant.TAU;\r\n    let cosT = Math.cos(degrees);\r\n    let sinT = Math.sin(degrees);\r\n    this.tmpX = (cosT * (this.x - pivot.x)) - (sinT * (this.y - pivot.y)) + pivot.x;\r\n    this.tmpY = (sinT * (this.x - pivot.x)) + (cosT * (this.y - pivot.y)) + pivot.y;\r\n    this.x = this.tmpX;\r\n    this.y = this.tmpY;\r\n    return this;\r\n  }\r\n  transform(transform: DOMMatrix): Vector2 {\r\n    return new Vector2(transform.transformPoint(this));\r\n  }\r\n  transformInPlace(transform: DOMMatrix) {\r\n    let transformedPoint = transform.transformPoint(this);\r\n    [this.x, this.y] = [transformedPoint.x, transformedPoint.y];\r\n  }\r\n  max() {\r\n    return Math.max(this.x, this.y);\r\n  }\r\n  clone(): Vector2 {\r\n    return new Vector2(this.x, this.y);\r\n  }\r\n  clamp(minX: number, maxX: number, minY: number, maxY: number): Vector2 {\r\n    if (this.x < minX) this.x = minX;\r\n    if (this.x > maxX) this.x = maxX;\r\n    if (this.y < minY) this.y = minY;\r\n    if (this.y > maxY) this.y = maxY;\r\n    return this;\r\n  }\r\n\r\n  static Midpoint(vector1: Vector2, vector2: Vector2): Vector2 {\r\n    return new Vector2((vector1.x + vector2.x) / 2, (vector1.y + vector2.y) / 2);\r\n  }\r\n  static Distance(vector1OrX1: Vector2 | number, vector2OrY1: Vector2 | number, x2?: number, y2?: number): number {\r\n    if (vector1OrX1 instanceof Vector2 && vector2OrY1 instanceof Vector2) {\r\n      return Math.sqrt(Math.pow(vector2OrY1.x - vector1OrX1.x, 2) + Math.pow(vector2OrY1.y - vector1OrX1.y, 2));\r\n    } else if (typeof vector1OrX1 === 'number' && typeof vector2OrY1 === 'number') {\r\n      return Math.sqrt(Math.pow(x2 - vector1OrX1, 2) + Math.pow(y2 - vector2OrY1, 2));\r\n    }\r\n  }\r\n  static Zero(): Vector2 {\r\n    return new Vector2(0, 0);\r\n  }\r\n  static One(): Vector2 {\r\n    return new Vector2(1, 1);\r\n  }\r\n  static Bounds(vectors: Vector2[]): Vector2[] {\r\n    let minVec = new Vector2(Number.MAX_VALUE, Number.MAX_VALUE);\r\n    let maxVec = new Vector2(Number.MIN_VALUE, Number.MIN_VALUE);\r\n\r\n    vectors.forEach((vector) => {\r\n      if (vector.x < minVec.x) minVec.x = vector.x;\r\n      if (vector.y < minVec.y) minVec.y = vector.y;\r\n      if (vector.x > maxVec.x) maxVec.x = vector.x;\r\n      if (vector.y > maxVec.y) maxVec.y = vector.y;\r\n    });\r\n    return [minVec, maxVec];\r\n  }\r\n  static Average(vectors: Vector2[]): Vector2 {\r\n    let sumX = 0;\r\n    let sumY = 0;\r\n    vectors.forEach((vector) => {\r\n      sumX += vector.x;\r\n      sumY += vector.y;\r\n    });\r\n    return new Vector2(sumX / vectors.length, sumY / vectors.length);\r\n  }\r\n  static Random(minX: number, maxX: number, minY: number, maxY: number): Vector2 {\r\n    return new Vector2(\r\n      Math.random() * (maxX - minX) + minX,\r\n      Math.random() * (maxY - minY) + minY\r\n    );\r\n  }\r\n  static Lerp(start: Vector2, end: Vector2, amount: number): Vector2 {\r\n    return new Vector2(\r\n      start.x + ((end.x - start.x) * amount),\r\n      start.y + ((end.y - start.y) * amount)\r\n    );\r\n  }\r\n\r\n  serialize(): SerializedVector2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n  static deSerialize(data: SerializedVector2): Vector2 {\r\n    return new Vector2(data.x, data.y);\r\n  }\r\n}\r\n","export const fileIcon = \"data:image/svg+xml;charset=UTF-8,%3c?xml version='1.0' encoding='iso-8859-1'?%3e%3c!-- --%3e%3csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 477.867 477.867' style='enable-background:new 0 0 477.867 477.867;' xml:space='preserve'%3e%3cg%3e%3cg%3e%3cpath d='M324.267,119.467c-9.426,0-17.067-7.641-17.067-17.067V0H102.4C74.123,0,51.2,22.923,51.2,51.2v375.467 c0,28.277,22.923,51.2,51.2,51.2h273.067c28.277,0,51.2-22.923,51.2-51.2v-307.2H324.267z'/%3e%3c/g%3e%3c/g%3e%3cg%3e%3cg%3e%3cpolygon points='341.333,10.001 341.333,85.333 416.666,85.333 '/%3e%3c/g%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3cg%3e%3c/g%3e%3c/svg%3e\";\r\n","import { Node } from \"../core/node\";\r\nimport { Terminal } from '../core/terminal';\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Constant, TerminalType, UIType } from '../math/constants';\r\nimport { Label } from \"./label\";\r\nimport { UINode } from './ui-node';\r\nimport { ButtonStyle, Serializable, SerializedButton, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Button extends UINode implements Serializable {\r\n  label: Label;\r\n\r\n  constructor(\r\n    node: Node,\r\n    public text: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: ButtonStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Button, false, { ...Constant.DefaultButtonStyle(), ...style }, null,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'event', '', {}, () => this.call('click', this)) :\r\n          new Terminal(node, input.type, input.dataType, input.name, input.style, () => this.call('click', this), input.id, Color.deSerialize(input.hitColor))\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'event', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n    this.height = height ? height : (this.node.style.rowHeight + 2 * this.style.padding);\r\n\r\n    this.label = new Label(this.node, text, null, false, false, {\r\n      fontSize: this.style.fontSize,\r\n      font: this.style.font,\r\n      align: 'center',\r\n      color: this.style.color\r\n    }, this.height);\r\n    this.label.on('click', (_node: Node, position: Vector2) => this.call('click', this, position));\r\n\r\n    this.children.push(this.label);\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.fillStyle = this.style.backgroundColor;\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  paintLOD1() {\r\n    this.context.strokeStyle = '#000';\r\n    this.paint();\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    this.label.position = this.position;\r\n    this.label.height = this.height;\r\n    this.label.width = this.width;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  onPropChange() { }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('rightclick', this);\r\n  }\r\n\r\n  serialize(): SerializedButton {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      height: this.height,\r\n      text: this.text,\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedButton): Button {\r\n    return new Button(node, data.text, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { ContainerStyle, Serializable, SerializedContainer } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Button } from \"./button\";\r\nimport { Display } from \"./display\";\r\nimport { HorizontalLayout } from \"./horizontal-layout\";\r\nimport { Image } from './image';\r\nimport { Input } from \"./input\";\r\nimport { Label } from \"./label\";\r\nimport { Select } from \"./select\";\r\nimport { Slider } from \"./slider\";\r\nimport { Source } from \"./source\";\r\nimport { Toggle } from \"./toggle\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\nexport class Container extends UINode implements Serializable {\r\n  contentWidth: number;\r\n\r\n  constructor(\r\n    node: Node,\r\n    width?: number,\r\n    style: ContainerStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, node.position, UIType.Container, false, { ...Constant.DefaultContainerStyle(), ...style }, null, null, null, id, hitColor);\r\n    this.width = typeof width !== 'undefined' ? width : 0;\r\n    this.height = this.node.style.padding * 2;\r\n    this.contentWidth = this.width - 2 * this.node.style.padding;\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.shadowColor = this.style.shadowColor;\r\n    this.context.shadowBlur = 3;\r\n    this.context.shadowOffsetX = this.style.shadowOffset.x;\r\n    this.context.shadowOffsetY = this.style.shadowOffset.y;\r\n    this.context.fillStyle = this.style.backgroundColor;\r\n    this.context.strokeStyle = this.style.borderColor;\r\n    this.context.lineWidth = this.style.borderWidth;\r\n    this.context.roundRect(this.position.x, this.position.y + this.node.style.titleHeight, this.width, this.height - this.node.style.titleHeight, 5);\r\n    this.context.stroke();\r\n    this.context.fill();\r\n  }\r\n  paintLOD1() {\r\n    this.context.fillStyle = this.style.backgroundColor;\r\n    this.context.strokeStyle = this.style.borderColor;\r\n    this.context.lineWidth = this.style.borderWidth;\r\n    this.context.roundRect(this.position.x, this.position.y + this.node.style.titleHeight, this.width, this.height - this.node.style.titleHeight, 5);\r\n    this.context.stroke();\r\n    this.context.fill();\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    this.position = this.node.position;\r\n    let terminalsDisplayHeight = Math.max(this.node.inputs.length, this.node.outputs.length) * this.node.style.terminalRowHeight + this.node.style.titleHeight;\r\n    let x = this.position.x + this.node.style.padding;\r\n    let y = this.position.y + terminalsDisplayHeight;\r\n    this.children.forEach(child => {\r\n      y += this.node.style.spacing;\r\n      child.width = this.width - this.node.style.padding * 2;\r\n      child.position = new Vector2(x, y);\r\n      y += child.height;\r\n    });\r\n    this.height = y + this.node.style.padding - this.position.y;\r\n  }\r\n\r\n  onPropChange() { }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void { }\r\n\r\n  serialize(): SerializedContainer {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      width: this.width,\r\n      style: {\r\n        backgroundColor: this.style.backgroundColor,\r\n        shadowColor: this.style.shadowColor,\r\n        shadowBlur: this.style.shadowBlur,\r\n        shadowOffset: this.style.shadowOffset.serialize(),\r\n        borderWidth: this.style.borderWidth,\r\n        borderColor: this.style.borderColor\r\n      },\r\n      childs: this.children.map(child => (child as any).serialize())\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedContainer): Container {\r\n    let uiContainer = new Container(node, data.width, data.style, data.id, Color.deSerialize(data.hitColor));\r\n    uiContainer.children.push(...data.childs.map(serializedChild => {\r\n      switch (serializedChild.type) {\r\n        case UIType.Button: return Button.deSerialize(node, serializedChild);\r\n        case UIType.Container: return Container.deSerialize(node, serializedChild);\r\n        case UIType.Display: return Display.deSerialize(node, serializedChild);\r\n        case UIType.HorizontalLayout: return HorizontalLayout.deSerialize(node, serializedChild);\r\n        case UIType.Image: return Image.deSerialize(node, serializedChild);\r\n        case UIType.Input: return Input.deSerialize(node, serializedChild);\r\n        case UIType.Label: return Label.deSerialize(node, serializedChild);\r\n        case UIType.Select: return Select.deSerialize(node, serializedChild);\r\n        case UIType.Slider: return Slider.deSerialize(node, serializedChild);\r\n        case UIType.Source: return Source.deSerialize(node, serializedChild);\r\n        case UIType.Toggle: return Toggle.deSerialize(node, serializedChild);\r\n        default: return;\r\n      }\r\n    }));\r\n    return uiContainer;\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { DisplayStyle, Serializable, SerializedDisplay } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\nexport class Display extends UINode implements Serializable {\r\n  customRender: (context: CanvasRenderingContext2D, width: number, height: number) => void;\r\n\r\n  constructor(\r\n    node: Node,\r\n    height: number,\r\n    render: (context: CanvasRenderingContext2D, width: number, height: number) => void,\r\n    style: DisplayStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Display, false, { ...Constant.DefaultDisplayStyle(), ...style }, null, null, null, id, hitColor);\r\n    this.customRender = render;\r\n    this.height = height;\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.strokeStyle = this.style.borderColor;\r\n    this.context.lineWidth = 1;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.strokeStyle = null;\r\n    this.context.translate(this.position.x, this.position.y);\r\n    this.customRender(this.context, this.width, this.height);\r\n    this.context.resetTransform();\r\n  }\r\n  paintLOD1() {\r\n    this.context.strokeStyle = this.style.borderColor;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.fillStyle = 'lightgrey';\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void { }\r\n\r\n  onPropChange() { }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    this.call('rightclick', this);\r\n  }\r\n\r\n  serialize(): SerializedDisplay {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      height: this.height,\r\n      childs: []\r\n    };\r\n  }\r\n  static deSerialize(node: Node, data: SerializedDisplay): Display {\r\n    return new Display(node, data.height, null, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { HorizontalLayoutStyle, Serializable, SerializedHorizontalLayout } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Button } from \"./button\";\r\nimport { Container } from \"./container\";\r\nimport { Display } from \"./display\";\r\nimport { Image } from './image';\r\nimport { Input } from \"./input\";\r\nimport { Label } from \"./label\";\r\nimport { Select } from \"./select\";\r\nimport { Slider } from \"./slider\";\r\nimport { Source } from \"./source\";\r\nimport { Toggle } from \"./toggle\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\nexport class HorizontalLayout extends UINode implements Serializable {\r\n\r\n  constructor(\r\n    node: Node,\r\n    childs?: UINode[],\r\n    style: HorizontalLayoutStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.HorizontalLayout, false, { ...Constant.DefaultHorizontalLayoutStyle(), ...style }, null, null, null, id, hitColor);\r\n    if (childs) this.children.push(...childs);\r\n  }\r\n\r\n  paint(): void { }\r\n  paintLOD1() { }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    let availableWidth = this.width;\r\n    let x = this.position.x;\r\n    let maxHeight = 0;\r\n    this.children.forEach(child => {\r\n      maxHeight = Math.max(maxHeight, child.height);\r\n    });\r\n    this.height = maxHeight;\r\n\r\n    this.children.forEach(child => {\r\n      let childWidth = child.style.grow ? child.style.grow * this.width : (1 / this.children.length) * this.width;\r\n      if (childWidth > availableWidth) childWidth = availableWidth;\r\n      child.width = childWidth;\r\n\r\n      if (child.height < this.height) child.height = this.height;\r\n      child.position = new Vector2(x, this.position.y);\r\n\r\n      availableWidth -= childWidth;\r\n      x += childWidth;\r\n    });\r\n  }\r\n\r\n  onPropChange() { }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void { }\r\n\r\n  serialize(): SerializedHorizontalLayout {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      style: this.style,\r\n      childs: this.children.map(child => (child as any).serialize())\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedHorizontalLayout): HorizontalLayout {\r\n    let hozLayout = new HorizontalLayout(node, [], data.style, data.id, Color.deSerialize(data.hitColor));\r\n    hozLayout.children.push(...data.childs.map(serializedChild => {\r\n      switch (serializedChild.type) {\r\n        case UIType.Button: return Button.deSerialize(node, serializedChild);\r\n        case UIType.Container: return Container.deSerialize(node, serializedChild);\r\n        case UIType.Display: return Display.deSerialize(node, serializedChild);\r\n        case UIType.HorizontalLayout: return HorizontalLayout.deSerialize(node, serializedChild);\r\n        case UIType.Image: return Image.deSerialize(node, serializedChild);\r\n        case UIType.Input: return Input.deSerialize(node, serializedChild);\r\n        case UIType.Label: return Label.deSerialize(node, serializedChild);\r\n        case UIType.Select: return Select.deSerialize(node, serializedChild);\r\n        case UIType.Slider: return Slider.deSerialize(node, serializedChild);\r\n        case UIType.Source: return Source.deSerialize(node, serializedChild);\r\n        case UIType.Toggle: return Toggle.deSerialize(node, serializedChild);\r\n        default: return;\r\n      }\r\n    }));\r\n    return hozLayout;\r\n  }\r\n}\r\n","import { Color } from \"../core/color\";\r\nimport { ImageStyle, Serializable, SerializedImage } from \"../core/interfaces\";\r\nimport { Node } from \"../core/node\";\r\nimport { Constant, UIType } from \"../math/constants\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Logger } from \"../utils/logger\";\r\nimport { UINode } from \"./ui-node\";\r\n\r\nexport class Image extends UINode implements Serializable {\r\n  imageCanvas: OffscreenCanvas | HTMLCanvasElement;\r\n  source: HTMLImageElement;\r\n  ratio: number;\r\n\r\n  constructor(\r\n    node: Node,\r\n    public sourceString: string,\r\n    propName?: string,\r\n    style: ImageStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Image, false, { ...Constant.DefaultImageStyle(), ...style }, propName, null, null, id, hitColor);\r\n    this.source = document.createElement('img');\r\n\r\n    this.source.onload = () => {\r\n      if (typeof OffscreenCanvas !== 'undefined') this.imageCanvas = new OffscreenCanvas(this.source.width, this.source.height);\r\n      else {\r\n        this.imageCanvas = document.createElement('canvas');\r\n        this.imageCanvas.width = this.source.width;\r\n        this.imageCanvas.height = this.source.height;\r\n      }\r\n\r\n      let imageContext = this.imageCanvas.getContext('2d');\r\n      imageContext.drawImage(this.source, 0, 0);\r\n\r\n      this.ratio = this.source.width / this.source.height;\r\n      this.reflow();\r\n      this.node.ui.update();\r\n    };\r\n    this.source.onerror = (error) => Logger.error(error);\r\n    this.source.src = sourceString;\r\n  }\r\n\r\n  paint(): void {\r\n    if (this.imageCanvas) {\r\n      let x = this.position.x;\r\n      if (this.source.width < this.node.ui.contentWidth) {\r\n        if (this.style.align === 'center') x += this.node.ui.contentWidth / 2 - this.source.width / 2;\r\n        else if (this.style.align === 'right') x += + (this.node.ui.contentWidth - this.source.width);\r\n      }\r\n      this.context.drawImage(\r\n        this.imageCanvas, 0, 0, this.source.width, this.source.height,\r\n        x, this.position.y, this.width, this.height\r\n      );\r\n    }\r\n  }\r\n  paintLOD1() {\r\n    if (this.imageCanvas) {\r\n      let x = this.position.x;\r\n      if (this.source.width < this.node.ui.contentWidth) {\r\n        if (this.style.align === 'center') x += this.node.ui.contentWidth / 2 - this.source.width / 2;\r\n        else if (this.style.align === 'right') x += + (this.node.ui.contentWidth - this.source.width);\r\n      }\r\n      this.context.fillStyle = 'lightgrey';\r\n      this.context.strokeStyle = '#000';\r\n      this.context.fillRect(x, this.position.y, this.width, this.height);\r\n      this.context.strokeRect(x, this.position.y, this.width, this.height)\r\n    }\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n\r\n    let x = this.position.x;\r\n    if (this.source.width < this.node.ui.contentWidth) {\r\n      if (this.style.align === 'center') x += this.node.ui.contentWidth / 2 - this.source.width / 2;\r\n      else if (this.style.align === 'right') x += + (this.node.ui.contentWidth - this.source.width);\r\n    }\r\n    this.offUIContext.fillRect(x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    if (!this.source.width || !this.source.height) return;\r\n\r\n    if (this.source.width > this.width) {\r\n      this.height = this.width / this.ratio;\r\n    } else {\r\n      this.width = this.source.width;\r\n      this.height = this.source.height;\r\n    }\r\n  }\r\n\r\n  onPropChange() { }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void { }\r\n\r\n  serialize(): SerializedImage {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      source: this.sourceString,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedImage): Image {\r\n    return new Image(node, data.source, data.propName, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","export * from './ui-node';\r\nexport * from './container';\r\nexport * from './label';\r\nexport * from './image';\r\nexport * from './slider';\r\nexport * from './horizontal-layout';\r\nexport * from './button';\r\nexport * from './toggle';\r\nexport * from './select';\r\nexport * from './source';\r\nexport * from './display';\r\nexport * from './input';","import { Vector2 } from \"../math/vector\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Node } from '../core/node';\r\nimport { Label } from './label';\r\nimport { Terminal } from \"../core/terminal\";\r\nimport { Constant, InputType, TerminalType, UIType } from \"../math/constants\";\r\nimport { InputStyle, Serializable, SerializedInput, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Input extends UINode implements Serializable {\r\n  label: Label;\r\n  inputEl: HTMLInputElement;\r\n  _value: string | number;\r\n\r\n  get value(): string | number {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._value;\r\n  }\r\n  set value(value: string | number) {\r\n    let val: string | number;\r\n    if (this.style.type === InputType.Number && typeof value === 'string') val = parseInt(value);\r\n    else val = value;\r\n\r\n    if (this.propName) this.node.props[this.propName] = val;\r\n    else {\r\n      this._value = val;\r\n      this.label.text = this._value.toString();\r\n      this.inputEl.value = this._value.toString();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    value: string | number,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: InputStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Input, false, { ...Constant.DefaultInputStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, style.type === InputType.Text ? 'string' : 'number', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, style.type === InputType.Text ? 'string' : 'number', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n\r\n    if (this.style.type === InputType.Number && typeof value === 'string') value = parseInt(value);\r\n    this._value = value;\r\n\r\n    this.label = new Label(this.node, this.value.toString(), null, false, false, {\r\n      fontSize: this.style.fontSize,\r\n      font: this.style.font,\r\n      align: this.style.align,\r\n      color: this.style.color\r\n    }, this.height);\r\n    this.label.on('click', () => {\r\n      if (document.activeElement !== this.inputEl) {\r\n        this.inputEl.style.visibility = 'visible';\r\n        this.inputEl.style.pointerEvents = 'all';\r\n\r\n        let realPosition = this.position.transform(this.node.flow.flowConnect.transform);\r\n        this.inputEl.style.top = (realPosition.y + this.node.flow.flowConnect.canvasDimensions.top + 1) + 'px';\r\n        this.inputEl.style.left = (realPosition.x + this.node.flow.flowConnect.canvasDimensions.left + 1) + 'px';\r\n        this.inputEl.style.width = (this.width - 1) * this.node.flow.flowConnect.scale + 'px';\r\n        this.inputEl.style.height = (this.height - 1) * this.node.flow.flowConnect.scale + 'px';\r\n        this.inputEl.style.fontFamily = this.style.font;\r\n        this.inputEl.style.fontSize = parseInt(this.style.fontSize.replace('px', '')) * this.node.flow.flowConnect.scale + 'px';\r\n        this.inputEl.style.color = this.style.color;\r\n        this.inputEl.style.backgroundColor = this.style.backgroundColor;\r\n        this.inputEl.style.textAlign = this.style.align;\r\n        this.inputEl.focus();\r\n      }\r\n    });\r\n    this.children.push(this.label);\r\n\r\n    this.inputEl = document.createElement('input');\r\n    this.inputEl.className = 'flow-connect-input';\r\n    this.inputEl.spellcheck = false;\r\n    this.inputEl.type = this.style.type;\r\n    this.inputEl.value = this.value.toString();\r\n    this.inputEl.onblur = () => {\r\n      this.inputEl.style.visibility = 'hidden';\r\n      this.inputEl.style.pointerEvents = 'none';\r\n    };\r\n    this.inputEl.onchange = (event: any) => {\r\n      this.value = event.target.value;\r\n      this.label.text = this.value.toString();\r\n    }\r\n    document.body.appendChild(this.inputEl);\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.value = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.value = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.value);\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.strokeStyle = this.style.border;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  paintLOD1() {\r\n    this.context.strokeStyle = this.style.border;\r\n    this.context.fillStyle = this.style.backgroundColor;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    this.label.position = this.position;\r\n    this.label.height = this.height;\r\n    this.label.width = this.width;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    let val: string | number;\r\n    if (this.style.type === InputType.Number && typeof newValue === 'string') val = parseInt(newValue);\r\n    else val = newValue;\r\n\r\n    this._value = val;\r\n    this.label.text = this._value.toString();\r\n    this.inputEl.value = this._value.toString();\r\n\r\n    this.output && (this.output as any)['setData'](this.value);\r\n  }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedInput {\r\n    return {\r\n      id: this.id,\r\n      hitColor: this.hitColor.serialize(),\r\n      type: this.type,\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      value: this.value,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedInput): Input {\r\n    return new Input(node, data.value, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Constant, TerminalType, UIType } from '../math/constants';\r\nimport { UINode } from \"./ui-node\";\r\nimport { LabelStyle, Serializable, SerializedLabel, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Label extends UINode implements Serializable {\r\n  displayText: string;\r\n  _text: string;\r\n  textWidth: number;\r\n  textHeight: number;\r\n\r\n  get text(): string {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._text;\r\n  }\r\n  set text(text: string) {\r\n    if (this.propName) {\r\n      this.node.props[this.propName] = text;\r\n    } else {\r\n      this._text = text;\r\n      this.displayText = this._text;\r\n      this.reflow();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    text: string = '',\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    style: LabelStyle = {},\r\n    height?: number,\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Label, false, { ...Constant.DefaultLabelStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'string', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'string', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this._text = this.propName ? this.node.props[this.propName] : text;\r\n    this.displayText = this._text;\r\n    this.reflow();\r\n\r\n    if (!height) this.height = this.textHeight;\r\n    else this.height = height;\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.text = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.text = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.text);\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.fillStyle = this.style.color;\r\n    this.context.font = this.style.fontSize + ' ' + this.style.font;\r\n    this.context.textBaseline = 'top';\r\n    let y = this.position.y + this.height / 2 - this.textHeight / 2;\r\n    let x = this.position.x;\r\n    if (this.style.align === 'left') {\r\n      x += 5;\r\n    } else if (this.style.align === 'center') {\r\n      x += this.width / 2 - this.textWidth / 2;\r\n    } else if (this.style.align === 'right') {\r\n      x += this.width - this.textWidth - 5;\r\n    }\r\n    this.context.fillText(this.displayText, x, y);\r\n  }\r\n  paintLOD1() {\r\n    this.context.strokeStyle = '#000';\r\n    this.context.fillStyle = this.style.color;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    this.context.font = this.style.fontSize + ' ' + this.style.font;\r\n    let metrics = this.context.measureText(this.displayText);\r\n    this.context.font = null;\r\n    this.textWidth = metrics.width;\r\n\r\n    this.textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n    if (typeof this.textHeight === 'undefined') {\r\n      let d = document.createElement(\"span\");\r\n      d.style.font = this.style.fontSize + ' ' + this.style.font;\r\n      d.textContent = \"M\";\r\n      document.body.appendChild(d);\r\n      this.textHeight = d.offsetHeight;\r\n      document.body.removeChild(d);\r\n    }\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._text = newValue;\r\n    this.displayText = this._text;\r\n    this.reflow();\r\n\r\n    this.output && (this.output as any)['setData'](this.text);\r\n  }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedLabel {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      height: this.height,\r\n      text: this.text,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedLabel): Label {\r\n    return new Label(node, data.text, data.propName, data.input, data.output, data.style, data.height, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { Label } from \"./label\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { SelectStyle, Serializable, SerializedSelect, SerializedTerminal } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Select extends UINode implements Serializable {\r\n  label: Label;\r\n  _selected: string;\r\n\r\n  get selected(): string {\r\n    if (this.propName) {\r\n      let value = this.node.props[this.propName];\r\n      value = this.options.length === 0 ? 'None' : (this.options.includes(value) ? value : this.options[0]);\r\n      return value;\r\n    }\r\n    return this._selected;\r\n  }\r\n  set selected(selected: string) {\r\n    let value = this.options.length === 0 ? 'None' : (this.options.includes(selected) ? selected : this.options[0]);\r\n    if (this.propName) this.node.props[this.propName] = value;\r\n    else {\r\n      this._selected = value;\r\n      this.label.text = this.selected;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    public options: string[] = [],\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: SelectStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Select, false, { ...Constant.DefaultSelectStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'string', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'string', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n    this._selected = this.options.length === 0 ? 'None' : this.options[0];\r\n    this.label = new Label(this.node, this.selected, null, false, false, { align: 'center', ...this.style }, this.height);\r\n    this.children.push(this.label);\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.selected = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.selected = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.selected);\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.fillStyle = this.style.arrowColor;\r\n    this.context.beginPath();\r\n    this.context.moveTo(this.position.x, this.position.y + this.height / 2);\r\n    this.context.lineTo(this.position.x + this.width * .15, this.position.y + this.height * .15);\r\n    this.context.lineTo(this.position.x + this.width * .15, this.position.y + this.height * .85);\r\n    this.context.lineTo(this.position.x, this.position.y + this.height / 2);\r\n    this.context.closePath();\r\n    this.context.fill();\r\n\r\n    this.context.fillStyle = this.style.arrowColor;\r\n    this.context.beginPath();\r\n    this.context.moveTo(this.position.x + this.width, this.position.y + this.height / 2);\r\n    this.context.lineTo(this.position.x + this.width * .85, this.position.y + this.height * .15);\r\n    this.context.lineTo(this.position.x + this.width * .85, this.position.y + this.height * .85);\r\n    this.context.lineTo(this.position.x + this.width, this.position.y + this.height / 2);\r\n    this.context.closePath();\r\n    this.context.fill();\r\n  }\r\n  paintLOD1() {\r\n    this.context.fillStyle = this.style.arrowColor;\r\n    this.context.strokeStyle = '#000';\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    this.label.width = this.width * .7;\r\n    this.label.position.x = this.position.x + this.width * .15;\r\n    this.label.position.y = this.position.y + this.height / 2 - this.label.height / 2;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    let value = this.options.length === 0 ? 'None' : (this.options.includes(newValue) ? newValue : this.options[0]);\r\n    this._selected = value;\r\n    this.label.text = this.selected;\r\n\r\n    this.output && (this.output as any)['setData'](this.selected);\r\n  }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    if (this.options.length === 0) return;\r\n    let direction;\r\n    if (realPosition.x < this.position.x + this.width * .15) {\r\n      direction = -1;\r\n    } else if (realPosition.x > this.position.x + this.width * .85) {\r\n      direction = 1;\r\n    } else return;\r\n    this.selected = this.options[(((this.options.indexOf(this.selected) + direction) % this.options.length) + this.options.length) % this.options.length];\r\n    this.label.text = this.selected;\r\n\r\n    this.call('change', this, this.selected);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedSelect {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      options: this.options,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedSelect): Select {\r\n    return new Select(node, data.options, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { clamp, denormalize, normalize } from \"../utils/utils\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { Serializable, SerializedSlider, SerializedTerminal, SliderStyle } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Slider extends UINode implements Serializable {\r\n  thumbFill: number;\r\n  _value: number;\r\n\r\n  get value(): number {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._value;\r\n  }\r\n  set value(value: number) {\r\n    value = clamp(value, this.min, this.max);\r\n    if (this.propName) this.node.props[this.propName] = value;\r\n    else {\r\n      this._value = value;\r\n      this.call('change', this, this.value);\r\n      this.reflow();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    public min: number, public max: number,\r\n    value: number,\r\n    public precision: number = 0,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: SliderStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Slider, true, { ...Constant.DefaultSliderStyle(height), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'number', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'number', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n    this.value = parseFloat(value.toFixed(this.precision));\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.value = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.value = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.value);\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.lineWidth = this.style.railHeight;\r\n    this.context.strokeStyle = this.style.color;\r\n    this.context.lineCap = 'butt';\r\n\r\n    let start = Math.max(this.position.x, this.position.x + this.thumbFill - 3);\r\n    if (start !== this.position.x) {\r\n      this.context.beginPath();\r\n      this.context.moveTo(this.position.x, this.position.y + this.height / 2);\r\n      this.context.lineTo(start, this.position.y + this.height / 2);\r\n      this.context.stroke();\r\n    }\r\n    start = Math.min(this.position.x + 2 * this.style.thumbRadius + this.thumbFill + 3, this.position.x + this.width);\r\n    if (start !== (this.position.x + this.width)) {\r\n      this.context.beginPath();\r\n      this.context.moveTo(start, this.position.y + this.height / 2);\r\n      this.context.lineTo(this.position.x + this.width, this.position.y + this.height / 2);\r\n      this.context.stroke();\r\n    }\r\n\r\n    this.context.fillStyle = this.style.thumbColor;\r\n    this.context.beginPath();\r\n    this.context.arc(this.position.x + this.style.thumbRadius + this.thumbFill, this.position.y + this.height / 2, this.style.thumbRadius, 0, 2 * Math.PI);\r\n    this.context.fill();\r\n  }\r\n  paintLOD1() {\r\n    this.context.strokeStyle = '#000';\r\n    this.context.fillStyle = this.style.color;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    this.thumbFill = denormalize(normalize(this.value, this.min, this.max), 0, this.width - 2 * this.style.thumbRadius);\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._value = newValue;\r\n    this.reflow();\r\n    this.call('change', this, this.value);\r\n\r\n    this.output && (this.output as any)['setData'](this.value);\r\n  }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n\r\n    let y = this.position.y + this.height / 2 - this.style.railHeight / 2;\r\n    this.thumbFill = realPosition.clamp(this.position.x + this.style.thumbRadius, this.position.x + this.width - this.style.thumbRadius, y, y).subtract(this.position.x + this.style.thumbRadius, 0).x;\r\n    this.value = parseFloat(denormalize(normalize(this.thumbFill, 0, this.width - 2 * this.style.thumbRadius), this.min, this.max).toFixed(this.precision));\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedSlider {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      min: this.min,\r\n      max: this.max,\r\n      value: this.value,\r\n      precision: this.precision,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedSlider) {\r\n    return new Slider(node, data.min, data.max, data.value, data.precision, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { fileIcon } from \"../resource/icons\";\r\nimport { Image } from \"./image\";\r\nimport { Label } from \"./label\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { Serializable, SerializedSource, SerializedTerminal, SourceStyle } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Source extends UINode implements Serializable {\r\n  label: Label;\r\n  htmlInput: HTMLInputElement;\r\n  fileIcon: Image;\r\n  _file: File;\r\n\r\n  get file(): File {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._file;\r\n  }\r\n  set file(file: File) {\r\n    if (this.propName) this.node.props[this.propName] = file;\r\n    else {\r\n      this._file = file;\r\n      this.label.text = this._file.name.substring(0, this._file.name.toString().lastIndexOf(\".\"));\r\n      this.call('change', this, this._file);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    public accept?: string,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: SourceStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Source, false, { ...Constant.DefaultSourceStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'file', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'file', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n\r\n    this.htmlInput = document.createElement('input');\r\n    this.htmlInput.type = 'file';\r\n    (accept) && (this.htmlInput.accept = accept);\r\n    this.htmlInput.onchange = () => {\r\n      if (this.htmlInput.files.length > 0) {\r\n        this.file = this.htmlInput.files[0];\r\n      }\r\n    };\r\n\r\n    this.label = new Label(this.node, 'Select', null, false, false, { align: 'center', ...this.style }, this.height);\r\n    this.label.on('click', () => this.htmlInput.click());\r\n\r\n    this.fileIcon = new Image(this.node, fileIcon);\r\n    this.children.push(this.label, this.fileIcon);\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.file = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (data) this.file = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.file);\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.strokeStyle = this.style.borderColor;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  paintLOD1() {\r\n    this.context.strokeStyle = this.style.borderColor;\r\n    this.context.fillStyle = this.style.color;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    this.label.width = this.width;\r\n    this.label.height = this.height;\r\n    this.label.position = this.position;\r\n\r\n    this.fileIcon.width = this.width * .1;\r\n    this.fileIcon.position.x = this.position.x + 5;\r\n    this.fileIcon.position.y = this.position.y + this.height / 2 - this.fileIcon.height / 2;\r\n\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._file = newValue;\r\n    this.label.text = this._file.name.substring(0, this._file.name.toString().lastIndexOf(\".\"));\r\n    this.call('change', this, this._file);\r\n\r\n    this.output && (this.output as any)['setData'](this._file);\r\n  }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedSource {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      accept: this.accept,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedSource) {\r\n    return new Source(node, data.accept, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}\r\n","import { Terminal } from \"../core/terminal\";\r\nimport { Node } from \"../core/node\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { UINode } from \"./ui-node\";\r\nimport { Constant, TerminalType, UIType } from \"../math/constants\";\r\nimport { Serializable, SerializedTerminal, SerializedToggle, ToggleStyle } from \"../core/interfaces\";\r\nimport { Color } from \"../core/color\";\r\n\r\nexport class Toggle extends UINode implements Serializable {\r\n  _checked: boolean = false;\r\n\r\n  get checked(): boolean {\r\n    if (this.propName) return this.node.props[this.propName];\r\n    return this._checked;\r\n  }\r\n  set checked(checked: boolean) {\r\n    if (this.propName) this.node.props[this.propName] = checked;\r\n    else {\r\n      this._checked = checked;\r\n      this.call('change', this, this.checked);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    node: Node,\r\n    propName?: string,\r\n    input?: boolean | SerializedTerminal,\r\n    output?: boolean | SerializedTerminal,\r\n    height?: number,\r\n    style: ToggleStyle = {},\r\n    id?: string,\r\n    hitColor?: Color\r\n  ) {\r\n\r\n    super(node, Vector2.Zero(), UIType.Toggle, false, { ...Constant.DefaultToggleStyle(), ...style }, propName,\r\n      input ?\r\n        (typeof input === 'boolean' ?\r\n          new Terminal(node, TerminalType.IN, 'boolean', '', {}) :\r\n          Terminal.deSerialize(node, input)\r\n        ) :\r\n        null,\r\n      output ?\r\n        (typeof output === 'boolean' ?\r\n          new Terminal(node, TerminalType.OUT, 'boolean', '', {}) :\r\n          Terminal.deSerialize(node, output)\r\n        ) :\r\n        null,\r\n      id, hitColor\r\n    );\r\n\r\n    this._checked = this.propName ? this.node.props[this.propName] : false;\r\n    this.height = height ? height : this.node.style.rowHeight;\r\n\r\n    if (this.input) {\r\n      this.input.on('connect', (terminal, connector) => {\r\n        if (connector.data) this.checked = connector.data;\r\n      });\r\n      this.input.on('data', data => {\r\n        if (typeof data !== 'undefined') this.checked = data;\r\n      });\r\n    }\r\n    if (this.output) this.output.on('connect', (terminal, connector) => connector.data = this.checked);\r\n  }\r\n\r\n  paint(): void {\r\n    this.context.strokeStyle = this.style.backgroundColor;\r\n    this.context.lineWidth = this.height * .75;\r\n    this.context.lineCap = 'round';\r\n    this.context.beginPath();\r\n    this.context.moveTo(this.position.x + this.context.lineWidth / 2, this.position.y + this.height / 2);\r\n    this.context.lineTo(this.position.x + this.width - this.context.lineWidth / 2, this.position.y + this.height / 2);\r\n    this.context.stroke();\r\n\r\n    this.context.fillStyle = this.style.color;\r\n    this.context.beginPath();\r\n    this.context.arc(this.checked ? this.position.x + this.width - this.height / 2 : this.position.x + this.height / 2, this.position.y + this.height / 2, this.height / 2, 0, 2 * Math.PI);\r\n    this.context.fill();\r\n  }\r\n  paintLOD1() {\r\n    this.context.strokeStyle = this.style.color;\r\n    this.context.fillStyle = this.style.backgroundColor;\r\n    this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n    this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  offPaint(): void {\r\n    this.offUIContext.fillStyle = this.hitColor.hexValue;\r\n    this.offUIContext.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  reflow(): void {\r\n    if (this.input) {\r\n      this.input.position.x = this.node.position.x - this.node.style.terminalStripMargin - this.input.style.radius;\r\n      this.input.position.y = this.position.y + this.height / 2;\r\n    }\r\n    if (this.output) {\r\n      this.output.position.x = this.node.position.x + this.node.width + this.node.style.terminalStripMargin + this.output.style.radius;\r\n      this.output.position.y = this.position.y + this.height / 2;\r\n    }\r\n  }\r\n\r\n  onPropChange(oldValue: any, newValue: any) {\r\n    this._checked = newValue;\r\n    this.call('change', this, this.checked);\r\n\r\n    this.output && (this.output as any)['setData'](this.checked);\r\n  }\r\n\r\n  onOver(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('over', this, screenPosition, realPosition);\r\n  }\r\n  onDown(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('down', this, screenPosition, realPosition);\r\n  }\r\n  onUp(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('up', this, screenPosition, realPosition);\r\n  }\r\n  onClick(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('click', this, screenPosition, realPosition);\r\n\r\n    this.checked = !this.checked;\r\n  }\r\n  onDrag(screenPosition: Vector2, realPosition: Vector2): void {\r\n    if (this.disabled) return;\r\n\r\n    this.call('drag', this, screenPosition, realPosition);\r\n  }\r\n  onEnter(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('enter', this, screenPosition, realPosition);\r\n  }\r\n  onExit(screenPosition: Vector2, realPosition: Vector2) {\r\n    if (this.disabled) return;\r\n\r\n    this.call('exit', this, screenPosition, realPosition);\r\n  }\r\n  onContextMenu(): void {\r\n    if (this.disabled) return;\r\n  }\r\n\r\n  serialize(): SerializedToggle {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      hitColor: this.hitColor.serialize(),\r\n      style: this.style,\r\n      propName: this.propName,\r\n      input: this.input ? this.input.serialize() : null,\r\n      output: this.output ? this.output.serialize() : null,\r\n      checked: this.checked,\r\n      height: this.height,\r\n      childs: []\r\n    }\r\n  }\r\n  static deSerialize(node: Node, data: SerializedToggle): Toggle {\r\n    return new Toggle(node, data.propName, data.input, data.output, data.height, data.style, data.id, Color.deSerialize(data.hitColor));\r\n  }\r\n}","import { Color } from \"../core/color\";\r\nimport { Hooks } from \"../core/hooks\";\r\nimport { Node } from \"../core/node\";\r\nimport { Terminal } from \"../core/terminal\";\r\nimport { Vector2 } from \"../math/vector\";\r\nimport { LOD, NodeState, UIType, ViewPort } from '../math/constants';\r\nimport { getNewGUID, intersects } from \"../utils/utils\";\r\nimport { Events } from \"../core/interfaces\";\r\n\r\nexport abstract class UINode extends Hooks implements Events {\r\n  draggable: boolean;\r\n  width: number = 0;\r\n  height: number = 0;\r\n  children: UINode[];\r\n  context: CanvasRenderingContext2D;\r\n  offUIContext: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n  position: Vector2;\r\n  renderState: ViewPort;\r\n  _disabled: boolean;\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(disabled: boolean) {\r\n    this._disabled = disabled;\r\n    this.children.forEach(child => child.disabled = disabled);\r\n  }\r\n\r\n  constructor(\r\n    public node: Node,\r\n    position: Vector2,\r\n    public type: UIType,\r\n    draggable: boolean,\r\n    public style: any,\r\n    public propName?: string,\r\n    public input: Terminal = null, public output: Terminal = null,\r\n    public id: string = getNewGUID(),\r\n    public hitColor?: Color\r\n  ) {\r\n\r\n    super();\r\n    this.id = getNewGUID();\r\n    this.context = this.node.context;\r\n    this.offUIContext = this.node.offUIContext;\r\n    this.setHitColor(hitColor);\r\n    this.position = position;\r\n    this.children = [];\r\n    this.draggable = draggable;\r\n    this.disabled = false;\r\n    if (this.propName) this.node.addPropObserver(this.propName, this.onPropChange.bind(this));\r\n\r\n    if (input) {\r\n      this.node.inputsUI.push(this.input);\r\n      this.input.on('connect', () => this.disabled = true);\r\n      this.input.on('disconnect', () => this.disabled = false);\r\n    }\r\n    if (output) this.node.outputsUI.push(this.output);\r\n  }\r\n\r\n  append(childs: UINode | UINode[]) {\r\n    if (Array.isArray(childs)) {\r\n      this.children.push(...childs);\r\n    } else {\r\n      this.children.push(childs);\r\n    }\r\n    this.update();\r\n  }\r\n  update(): void {\r\n    this.reflow();\r\n    this.children.forEach(child => child.update());\r\n  }\r\n  updateRenderState() {\r\n    if (this.node.renderState.nodeState === NodeState.MINIMIZED) return;\r\n\r\n    let realPos = this.position.transform(this.node.flow.flowConnect.transform);\r\n    this.renderState = intersects(\r\n      0, 0,\r\n      this.node.flow.flowConnect.canvasDimensions.width, this.node.flow.flowConnect.canvasDimensions.height,\r\n      realPos.x, realPos.y,\r\n      realPos.x + this.width * this.node.flow.flowConnect.scale,\r\n      realPos.y + this.height * this.node.flow.flowConnect.scale\r\n    );\r\n\r\n    this.children.forEach(child => child.updateRenderState());\r\n  }\r\n  setHitColor(hitColor: Color) {\r\n    //if (typeof this.hitColor !== 'undefined') return;\r\n\r\n    if (!hitColor) {\r\n      hitColor = Color.Random();\r\n      while (this.node.hitColorToUI[hitColor.rgbaString] || this.node.hitColorToTerminal[hitColor.rgbaString]) hitColor = Color.Random();\r\n    }\r\n    this.hitColor = hitColor;\r\n    this.node.hitColorToUI[this.hitColor.rgbaString] = this;\r\n  }\r\n  render() {\r\n    if (this.renderState === ViewPort.OUTSIDE) return;\r\n\r\n    if (this.node.renderState.lod === LOD.LOD1) {\r\n      this.context.save();\r\n      this.paintLOD1();\r\n      this.context.restore();\r\n    } else if (this.node.renderState.lod === LOD.LOD2) {\r\n      this.context.save();\r\n      this.paint();\r\n      this.context.restore();\r\n\r\n      this.offUIContext.save();\r\n      this.offPaint();\r\n      this.offUIContext.restore();\r\n    } else {\r\n      if (this.type === UIType.Container) {\r\n        this.context.save();\r\n        this.paintLOD1();\r\n        this.context.restore();\r\n      }\r\n    }\r\n\r\n    if (this.node.renderState.lod > 0) {\r\n      if (this.input) this.input.render();\r\n      if (this.output) this.output.render();\r\n    }\r\n\r\n    this.children.forEach(child => child.render());\r\n  }\r\n\r\n  abstract reflow(): void;\r\n  abstract paint(): void;\r\n  abstract paintLOD1(): void;\r\n  abstract offPaint(): void;\r\n\r\n  abstract onOver(screenPosition: Vector2, realPosition: Vector2): void;\r\n  abstract onDown(screenPosition: Vector2, realPosition: Vector2): void;\r\n  abstract onUp(screenPosition: Vector2, realPosition: Vector2): void;\r\n  abstract onClick(screenPosition: Vector2, realPosition: Vector2): void;\r\n  abstract onDrag(screenPosition: Vector2, realPosition: Vector2): void;\r\n  abstract onEnter(screenPosition: Vector2, realPosition: Vector2): void;\r\n  abstract onExit(screenPosition: Vector2, realPosition: Vector2): void;\r\n  abstract onContextMenu(): void;\r\n\r\n  abstract onPropChange(oldValue: any, newValue: any): void;\r\n}\r\n","export class BinarySearchTree<T> {\r\n  root: BinaryTreeNode<T>;\r\n  action: (item: T) => void;\r\n  dataRefToTreeNode: { [key: string]: BinaryTreeNode<T> };\r\n\r\n  constructor(public comparator: (a: T, b: T) => Number, public dataToTreeNodeMapper: (data: T) => string) {\r\n    this.root = null;\r\n    this.dataRefToTreeNode = {};\r\n  }\r\n\r\n  add(data: T) {\r\n    let newNode = new BinaryTreeNode(data);\r\n    this.dataRefToTreeNode[this.dataToTreeNodeMapper(data)] = newNode;\r\n\r\n    if (this.root === null) this.root = newNode;\r\n    else this._insert(this.root, newNode);\r\n  }\r\n  private _insert(root: BinaryTreeNode<T>, newNode: BinaryTreeNode<T>) {\r\n    if (this.comparator(newNode.data, root.data) < 0) {\r\n      if (root.left === null) {\r\n        root.left = newNode;\r\n        newNode.parent = root;\r\n      } else this._insert(root.left, newNode);\r\n    } else {\r\n      if (root.right === null) {\r\n        root.right = newNode;\r\n        newNode.parent = root;\r\n      } else this._insert(root.right, newNode);\r\n    }\r\n  }\r\n\r\n  remove(dataRef: T): boolean {\r\n    let treeNode = this.dataRefToTreeNode[this.dataToTreeNodeMapper(dataRef)];\r\n    if (!treeNode) return false;\r\n    delete this.dataRefToTreeNode[this.dataToTreeNodeMapper(dataRef)];\r\n\r\n    if (treeNode.parent) {\r\n      if (treeNode.parent.left === treeNode) {\r\n        if (treeNode.left === null && treeNode.right === null) {\r\n          treeNode.parent.left = null;\r\n          return true;\r\n        }\r\n\r\n        if (treeNode.left === null) {\r\n          treeNode.right.parent = treeNode.parent;\r\n          treeNode.parent.left = treeNode.right;\r\n          return true;\r\n        } else if (treeNode.right === null) {\r\n          treeNode.left.parent = treeNode.parent;\r\n          treeNode.parent.left = treeNode.left;\r\n          return true;\r\n        }\r\n\r\n        this._deleteMinNode(treeNode);\r\n      } else {\r\n        if (treeNode.left === null && treeNode.right === null) {\r\n          treeNode.parent.right = null;\r\n          return true;\r\n        }\r\n\r\n        if (treeNode.left === null) {\r\n          treeNode.right.parent = treeNode.parent;\r\n          treeNode.parent.right = treeNode.right;\r\n          return true;\r\n        } else if (treeNode.right === null) {\r\n          treeNode.left.parent = treeNode.parent;\r\n          treeNode.parent.right = treeNode.left;\r\n          return true;\r\n        }\r\n\r\n        this._deleteMinNode(treeNode);\r\n      }\r\n    } else {\r\n      if (treeNode.left === null && treeNode.right === null) {\r\n        this.root = null;\r\n        return true;\r\n      }\r\n\r\n      if (treeNode.left === null) {\r\n        treeNode.right.parent = treeNode.parent;\r\n        this.root = treeNode.right;\r\n        return true;\r\n      } else if (treeNode.right === null) {\r\n        treeNode.left.parent = treeNode.parent;\r\n        this.root = treeNode.left;\r\n        return true;\r\n      }\r\n\r\n      this._deleteMinNode(treeNode);\r\n    }\r\n  }\r\n\r\n  private _deleteMinNode(node: BinaryTreeNode<T>) {\r\n    let min = this.findMinNode(node.right);\r\n    node.data = min.data;\r\n    if (min.parent.left === min) {\r\n      min.parent.left = null;\r\n    } else {\r\n      min.parent.right = null;\r\n    }\r\n  }\r\n\r\n  findMinNode(node: BinaryTreeNode<T>): BinaryTreeNode<T> {\r\n    if (node.left === null) return node;\r\n    else return this.findMinNode(node.left);\r\n  }\r\n\r\n  forEach(action: (item: T) => void) {\r\n    this.action = action;\r\n    this._inorder(this.root);\r\n  }\r\n\r\n  private _inorder(node: BinaryTreeNode<T>) {\r\n    if (node !== null) {\r\n      this._inorder(node.left);\r\n      this.action(node.data);\r\n      this._inorder(node.right);\r\n    }\r\n  }\r\n  private _reverseInorder(node: BinaryTreeNode<T>) {\r\n    if (node !== null) {\r\n      this._inorder(node.right);\r\n      this.action(node.data);\r\n      this._inorder(node.left);\r\n    }\r\n  }\r\n}\r\n\r\nexport class BinaryTreeNode<T> {\r\n  left: BinaryTreeNode<T>;\r\n  right: BinaryTreeNode<T>;\r\n  parent: BinaryTreeNode<T>;\r\n\r\n  constructor(public data: T) {\r\n    this.left = null;\r\n    this.right = null;\r\n    this.parent = null;\r\n  }\r\n}","export * from './binary-search-tree';\r\nexport * from './utils';\r\nexport * from './logger';","export enum LogLevel {\r\n  TRACE = 'Trace', INFO = 'Info', WARN = 'Warn', ERROR = 'Error', DISABLED = 'Disabled'\r\n}\r\n\r\nexport class Logger {\r\n  static LOG_LEVEL: LogLevel = LogLevel.DISABLED;\r\n\r\n  static log(...args: any): void {\r\n    if (this.LOG_LEVEL !== LogLevel.TRACE) return;\r\n    console.log.apply(this, args);\r\n  }\r\n  static info(...args: any): void {\r\n    if (this.LOG_LEVEL !== LogLevel.INFO) return;\r\n    console.info.apply(this, args);\r\n  }\r\n  static warn(...args: any): void {\r\n    if (this.LOG_LEVEL !== LogLevel.WARN) return;\r\n    console.warn.apply(this, args);\r\n  }\r\n  static error(...args: any): void {\r\n    if (this.LOG_LEVEL !== LogLevel.ERROR) return;\r\n    console.error.apply(this, args);\r\n  }\r\n}","import { ViewPort } from \"../math/constants\";\r\n\r\nexport const getNewGUID = () => {\r\n  var S4 = () => {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  };\r\n  return (S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4());\r\n};\r\nexport const normalize = (value: number, min: number, max: number) => {\r\n  return (value - min) / (max - min);\r\n};\r\nexport const denormalize = (normalized: number, min: number, max: number) => {\r\n  return (max - min) * normalized + min;\r\n};\r\nexport const getRandom = (min: number, max: number) => {\r\n  return Math.random() * max + min;\r\n};\r\nexport const intersects = (start1X: number, start1Y: number, end1X: number, end1Y: number, start2X: number, start2Y: number, end2X: number, end2Y: number): ViewPort => {\r\n  let intersects = !(start2X > end1X || end2X < start1X || start2Y > end1Y || end2Y < start1Y);\r\n  if (intersects) {\r\n    if (!(start2X < start1X || start2Y < start1Y || end2X > end1X || end2Y > end1Y)) return ViewPort.INSIDE;\r\n    else return ViewPort.INTERSECT;\r\n  } else return ViewPort.OUTSIDE;\r\n};\r\nexport const clamp = (value: number, min: number, max: number): number => {\r\n  return value <= min ? min : (value > max ? max : value);\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(184);\n"],"sourceRoot":""}